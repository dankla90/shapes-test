import { IndexedFormula, NamedNode, Statement, Variable } from "rdflib";
import { Shape } from "../shape";
export declare function dataToStatements<ShapeType, CreateShapeArgs>(shape: Shape<ShapeType, CreateShapeArgs>, data: Partial<CreateShapeArgs>, doc: string): [Statement<import("rdflib/lib/types").SubjectType, import("rdflib/lib/types").PredicateType, import("rdflib/lib/types").ObjectType, import("rdflib/lib/types").GraphType>[], Statement<import("rdflib/lib/types").SubjectType, import("rdflib/lib/types").PredicateType, import("rdflib/lib/types").ObjectType, import("rdflib/lib/types").GraphType>[]];
export declare function deleteStatementsForEmptyValues(store: IndexedFormula, data: Record<string, any>, doc: string): Statement<import("rdflib/lib/types").SubjectType, import("rdflib/lib/types").PredicateType, import("rdflib/lib/types").ObjectType, import("rdflib/lib/types").GraphType>[];
export declare function oldFromNewStatements(store: IndexedFormula, ins: Statement[]): Statement<import("rdflib/lib/types").SubjectType, import("rdflib/lib/types").PredicateType, import("rdflib/lib/types").ObjectType, import("rdflib/lib/types").GraphType>[];
export declare function absoluteToStatements(store: IndexedFormula, data: Record<string, any>, doc: string): Statement<import("rdflib/lib/types").SubjectType, import("rdflib/lib/types").PredicateType, import("rdflib/lib/types").ObjectType, import("rdflib/lib/types").GraphType>[];
export declare function safeNode(doc: string, id?: string | Variable): NamedNode | Variable;
export declare function isEmptyValue(obj: any): boolean;
export declare function absoluteNodeToStatements(store: IndexedFormula, id: string, prop: string, value: any, doc: string): Statement | Statement[];
export declare function normalizedToAbsolute(data: any, contexts: Record<string, string>[], prefixes: Record<string, string>): Record<string, any>;
export declare function normalizedToAbsoluteNode(key: string, nodeValue: any, contexts: Record<string, string>[], prefixes: Record<string, string>): {
    id: any;
} | {
    [x: string]: any;
    id?: undefined;
};
//# sourceMappingURL=dataToRdf.d.ts.map
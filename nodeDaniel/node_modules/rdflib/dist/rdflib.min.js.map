{"version":3,"sources":["webpack://$rdf/webpack/universalModuleDefinition","webpack://$rdf/webpack/bootstrap","webpack://$rdf/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://$rdf/./src/types.ts","webpack://$rdf/./src/log.js","webpack://$rdf/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://$rdf/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://$rdf/./node_modules/@babel/runtime/helpers/createClass.js","webpack://$rdf/./src/uri.ts","webpack://$rdf/./src/utils/terms.ts","webpack://$rdf/./src/named-node.ts","webpack://$rdf/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://$rdf/./src/utils-js.js","webpack://$rdf/./node_modules/@babel/runtime/helpers/inherits.js","webpack://$rdf/./src/node-internal.ts","webpack://$rdf/./src/namespace.ts","webpack://$rdf/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://$rdf/./src/utils.ts","webpack://$rdf/./src/class-order.ts","webpack://$rdf/./src/factories/canonical-data-factory.ts","webpack://$rdf/./src/xsd-internal.js","webpack://$rdf/./src/literal.ts","webpack://$rdf/./src/factories/factory-types.ts","webpack://$rdf/./src/blank-node.ts","webpack://$rdf/./node_modules/n3/src/IRIs.js","webpack://$rdf/./node_modules/@babel/runtime/helpers/typeof.js","webpack://$rdf/./src/variable.ts","webpack://$rdf/./node_modules/jsonld/lib/types.js","webpack://$rdf/./src/store.ts","webpack://$rdf/./src/utils/termValue.ts","webpack://$rdf/./src/node.ts","webpack://$rdf/./node_modules/jsonld/lib/util.js","webpack://$rdf/./node_modules/jsonld/lib/JsonLdError.js","webpack://$rdf/./node_modules/jsonld/lib/graphTypes.js","webpack://$rdf/./src/utils/default-graph-uri.ts","webpack://$rdf/./src/collection.ts","webpack://$rdf/./node_modules/jsonld/lib/url.js","webpack://$rdf/./src/n3parser.js","webpack://$rdf/./src/fetcher.ts","webpack://$rdf/./src/rdfaparser.js","webpack://$rdf/./src/query.js","webpack://$rdf/./src/default-graph.ts","webpack://$rdf/./node_modules/jsonld/lib/context.js","webpack://$rdf/./src/serialize.ts","webpack://$rdf/./node_modules/n3/src/N3DataFactory.js","webpack://$rdf/./src/rdfxmlparser.js","webpack://$rdf/./src/xsd.js","webpack://$rdf/./src/serializer.js","webpack://$rdf/(webpack)/buildin/global.js","webpack://$rdf/./src/statement.ts","webpack://$rdf/./src/parse.ts","webpack://$rdf/./src/formula.ts","webpack://$rdf/./src/factories/extended-term-factory.ts","webpack://$rdf/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://$rdf/./node_modules/jsonld/lib/nodeMap.js","webpack://$rdf/./src/patch-parser.js","webpack://$rdf/./node_modules/async/dist/async.mjs","webpack://$rdf/./node_modules/n3/src/N3Writer.js","webpack://$rdf/./src/convert.js","webpack://$rdf/./src/jsonldparser.js","webpack://$rdf/./node_modules/jsonld/lib/jsonld.js","webpack://$rdf/./node_modules/n3/src/N3Util.js","webpack://$rdf/external \"window\"","webpack://$rdf/./node_modules/rdf-canonize/index.js","webpack://$rdf/./node_modules/rdf-canonize/lib/IdentifierIssuer.js","webpack://$rdf/./node_modules/rdf-canonize/lib/NQuads.js","webpack://$rdf/./node_modules/jsonld/lib/constants.js","webpack://$rdf/./src/empty.ts","webpack://$rdf/./src/jsonparser.js","webpack://$rdf/./src/query-to-sparql.js","webpack://$rdf/./src/sparql-to-query.js","webpack://$rdf/./src/update-manager.ts","webpack://$rdf/./src/factories/rdflib-data-factory.ts","webpack://$rdf/./src/updates-via.js","webpack://$rdf/./src/index.ts","webpack://$rdf/./node_modules/@babel/runtime/regenerator/index.js","webpack://$rdf/./node_modules/solid-namespace/index.js","webpack://$rdf/./node_modules/rdf-canonize/lib/URDNA2015.js","webpack://$rdf/./node_modules/setimmediate/setImmediate.js","webpack://$rdf/./node_modules/rdf-canonize/lib/MessageDigest-browser.js","webpack://$rdf/./node_modules/rdf-canonize/lib/Permuter.js","webpack://$rdf/./node_modules/rdf-canonize/lib/URDNA2015Sync.js","webpack://$rdf/./node_modules/jsonld/lib/RequestQueue.js","webpack://$rdf/./node_modules/lru-cache/index.js","webpack://$rdf/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://$rdf/./node_modules/n3/src/N3Lexer.js","webpack://$rdf/./node_modules/queue-microtask/index.js","webpack://$rdf/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://$rdf/./node_modules/regenerator-runtime/runtime.js","webpack://$rdf/(webpack)/buildin/harmony-module.js","webpack://$rdf/./node_modules/rdf-canonize/lib/index.js","webpack://$rdf/./node_modules/timers-browserify/main.js","webpack://$rdf/./node_modules/process/browser.js","webpack://$rdf/./node_modules/rdf-canonize/lib/URGNA2012.js","webpack://$rdf/./node_modules/rdf-canonize/lib/URGNA2012Sync.js","webpack://$rdf/./node_modules/jsonld/lib/platform-browser.js","webpack://$rdf/./node_modules/jsonld/lib/documentLoaders/xhr.js","webpack://$rdf/./node_modules/jsonld/lib/ContextResolver.js","webpack://$rdf/./node_modules/jsonld/lib/ResolvedContext.js","webpack://$rdf/./node_modules/yallist/yallist.js","webpack://$rdf/./node_modules/yallist/iterator.js","webpack://$rdf/./node_modules/jsonld/lib/NQuads.js","webpack://$rdf/./node_modules/jsonld/lib/expand.js","webpack://$rdf/./node_modules/jsonld/lib/flatten.js","webpack://$rdf/./node_modules/jsonld/lib/fromRdf.js","webpack://$rdf/./node_modules/jsonld/lib/toRdf.js","webpack://$rdf/./node_modules/canonicalize/lib/canonicalize.js","webpack://$rdf/./node_modules/jsonld/lib/frame.js","webpack://$rdf/./node_modules/jsonld/lib/compact.js","webpack://$rdf/./node_modules/jsonld/lib/JsonLdProcessor.js","webpack://$rdf/./node_modules/buffer/index.js","webpack://$rdf/./node_modules/base64-js/index.js","webpack://$rdf/./node_modules/ieee754/index.js","webpack://$rdf/./node_modules/buffer/node_modules/isarray/index.js","webpack://$rdf/./node_modules/n3/src/N3Parser.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__56__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","NamedNodeTermType","BlankNodeTermType","LiteralTermType","VariableTermType","DefaultGraphTermType","CollectionTermType","EmptyTermType","GraphTermType","HTMLContentType","JSONLDContentType","N3ContentType","N3LegacyContentType","NQuadsAltContentType","NQuadsContentType","NTriplesContentType","RDFXMLContentType","SPARQLUpdateContentType","SPARQLUpdateSingleMatchContentType","TurtleContentType","TurtleLegacyContentType","XHTMLContentType","log","debug","x","warn","info","error","success","msg","self","ReferenceError","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","protoProps","staticProps","alert","console","docpart","uri","indexOf","slice","document","RDFlibNamedNode","hostpart","u","exec","join","given","base","baseColon","baseScheme","baseSingle","lastSlash","path","baseHash","lastIndexOf","match","replace","protocol","refTo","k","len","len1","q","ref","ref1","commonHost","RegExp","isStatement","isStore","isCollection","isTerm","termType","isRDFlibObject","isVariable","isLiteral","isQuad","isNamedNode","isBlankNode","isSubject","isPredicate","isRDFObject","isGraph","NamedNode","iri","termValue","ClassOrder","Error","includes","str","this","split","Node","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","string","template","subs","baseA","result","mediaTypeClass","mediaType","trim","linkRelationProperty","relation","callbackify","callbacks","addHook","hook","addCallback","func","push","removeCallback","funcName","splice","insertCallback","unshift","fireCallbacks","args","callback","newCallbacks","replaceCallbacks","apply","DOMParserFactory","DOMParser","ActiveXObject","domToString","node","options","selfClosing","forEach","skipAttributes","dumpNode","out","noEsc","nodeType","hasAttribute","classWithChildText","matches","class","querySelector","element","textContent","skipNodeWithClass","ename","nodeName","toLowerCase","attrList","attributes","atn","test","replaceClassItemWith","source","re","skipClassWithValue","sortAttributes","sort","a","b","localeCompare","childNodes","pop","nodeValue","nl","dtstamp","now","Date","year","getYear","month","getMonth","day","getDate","hour","getUTCHours","minute","getUTCMinutes","second","getSeconds","heavyCompare","y","g","uriMap","nonBlank","signature","lis","statementsMatching","map","st","subject","predicate","concat","undefined","comparison","compareTerms","compareTerm","heavyCompareSPO","output","createElement","body","appendChild","parseXML","parseFromString","contentType","RDFArrayRemove","equals","why","string_startswith","pref","stackString","e","stack","lines","toString","toprint","line","charAt","chunks","subClass","superClass","constructor","bindings","other","classOrder","toCanonical","toNT","Namespace","nsuri","dataFactory","namedNode","ln","_typeof","assertThisInitialized","appliedFactoryMethods","rdf","arrayToStatements","rdfFactory","data","statements","reduce","id","_listObj","listData","nextNode","quad","blankNode","ArrayIndexOf","arr","item","defaultGraph","DefaultGraph","CanonicalDataFactory","supports","Feature","collections","defaultGraphType","equalsMethod","identity","reversibleId","variableType","BlankNode","graph","term","quadToNQ","Variable","nq","termToNQ","Statement","literal","languageOrDatatype","Literal","fromValue","strValue","triple","elements","toNQ","variable","boolean","dateTime","decimal","double","integer","langString","language","datatype","XSD","lang","d2","getUTCFullYear","getUTCMonth","getUTCDate","getUTCSeconds","Math","abs","Number","MAX_SAFE_INTEGER","isInteger","fromDate","fromBoolean","fromNumber","getId","formula","bnodeNew","copyTo","NTAnonymousNodePrefix","fragments","nextId","RDF","SWAP","xsd","type","nil","first","rest","owl","sameAs","forSome","forAll","implies","iterator","Uri","api","isArray","Array","isBoolean","v","isDouble","isNumber","String","isEmptyObject","isObject","keys","isNumeric","isNaN","parseFloat","isFinite","isString","isUndefined","owlNamespaceURI","handleFP","subj","pred","o1","any","equate","handleIFP","s1","handleRDFType","typeCallback","classActions","done","IndexedFormula","features","opts","propertyActions","redirections","aliases","HTTPRedirects","subjectIndex","predicateIndex","objectIndex","whyIndex","index","namespaces","rdfArrayRemove","dataCallback","dataCallbacks","initPropertyActions","statementsCopy","ea","substitute","add","cb","patch","patchCallback","ds","targetKB","binding","doPatch","onDonePatch","bad","ds2","sts","remove","where","query","Query","pat","sync","bindingsFound","fetcher","_existentialVariables","addFn","newPropertyAction","proj","actions","arguments","appNode","objNode","predicateCallback","predHash","canon","holds","hash","ix","h","checkStatementList","from","origin","j","arrayContains","u1","u2","flags","statList","copy","u1in","u2in","replaceWith","bnode","sym","declareExistential","action","toBeFixed","_universalVariables","doc","mentionsURI","myQuery","onDone","indexedFormulaQuery","results","removeStatement","limit","removeStatements","big","small","oldhash","newhash","moveIndex","oldlist","newlist","nowKnownAs","x1","y1","prefix","justOne","list","pattern","wild","iBest","best","pBest","possibles","check","parts","cterm","terms","res","defaultGraphURI","Formula","toJS","graphTypes","types","IdentifierIssuer","JsonLdError","REGEX_LINK_HEADERS","REGEX_LINK_HEADER","REGEX_LINK_HEADER_PARAMS","DEFAULTS","accept","clone","rval","Map","set","Set","asArray","buildHeaders","headers","some","RangeError","assign","Accept","parseLinkHeader","header","entries","params","rel","validateTypeValue","isFrame","every","vv","code","hasProperty","hasValue","val","isList","compareValues","addValue","propertyIsArray","valueIsArray","allowDuplicate","prependValue","getValues","removeProperty","removeValue","values","filter","relabelBlankNodes","input","_labelBlankNodes","issuer","ki","v1","v2","isValue","compareShortestLeast","message","details","super","isSubjectReference","isSimpleGraph","Collection","initial","RdflibBlankNode","closed","shift","collection","parsers","simple","regex","full","parse","parser","parsed","scheme","port","href","authority","normalizedPath","removeDotSegments","prependBase","isAbsolute","transform","substr","fragment","removeBase","baseSegments","iriSegments","last","next","isAbsoluteRegex","isRelative","Utf8","utftext","charCodeAt","fromCharCode","Logic_NS","pyjslib_Tuple","theList","pyjslib_List","pyjslib_Dict","listOfPairs","pyjslib_len","pyjslib_slice","StopIteration","pyjslib_Iterator","li","string_find","assertFudge","condition","desc","encode","encoding","decode","uripath_join","_notNameChars","_notQNameChars","number_syntax","datetime_syntax","interesting","langcode","createSinkParser","store","openFormula","thisDoc","baseURI","genPrefix","metaURI","SinkParser","_bindings","_flags","_store","setGenPrefix","_thisDoc","statementCount","startOfLine","previousLine","_genPrefix","keywords","keywordsSet","_anonymousNodes","_variables","_parentVariables","_reason","_reason2","_baseURI","RDFSink_uniqueURI","_formula","_context","_parentContext","stream","loadBuf","read","buf","startDoc","feed","endDoc","octets","skipSpace","directiveOrStatement","BadSyntax","directive","statement","checkDot","tok","commaSeparatedList","setKeywords","__x","newUniversal","uri_ref2","qname","encodeURI","hexify","qn","setPrefixForURI","property_list","prop","nodeOrLiteral","ch","ahead","here","makeStatement","subjectAlready","bnodeID","objs","objectList","__obj","mylist","first_run","newSet","oldParentContext","parentAnonymousNodes","grandParentVariables","reason2","close","thing_type","verb","pairFudge","dir","ofUris","bareWord","pfx","anonymousNode","symb","uref","delim","strconst","lastIndex","parseInt","dt","startline","res2","ustr","uEscape","UEscape","count","uch","uesc","__OLD_BadSyntax","_str","_i","_why","_uri","lineNo","SyntaxError","characterInFile","syntaxProblem","pre","post","Parsable","CONTENT_TYPE_BY_EXT","getNS","link","http","httph","rdfs","dc","ldp","Handler","response","dom","RDFXMLHandler","responseText","kb","Util","documentElement","failFetch","resource","RDFParser","original","err","noMeta","doneFetch","mediatypes","XHTMLHandler","reverse","title","getElementsByTagName","links","getAttribute","linkData","scripts","rdfParse","noRDFa","parseRDFaDOM","XMLHandler","isElement","namespaceURI","addStatus","req","doctype","publicId","systemId","html","xmlns","ELEMENT_NODE","HTMLHandler","isXML","docTypeStart","docTypeEnd","isXHTML","isXMLNS","titleMatch","JsonLdHandler","Promise","resolve","reject","jsonldParser","TextHandler","N3Handler","N3Parser","defaultHandlers","Fetcher","timeout","_fetch","fetch","global","solidFetcher","solidFetch","crossFetch","requested","timeouts","redirectedTo","fetchQueue","fetchCallbacks","nonexistent","lookedUp","handlers","addHandler","all","load","uriIn","docuri","initFetchOptions","initialisedOptions","pendingFetchPromise","originalUri","pendingPromise","force","race","setRequestTimeout","fetchUri","cleanupFetchRequest","then","clearTimeout","_options","setTimeout","isPending","method","toUpperCase","Headers","cache","acceptString","requestedURI","offlineOverride","setCredentials","actualProxyURI","proxyIfNecessary","proxyUsed","unsupportedProtocol","state","getState","status","ok","statusText","dummyResponse","url","bodyUsed","size","saveRequestMetadata","handleResponse","errno","handleError","p2","userCallback","referringTerm","fetchResponse","oops","statusMessage","getHours","getMinutes","getMilliseconds","statusNode","the","append","errorMessage","statusCode","meth","encodeURIComponent","linkHeader","reqNode","paramexp","substring","was","lookUpThing","uriSting","serialize","jsonString","webOperation","catch","there","unload","parentURI","folderName","invalidateCache","text","e2","rterm","uris","requests","each","request","anyValue","startsWith","timeNow","responseNode","refresh","nowOrWhenFetched","clearPreviousData","exp","getHeader","getTime","removeMany","removeDocument","handler","register","retriedWithNoCredentials","newOptions","credentials","location","isCrossSite","retryNoCredentials","proxyUri","crossSiteProxy","redirectToProxy","rdfType","locURI","prev","reqURI","redirection","saveResponseMetadata","normalizedContentType","contentLocation","saveErrorResponse","diffLocation","absContentLocation","addType","isImage","handlerForContentType","content","find","forceContentType","guess","guessContentType","newURI","oldReq","acceptstring","crossSiteProxyTemplate","UI","panes","preferences","isExtension","$SolidTestEnvironment","localSiteMap","lookup","z","pcol","withCredentials","HANDLERS","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","RDFaProcessor","subjects","prefixes","blankNodes","htmlOptions","theOne","vocabulary","blankCounter","langAttributes","localName","inXHTMLMode","absURIRE","finishedHandlers","init","su","ob","pr","or","toRDFNodeObject","parentNode","mappings","newMappings","dateTimeTypes","matched","colon","NCNAME","curie","parseCURIE","resolveAndNormalize","defaultVocabulary","ignoreTerms","parseTermOrCURIEOrAbsURI","tokenize","parseCURIEOrURI","setContext","queue","removeHash","baseURIMap","current","context","parent","listMapping","bnodes","newBlankNode","addTriple","objectURI","skip","newSubject","currentObjectResource","typedResource","prefixesCopied","incomplete","listMappingDifferent","parseURI","vocabAtt","getAttributeNode","baseSubject","spec","att","copyMappings","prefixAtt","parsePrefixMappings","xmlLangAtt","getAttributeNodeNS","relAtt","revAtt","typeofAtt","propertyAtt","datatypeAtt","datetimeAtt","inHTMLMode","contentAtt","aboutAtt","srcAtt","resourceAtt","hrefAtt","inlistAtt","relAttPredicates","parsePredicate","revAttPredicates","parseSafeCURIEOrCURIEOrURI","parentObject","newSubjectOrigin","typeURI","forward","PlainLiteralURI","XMLLiteralURI","HTMLLiteralURI","deriveDateTimeType","childContext","listSubject","child","lastChild","previousSibling","copyProperties","setXHTMLContext","setHTMLContext","setXMLContext","setInitialContext","process","nameChar","nameStartChar","vars","bindingDebug","bindingsDebug","nbs","unifyContents","nbs2","actual","isVar","complexType","defaultDocumentURI","unifyTerm","nb","nb2","bindings2","union","OptionalBranchJunction","originalCallback","trunkBindings","branches","MandatoryBranch","checkAllDone","doCallBacks","reportMatch","reportDone","OptionalBranch","junction","prepare","f","termIndex","ind","nvars","easiestQuery","bindingsSoFar","level","localCallback","branch","pattern_debug","optional","br","matchIndex","fetchResource","requestedTerm","xhr","match2","constraintsSatisfied","constraints","nk","newBindings1","nbs1","nc","onward","trunck","initBindings","isDefaultGraph","util","_isArray","_isObject","_isString","_isUndefined","_isAbsoluteIri","_isRelativeIri","_asArray","_compareShortestLeast","INITIAL_CONTEXT_CACHE","KEYWORD_PATTERN","_expandIri","activeCtx","relativeTo","localCtx","defined","isKeyword","createTermDefinition","vocab","mapping","suffix","_prefix","async","propagate","overrideProtected","cycles","resolved","contextResolver","documentLoader","previousContext","resolvedContext","ctx","protected","protectedMode","processed","getProcessed","oldActiveCtx","getInitialContext","_protected","setProcessed","processingMode","resolvedImport","processedImport","importCtx","keyCtx","has","validKeys","previousMapping","delete","simpleTerm","kw","_termHasColon","container","validContainers","isValid","hasSet","direction","nest","_deepCompare","x2","x1Array","k1s","k2s","k1","expandIri","JSON","stringify","cached","initialContext","inverse","getInverse","fastCurieMap","irisToTerms","defaultLanguage","defaultDirection","ids","entry","fastCurieEntry","_addPreferredTerm","_buildIriMap","revertToPreviousContext","clear","iriMap","idx","letter","typeOrLanguageValue","getContextValue","version","sz","Serializer","setFlags","n3String","newSts","suggestNamespaces","setBase","executeCallback","statementsToXML","statementsToN3","statementsToNTriples","convert","DEFAULTGRAPH","_blankNodeCounter","DataFactory","languageOrDataType","Term","atPos","datatypeString","dtPos","char","Quad","_subject","_predicate","_object","_graph","toJSON","reify","uriUtil","rdfid","NODE","ARC","addSymbol","isTripleToLoad","loadTriple","listIndex","attributeNode","potentialNode","children","cleanParser","DOCUMENT","ELEMENT","frameFactory","parseDOM","buildFrame","frame","elementURI","el","dig","attrs","TEXT","CDATA_SECTION","addArc","addLiteral","addCollectionArc","removeAttributeNode","parsetype","nv","addBNode","addCollection","bnid2","addNode","about","bnid","rdftype","pframe","candidate","terminateFrame","removeAttribute","createXSD","localFactory","createSerializer","nsKeys","solidNs","suggestPrefix","namespacesUsed","prefixchars","incoming","formulas","fromNT","px","prefixs","canUse","pp","validPrefix","slash","allBnodes","checkMentions","ss","toStr","roots","xNT","fromStr","rootsHash","backslashUify","sorted","rdfns","termToNT","atomicTermToN3","defaultNamespace","predMap","spaces","treeToLine","tree","s2","statementListToTree","stats","rootSubjects","subjectTree","termToN3","propertyTree","objectTree","lastPred","objects","expr","prefixDirectives","explicitURI","treeToString","lastLength","eNotation","stringToN3","symbolToN3","forbidden","forbidden3","forbidden1","canSplit","localid","namesp","keyords","makeUpPrefix","write","session","sources","metaSources","metadata","namespaceCounts","liPrefix","XMLtreeToLine","statementListToXMLTree","subjectXMLTree","escapeForXML","relURI","propertyXMLTree","ap","bp","as","bs","an","bn","number","collectionXMLTree","tag","ns2","XMLtreeToString","Function","DefaultGraphNode","sparqlUpdateParser","n3Parser","N3jsParser","nquadCallback","executeErrorCallback","cause","nquads","tripleCallback","handled","Graph","factoryMethod","anyStatementMatching","bots","bottom","len2","len3","hashString","thisClass","len4","members","ref2","ref3","ref4","ref5","seeds","transitiveClosure","NTtoURI","findMembersNT","findTypesNT","excludePredicateURIs","todo","doneArcs","follow","_features","addAll","provenance","documentString","sups","agenda","tops","ExtendedTermFactory","__self__","F","DOMException","support","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","normalizeValue","iteratorFor","items","getOwnPropertyNames","consumed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Uint8Array","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","readAsText","chars","readArrayBufferAsText","formData","json","oldValue","thisArg","methods","Request","upcased","signal","referrer","form","bytes","decodeURIComponent","Response","bodyInit","redirectStatuses","redirect","aborted","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","responseURL","ontimeout","onabort","open","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","default","createMergedNodeMap","graphs","createNodeMap","mergeNodeMaps","_list","properties","referencedNode","reverseMap","reverseProperty","itemName","mergeNodeMapGraphs","merged","mergedNode","graphNames","graphName","nodeMap","SQNS","clauses","badSyntax","found","initialParams","fn","hasQueueMicrotask","queueMicrotask","hasSetImmediate","setImmediate","hasNextTick","nextTick","fallback","wrap","defer","setImmediate$1","asyncify","isAsync","handlePromise","invokeCallback","wrapAsync","asyncFn","awaitify","arity","cbArgs","applyEach","eachfn","fns","callArgs","that","_asyncMap","iteratee","counter","_iteratee","_","iterCb","isArrayLike","breakLoop","once","wrapper","callFn","createIterator","coll","createArrayIterator","okeys","getIterator","createES2015Iterator","onlyOnce","asyncEachOfLimit","generator","canceled","awaiting","running","replenish","iterDone","iterateeCallback","eachOfLimit","asyncIterator","isAsyncIterable","nextElem","looping","elem","eachOfLimit$2","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","Infinity","eachOf$1","map$1","applyEach$1","eachOfSeries$1","mapSeries$1","applyEachSeries","PROMISE_SYMBOL","promiseCallback","rej","auto","tasks","concurrency","numTasks","runningTasks","hasError","listeners","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","taskCallback","safeResults","rkey","processQueue","taskFn","runTask","run","getDependents","taskName","dependencies","remainingDependencies","dependencyName","taskListeners","addListener","currentTask","dependent","checkForDeadlocks","FN_ARGS","ARROW_FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","DLL","head","tail","newNode","insertBefore","setInitial","insertAfter","removeLink","cur","testFn","curr","dll","worker","payload","_worker","numRunning","workersList","events","drain","saturated","unsaturated","empty","off","event","ev","trigger","processingScheduled","_insert","insertAtFront","rejectOnError","started","_tasks","_createCB","idle","_maybeDrain","eventMethod","handleAndRemove","on","isProcessing","paused","datum","min","defineProperties","reduce$1","memo","seq","functions","_functions","newargs","nextargs","mapLimit$1","concatLimit$1","mapResults","concat$1","concatSeries$1","_createTester","getResult","testResult","testPassed","detect$1","bool","detectLimit$1","detectSeries$1","consoleFunc","resultArgs","doWhilst$1","_fn","_test","truth","_withoutIndex","eachLimit$2","eachSeries$1","ensureAsync","innerArgs","every$1","everyLimit$1","everySeries$1","filterArray","truthValues","filterGeneric","_filter","filter$1","filterLimit$1","filterSeries$1","forever$1","errback","groupByLimit$1","mapValuesLimit$1","newObj","_parallel","taskCb","queue$1","Heap","heap","pushCount","MIN_SAFE_INTEGER","smaller","percUp","top","percDown","priority","race$1","reduceRight","array","reversed","reflect","reflectCallback","retVal","reject$2","rejectLimit$1","rejectSeries$1","constant$1","retry","times","intervalFunc","parseTimes","_task","attempt","retryAttempt","errorFilter","acc","interval","some$1","Boolean","someLimit$1","someSeries$1","sortBy$1","criteria","comparator","left","right","timesLimit","range","tryEach$1","whilst$1","waterfall$1","taskIndex","nextTask","autoInject","newTasks","fnIsAsync","hasNoDeps","newTask","src","arg","parseParams","newArgs","cargo","cargoQueue","compose","concatLimit","concatSeries","constant","ignoredArgs","detect","detectLimit","detectSeries","doUntil","doWhilst","eachLimit","eachOf","eachOfSeries","eachSeries","everyLimit","everySeries","filterLimit","filterSeries","forever","groupBy","groupByLimit","groupBySeries","mapLimit","mapSeries","mapValues","mapValuesLimit","mapValuesSeries","memoize","hasher","queues","memoized","unmemoized","parallel","parallelLimit","priorityQueue","reflectAll","rejectLimit","rejectSeries","retryable","series","someLimit","someSeries","sortBy","milliseconds","timer","timedOut","timesSeries","accumulator","tryEach","unmemoize","until","waterfall","whilst","allLimit","allSeries","anyLimit","anySeries","findLimit","findSeries","flatMap","flatMapLimit","flatMapSeries","forEachSeries","forEachLimit","forEachOf","forEachOfSeries","forEachOfLimit","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","during","doDuring","N3DataFactory","escapeAll","escapedCharacters","outputStream","_prefixRegex","_lists","lists","_outputStream","_endStream","end","chunk","format","_lineMode","_writeQuad","_writeQuadLine","_prefixIRIs","addPrefixes","baseIRI","_baseMatcher","escapeRegex","endsWith","_baseLength","_write","_inDefaultGraph","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","quads","entity","_encodeQuad","characterReplacer","prefixMatch","_encodeLiteral","addQuad","hasPrefixes","IRIlist","prefixList","prefixIRI","contents","_blockedWrite","singleDone","character","convertToJson","jsonCallback","Parser","n3Writer","Writer","asyncLib","jsonld","fromRDF","convertToNQuads","nquadString","jsonldObjectToTerm","listToCollection","listId","listItem","listToStatements","baseString","flatten","flattened","flatResource","addStatement","createStatement","canonize","platform","ContextResolver","LRU","NQuads","expand","_expand","_flatten","_fromRDF","toRDF","_toRDF","frameMergedOrDefault","_frameMergedOrDefault","cleanupNull","_cleanupNull","_isSubjectReference","_getInitialContext","_processContext","_processingMode","compact","_compact","compactIri","_compactIri","_createNodeMap","_createMergedNodeMap","_mergeNodeMaps","_rdfParsers","_resolvedContextCache","max","_setDefaults","defaults","expanded","compactArrays","compactToRelative","skipExpansion","sharedCache","processContext","compacted","compactionMap","tmp","hasContext","graphAlias","keepFreeFloatingNodes","expansionMap","toResolve","contextsToProcess","expandContext","defaultBase","remoteDoc","documentUrl","contextUrl","remoteContext","embed","explicit","requireAll","omitDefault","bnodesToClear","frameContext","omitGraph","pruneBlankNodeIdentifiers","expandedFrame","frameKeys","is11","framed","framing","normalize","algorithm","inputFormat","parsedInput","produceGeneralizedRdf","dataset","rdfParser","parsedDataset","merge","docs","mergeNodes","_graphs","_nodeMap","_documentLoader","documentLoaders","useDocumentLoader","registerRDFParser","unregisterRDFParser","promises","RequestQueue","JsonLdProcessor","setupGlobals","setupDocumentLoaders","existing","_existing","old","identifier","RDF_LANGSTRING","XSD_STRING","REGEX","_compareTriples","t1","t2","eoln","lineNumber","_unescapeRegex","U","unique","legacyDatasetToQuads","serializeQuad","nquad","_escapeRegex","_escape","termTypeMap","IRI","componentName","oldComponent","newComponent","LINK_HEADER_REL","LINK_HEADER_CONTEXT","RDF_LIST","RDF_FIRST","RDF_REST","RDF_NIL","RDF_TYPE","RDF_PLAIN_LITERAL","RDF_XML_LITERAL","RDF_JSON_LITERAL","RDF_OBJECT","XSD_BOOLEAN","XSD_DOUBLE","XSD_INTEGER","Empty","parseJSON","preds","queryToSPARQL","indent","getPattern","addIndent","getConstraints","foo","describe","getWhere","getOptionals","getSelect","getSPARQL","SPARQLToQuery","SPARQL","testMode","variableHash","makeVar","newVar","isRealText","fixSymbolBrackets","isSymbol","isBnode","isPrefix","isPrefixedSymbol","getPrefix","getSuffix","removeBrackets","spaceDelimit","arrayIndexOf","arrayIndicesOf","getMatchingBracket","ConstraintEqualTo","varstr","ConstraintRegexp","rg","setConstraint","setOptional","opt","setWhere","toTerms","filt","arrayZero","per","stat","sem","stat2","com","stat3","extractStatements","sp","token1","parseLiterals","sin","doub","end2","token2","strarr","replaceKeywords","prefInd","symbol","getPrefixDeclarations","selectLoc","whereLoc","label","setVars","UpdateManager","updater","ifps","fps","patchControl","isHttpUri","definitive","wacAllow","lr","acceptPatch","authorVia","mentioned","stmt","anonymize","statementBnodes","bnodes2","depth","isBlank","bnodeContext2","con","connectedStatements","cacheIfps","bnodeContext1","bnodeContext","anonymizeNT","callbackFunction","statementContext","statementNT","contextWhere","set_object","fire","st0","stText","control","patchControlFor","pendingUpstream","downstreamAction","upstreamCount","linkHeaders","listener","downstreamChangeListeners","setRefreshHandler","reloadAndSync","reloading","outOfDate","retryTimeout","tryReload","reload","wssURI","getUpdatesVia","theHandler","retries","validWssURI","uriJoin","openWebsocket","socket","WebSocket","onopen","requestDownstreamAction","onclose","onmessage","deletions","insertions","thisUpdater","uniqueDocs","uniqueDoc","updates","update","secondTry","errorBody","is","startTime","editable","statementArrayBnodes","whereClause","elapsedTimeMs","updateDav","updateLocalFile","targetURI","candidateTarget","dot","ext","onErrorWasCalled","reloadTimeTotal","reloadTimeCount","RDFlibDataFactory","lit","UpdatesSocket","via","connected","pending","subscribed","onOpen","onClose","onMessage","onError","elt","_send","onUpdate","_decode","_subscribe","UpdatesVia","onHeaders","etag","subscribe","boundDataFactory","NextId","ConnectedStore","Store","LiveStore","acl","cal","cert","contact","dct","doap","foaf","geo","gpx","icalTZ","meeting","mo","org","pad","prov","qu","trip","rss","sched","schema","sioc","solid","space","tab","tabont","ui","vcard","wf","cco","alias","expansion","MessageDigest","Permuter","_stringHashCompare","blankNodeInfo","canonicalIssuer","hashAlgorithm","_addBlankNodeQuadInfo","component","hashToBlankNodes","nonNormalized","_yield","_hashAndTrackBlankNode","hashes","nonUnique","idList","hashPathList","hasId","hashNDegreeQuads","oldIds","getOldIds","normalized","_useCanonicalId","modifyFirstDegreeComponent","md","digest","related","position","getRelatedPredicate","hashToRelated","createHashToRelated","chosenIssuer","chosenPath","permuter","hasNext","permutation","issuerCopy","recursionList","nextPermutation","_addRelatedBlankNodeHash","hashFirstDegreeQuads","hashRelatedBlankNode","registerImmediate","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","MessageChannel","port1","port2","script","removeChild","random","attachEvent","clearImmediate","crypto","msCrypto","subtle","_content","TextEncoder","hex","padStart","pos","swap","_requests","loader","_loader","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","doUse","hit","isStale","del","unshiftNode","maxAge","diff","walker","removeNode","Entry","forEachStep","thisp","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lC","toArray","expiresAt","asyncGeneratorStep","gen","_next","_throw","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","N3Lexer","_simpleApostropheString","_prefixed","_variable","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","lineMode","_n3Mode","n3","_comments","comments","_literalClosingPos","inputFinished","_input","outputComments","whiteSpaceMatch","comment","_line","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","token","previousToken","_syntaxError","invalid","replaced","sequence","unicode4","unicode8","escapedChar","charCode","opening","openingLength","closingPos","backslashCount","raw","issue","_readStartingBom","tokens","_tokenizeToEnd","_pendingBuffer","setEncoding","Buffer","_setPrototypeOf","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","iter","skipTempReset","stop","rootRecord","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","originalModule","webpackPolyfill","URDNA2015","URGNA2012","URDNA2015Sync","URGNA2012Sync","rdfCanonizeNative","_rdfCanonizeNative","useNative","canonical","main","_canonizeSync","canonizeSync","Timeout","clearFn","_id","_clearFn","scope","setInterval","clearInterval","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","noop","browser","env","argv","versions","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","cwd","chdir","umask","xhrLoader","secure","wrapLoader","_get","httpStatusCode","alternate","getResponseHeader","linkedContext","ResolvedContext","_throwInvalidLocalContext","perOpCache","allResolved","_resolveRemoteContext","_cacheResolvedContext","tagMap","_fetchContext","_resolveContextUrls","processedCtx","insert","inserted","pushNode","forEachReverse","getReverse","mapReverse","reduceReverse","toArrayReverse","to","ret","sliceReverse","start","deleteCount","nodes","er","_isEmptyObject","_isList","_isValue","_isGraph","_isSubject","_getContextValue","_isKeyword","_addValue","_getValues","_validateTypeValue","REGEX_BCP47","_expandValue","activeProperty","expandedProperty","_expandLanguageMap","languageMap","expandedKey","_expandIndexMap","asGraph","indexKey","propertyIndex","isTypeIndex","insideList","insideIndex","typeScopedContext","mapped","unmappedValue","expandedParent","expandedActiveProperty","propertyScopedCtx","mustRevert","typeKey","_expandObject","nests","unexpandedValue","isJsonType","expandedValue","unmappedProperty","keyword","fromEntries","includedResult","ii","termCtx","nextActiveProperty","nestedValues","validCount","_RDFToObject","useNativeTypes","rdfDirection","toFixed","useRdfType","graphMap","referencedOnce","objectIsNode","usages","graphObject","usage","listNodes","nodeKeyCount","listNode","graphSubjects","graphSubject","jsonCanonicalize","_graphToRDF","graphTerm","_objectToRDF","toExponential","_listToRDF","cv","ci","_mergeNodeMapGraphs","_createImplicitFrame","_createsCircularReference","subjectToEmbed","subjectStack","_getFrameFlag","flag","_validateFrame","_filterSubject","wildcard","matchesSome","matchThis","nodeValues","isEmpty","tt","thisFrame","hasDefault","listValue","nodeListValues","lv","_valueMatch","_nodeMatch","_removeEmbed","embeds","uniqueEmbeds","useArray","removeDependents","_addFrameOutput","nodeObject","l1","l2","embedded","bnodeMap","_cleanupPreserve","_filterSubjects","recurse","subframe","oo","preserve","reverseProp","_isSimpleGraph","_removeBase","_prependBase","_checkNestProperty","nestProperty","linked","compactValue","insideReverse","inputCtx","typeContext","compactedType","itemActiveProperty","nestResult","expandedItem","inner","compactedItem","mapObject","containerKey","others","idKey","compactedValue","compactedProperty","expandedIri","isPropertyTermScoped","inverseCtx","containers","typeOrLanguage","commonLanguage","commonType","itemLanguage","itemType","prefs","langDir","containerMap","typeOrLanguageValueMap","_selectTerm","choice","partialMatches","maxPartialLength","td","preserveIndex","keyCount","isValueOnlyKey","hasDefaultLanguage","isValueString","hasNullMapping","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","encodingOrOffset","allocUnsafe","byteOffset","fromArrayLike","fromArrayBuffer","isEncoding","fromString","isBuffer","checked","fromObject","assertSize","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","hexWrite","offset","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","toHex","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","dst","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","encodeChunk","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","blankNodePrefix","_contextStack","_setBase","initDataFactory","isTurtle","isTriG","isNTriples","isNQuads","isN3","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","_explicitQuantifiers","explicitQuantifiers","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","n3Mode","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","quantifier","_resolveIRI","_namedNode","_blankNode","_saveContext","_readBlankNodeHead","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_readEntity","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","_restoreContext","_readPredicateAfterBlank","previousList","_readListItemDataTypeOrLang","_completeObjectLiteral","_completeLiteral","_readCallback","inversePredicate","_readFormulaTail","_readInTopContext","_readQuadPunctuation","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTail","_quad","contextStack","_readRDFStarTailOrGraph","_removeDotSegments","pathStart","segmentStart","quadCallback","prefixCallback"],"mappings":"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","file":"rdflib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"window\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"window\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$rdf\"] = factory(require(\"window\"));\n\telse\n\t\troot[\"$rdf\"] = factory(root[\"window\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__56__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 75);\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import Node from './node-internal'\nimport RDFlibVariable from './variable'\nimport RDFlibBlankNode from './blank-node'\nimport Collection from './collection'\nimport RDFlibLiteral from './literal'\nimport RDFlibNamedNode from './named-node'\nimport RDFlibDefaultGraph from './default-graph'\nimport { DataFactory } from './factories/factory-types'\nimport IndexedFormula from './store'\nimport Fetcher from './fetcher'\nimport Statement from './statement'\nimport Empty from './empty'\nimport { NamedNode, Term, Quad_Subject, Quad_Predicate, Quad_Object, Quad_Graph } from './tf-types'\n\nexport const NamedNodeTermType = \"NamedNode\" as const\nexport const BlankNodeTermType = \"BlankNode\" as const\nexport const LiteralTermType = \"Literal\" as const\nexport const VariableTermType = \"Variable\" as const\nexport const DefaultGraphTermType = \"DefaultGraph\" as const\n// Non-RDF/JS types:\nexport const CollectionTermType = \"Collection\" as const\nexport const EmptyTermType = \"Empty\" as const\nexport const GraphTermType = \"Graph\" as const\n\nexport type TermType = typeof NamedNodeTermType\n  | typeof BlankNodeTermType\n  | typeof LiteralTermType\n  | typeof VariableTermType\n  | typeof DefaultGraphTermType\n  | typeof CollectionTermType\n  | typeof EmptyTermType\n  | typeof GraphTermType\n\nexport const HTMLContentType = \"text/html\" as const\nexport const JSONLDContentType = \"application/ld+json\" as const\nexport const N3ContentType = \"text/n3\" as const\nexport const N3LegacyContentType = \"application/n3\" as const\nexport const NQuadsAltContentType = \"application/nquads\" as const\nexport const NQuadsContentType = \"application/n-quads\" as const\nexport const NTriplesContentType = \"application/n-triples\" as const\nexport const RDFXMLContentType = \"application/rdf+xml\" as const\nexport const SPARQLUpdateContentType = \"application/sparql-update\" as const\nexport const SPARQLUpdateSingleMatchContentType = \"application/sparql-update-single-match\" as const\nexport const TurtleContentType = \"text/turtle\" as const\nexport const TurtleLegacyContentType = \"application/x-turtle\" as const\nexport const XHTMLContentType = \"application/xhtml+xml\" as const\n\n/**\n * A valid mime type header\n */\nexport type ContentType = typeof RDFXMLContentType\n  | typeof HTMLContentType\n  | typeof JSONLDContentType\n  | typeof N3ContentType\n  | typeof N3LegacyContentType\n  | typeof NQuadsAltContentType\n  | typeof NQuadsContentType\n  | typeof SPARQLUpdateContentType\n  | typeof SPARQLUpdateSingleMatchContentType\n  | typeof TurtleContentType\n  | typeof TurtleLegacyContentType\n  | typeof XHTMLContentType\n\n/** A type for values that serves as inputs */\nexport type ValueType = Term | Node | Date | string | number | boolean | undefined | null | Collection\n\n/**\n * In this project, there exist two types for the same kind of RDF concept.\n * We have RDF/JS spec types (standardized, generic), and RDFlib types (internal, specific).\n * When deciding which type to use in a function, it is preferable to accept generic inputs,\n * whenever possible, and provide strict outputs.\n * In some ways, the TF types in here are a bit more strict.\n * Variables are missing, and the statement requires specific types of terms (e.g. NamedNode instead of Term).\n */\n\n/** An RDF/JS Subject */\nexport type SubjectType = RDFlibBlankNode | RDFlibNamedNode | RDFlibVariable\n/** An RDF/JS Predicate */\nexport type PredicateType = RDFlibNamedNode | RDFlibVariable\n/** An RDF/JS Object */\nexport type ObjectType = RDFlibNamedNode | RDFlibLiteral | Collection | RDFlibBlankNode | RDFlibVariable | Empty\n/** An RDF/JS Graph */\nexport type GraphType = RDFlibDefaultGraph | RDFlibNamedNode | RDFlibVariable // | Formula\n\nexport interface Bindings {\n  [id: string]: Term;\n}\n\n/** All the types that a .fromValue() method might return */\nexport type FromValueReturns<C extends Node = any> = Term | undefined | null | Collection<C>\n\nexport interface IRDFlibDataFactory extends DataFactory<\n  RDFlibNamedNode | RDFlibBlankNode | RDFlibLiteral | Collection | Statement\n> {\n  fetcher: (store: IndexedFormula, options: any) => Fetcher\n  lit: (val: string, lang?: string, dt?: NamedNode) => RDFlibLiteral\n  graph: (features?, opts?) => IndexedFormula\n  st: (\n    subject: Quad_Subject,\n    predicate: Quad_Predicate,\n    object: Quad_Object,\n    graph?: Quad_Graph\n  ) => Statement\n}\n","/**\n * A Dummy log\n * @module log\n */\nconst log = {\n  debug (x) {},\n  warn (x) {},\n  info (x) {},\n  error (x) {},\n  success (x) {},\n  msg (x) {},\n}\nexport default log\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/*\n * Implements URI-specific functions\n *\n * See RFC 2386\n *\n * See also:\n *   http://www.w3.org/2005/10/ajaw/uri.js\n *   http://www.w3.org/2000/10/swap/uripath.py\n *\n */\nvar alert = alert || console.log\n\nimport RDFlibNamedNode from './named-node'\n\n/**\n * Gets the document part of an URI\n * @param uri The URI\n */\nexport function docpart(uri: string): string {\n  var i: number\n  i = uri.indexOf('#')\n  if (i < 0) {\n    return uri\n  } else {\n    return uri.slice(0, i)\n  }\n}\n\n/**\n * Gets the document part of an URI as a named node\n * @param x - The URI\n */\nexport function document(x: string): RDFlibNamedNode {\n  return new RDFlibNamedNode(docpart(x))\n}\n\n/**\n * Gets the hostname in an URI\n * @param u The URI\n */\nexport function hostpart(u: string): string {\n  var m = /[^\\/]*\\/\\/([^\\/]*)\\//.exec(u)\n  if (m) {\n    return m[1]\n  } else {\n    return ''\n  }\n}\n\n/**\n * Joins an URI with a base\n * @param given - The relative part\n * @param base - The base URI\n */\nexport function join(given: string, base: string): string {\n  var baseColon, baseScheme, baseSingle\n  var colon, lastSlash, path\n  var baseHash = base.indexOf('#')\n  if (baseHash > 0) {\n    base = base.slice(0, baseHash)\n  }\n  if (given.length === 0) {\n    return base\n  }\n  if (given.indexOf('#') === 0) {\n    return base + given\n  }\n  colon = given.indexOf(':')\n  if (colon >= 0) {\n    return given\n  }\n  baseColon = base.indexOf(':')\n  if (base.length === 0) {\n    return given\n  }\n  if (baseColon < 0) {\n    alert('Invalid base: ' + base + ' in join with given: ' + given)\n    return given\n  }\n  baseScheme = base.slice(0, +baseColon + 1 || 9e9)\n  if (given.indexOf('//') === 0) {\n    return baseScheme + given\n  }\n  if (base.indexOf('//', baseColon) === baseColon + 1) {\n    baseSingle = base.indexOf('/', baseColon + 3)\n    if (baseSingle < 0) {\n      if (base.length - baseColon - 3 > 0) {\n        return base + '/' + given\n      } else {\n        return baseScheme + given\n      }\n    }\n  } else {\n    baseSingle = base.indexOf('/', baseColon + 1)\n    if (baseSingle < 0) {\n      if (base.length - baseColon - 1 > 0) {\n        return base + '/' + given\n      } else {\n        return baseScheme + given\n      }\n    }\n  }\n  if (given.indexOf('/') === 0) {\n    return base.slice(0, baseSingle) + given\n  }\n  path = base.slice(baseSingle)\n  lastSlash = path.lastIndexOf('/')\n  if (lastSlash < 0) {\n    return baseScheme + given\n  }\n  if (lastSlash >= 0 && lastSlash < path.length - 1) {\n    path = path.slice(0, +lastSlash + 1 || 9e9)\n  }\n  path += given\n  while (path.match(/[^\\/]*\\/\\.\\.\\//)) {\n    path = path.replace(/[^\\/]*\\/\\.\\.\\//, '')\n  }\n  path = path.replace(/\\.\\//g, '')\n  path = path.replace(/\\/\\.$/, '/')\n  return base.slice(0, baseSingle) + path\n}\n\n/**\n * Gets the protocol part of an URI\n * @param uri The URI\n */\nexport function protocol(uri: string): string | null {\n  const i = uri.indexOf(':')\n  if (i < 0) {\n    return null\n  } else {\n    return uri.slice(0, i)\n  }\n}\n\n/**\n * Gets a relative uri\n * @param base The base URI\n * @param uri The absolute URI\n */\nexport function refTo(base: string, uri: string): string {\n  var c: string,\n      i: number,\n      k: number,\n      l: number,\n      len: number,\n      len1: number,\n      n: number,\n      o: number,\n      p: number,\n      q: number,\n      ref: string,\n      ref1: number,\n      s: string\n  var commonHost = new RegExp('^[-_a-zA-Z0-9.]+:(//[^/]*)?/[^/]*$')\n  if (!base) {\n    return uri\n  }\n  if (base === uri) {\n    return ''\n  }\n  for (i = o = 0, len = uri.length; o < len; i = ++o) {\n    const c = uri[i]\n    if (c !== base[i]) {\n      break\n    }\n  }\n  if (base.slice(0, i).match(commonHost)) {\n    k = uri.indexOf('//')\n    if (k < 0) {\n      k = -2\n    }\n    l = uri.indexOf('/', k + 2)\n    if (uri[l + 1] !== '/' && base[l + 1] !== '/' && uri.slice(0, l) === base.slice(0, l)) {\n      return uri.slice(l)\n    }\n  }\n  if (uri[i] === '#' && base.length === i) {\n    return uri.slice(i)\n  }\n  while (i > 0 && uri[i - 1] !== '/') {\n    i--\n  }\n  if (i < 3) {\n    return uri\n  }\n  if (base.indexOf('//', i - 2) > 0 || uri.indexOf('//', i - 2) > 0) {\n    return uri\n  }\n  if (base.indexOf(':', i) > 0) {\n    return uri\n  }\n  n = 0\n  ref = base.slice(i)\n  for (p = 0, len1 = ref.length; p < len1; p++) {\n    c = ref[p]\n    if (c === '/') {\n      n++\n    }\n  }\n  if (n === 0 && i < uri.length && uri[i] === '#') {\n    return './' + uri.slice(i)\n  }\n  if (n === 0 && i === uri.length) {\n    return './'\n  }\n  s = ''\n  if (n > 0) {\n    for (q = 1, ref1 = n; ref1 >= 1 ? q <= ref1 : q >= ref1; ref1 >= 1 ? ++q : --q) {\n      s += '../'\n    }\n  }\n  return s + uri.slice(i)\n}\n","import {\n  ObjectType, CollectionTermType, NamedNodeTermType, VariableTermType, BlankNodeTermType, LiteralTermType, GraphTermType, DefaultGraphTermType,\n} from '../types'\nimport Collection from '../collection'\nimport IndexedFormula from '../store'\nimport Statement from '../statement'\nimport {\n  BlankNode,\n  Quad_Graph,\n  Literal,\n  NamedNode,\n  Quad_Object,\n  Quad_Predicate,\n  Quad,\n  Quad_Subject,\n  Term,\n  Variable,\n} from '../tf-types'\n\n/** TypeGuard for RDFLib Statements */\nexport function isStatement(obj): obj is Statement {\n  return typeof obj === 'object' && obj !== null && 'subject' in obj\n}\n\n/** TypeGuard for RDFlib Stores */\nexport function isStore(obj): obj is IndexedFormula {\n  return typeof obj === 'object' && obj !== null && 'statements' in obj\n}\n\n/** TypeGuard for RDFLib Collections */\nexport function isCollection(obj: any): obj is Collection<any> {\n  return isTerm(obj)\n    && (obj as Term).termType === CollectionTermType\n}\n\n/** TypeGuard for valid RDFlib Object types, also allows Collections */\nexport function isRDFlibObject(obj: any): obj is ObjectType {\n  return obj && Object.prototype.hasOwnProperty.call(obj, 'termType') && (\n    obj.termType === NamedNodeTermType ||\n    obj.termType === VariableTermType ||\n    obj.termType === BlankNodeTermType ||\n    obj.termType === CollectionTermType ||\n    obj.termType === LiteralTermType ||\n    obj.termType === GraphTermType\n  )\n}\n\n/** TypeGuard for RDFLib Variables */\nexport function isVariable(obj: any): obj is Variable {\n  return isTerm(obj)\n    && (obj as Term).termType === VariableTermType\n}\n\n/** TypeGuard for RDF/JS spec Terms */\nexport function isTerm(obj: any): obj is Term {\n  return typeof obj === 'object'\n    && obj !== null\n    && 'termType' in obj\n}\n\n/** TypeGuard for RDF/JS spec Literals */\nexport function isLiteral(value: any): value is Literal {\n  return (value as Term).termType === LiteralTermType\n}\n\n/** TypeGuard for RDF/JS spec Quads */\nexport function isQuad(obj: any): obj is Quad<any, any, any, any> {\n  return typeof obj === \"object\" && obj !== null && (\n    'subject' in obj\n    && 'predicate' in obj\n    && 'object' in obj\n  )\n}\n\n/** TypeGuard for RDF/JS spec NamedNodes */\nexport function isNamedNode(obj: any): obj is NamedNode {\n  return isTerm(obj) && obj.termType === 'NamedNode'\n}\n\n/** TypeGuard for RDF/JS spec BlankNodes */\nexport function isBlankNode(obj: any): obj is BlankNode {\n  return isTerm(obj) && 'termType' in obj && obj.termType === 'BlankNode'\n}\n\n/** TypeGuard for valid RDF/JS spec Subject types */\nexport function isSubject(obj: any): obj is Quad_Subject {\n  return isTerm(obj) && (\n    obj.termType === NamedNodeTermType ||\n    obj.termType === VariableTermType ||\n    obj.termType === BlankNodeTermType\n  )\n}\n\n/** TypeGuard for valid RDF/JS spec Predicate types */\nexport function isPredicate(obj: any): obj is Quad_Predicate {\n  return isTerm(obj) && (\n    obj.termType === NamedNodeTermType ||\n    obj.termType === VariableTermType\n  )\n}\n\n/** TypeGuard for valid RDF/JS spec Object types */\nexport function isRDFObject(obj: any): obj is Quad_Object {\n  return isTerm(obj) && (\n    obj.termType === NamedNodeTermType ||\n    obj.termType === VariableTermType ||\n    obj.termType === BlankNodeTermType ||\n    obj.termType === LiteralTermType\n  )\n}\n\n/** TypeGuard for valid RDF/JS Graph types */\nexport function isGraph(obj: any): obj is Quad_Graph {\n  return isTerm(obj) && (\n    obj.termType === NamedNodeTermType ||\n    obj.termType === VariableTermType ||\n    obj.termType === BlankNodeTermType ||\n    obj.termType === DefaultGraphTermType\n  )\n}\n","import ClassOrder from './class-order'\nimport Node from './node-internal'\nimport { NamedNodeTermType } from './types'\nimport { termValue } from './utils/termValue'\nimport { NamedNode as TFNamedNode } from './tf-types'\nimport { isTerm } from './utils/terms'\n\n/**\n * A named (IRI) RDF node\n */\nexport default class NamedNode extends Node implements TFNamedNode {\n  termType: typeof NamedNodeTermType = NamedNodeTermType\n  classOrder = ClassOrder.NamedNode\n\n  /**\n   * Create a named (IRI) RDF Node\n   * @constructor\n   * @param iri - The IRI for this node\n   */\n  constructor (iri: string) {\n    super(termValue(iri))\n\n    if (!this.value) {\n      throw new Error('Missing IRI for NamedNode')\n    }\n\n    if (!this.value.includes(':')) {\n      throw new Error('NamedNode IRI \"' + iri + '\" must be absolute.')\n    }\n\n    if (this.value.includes(' ')) {\n      var message = 'Error: NamedNode IRI \"' + iri + '\" must not contain unencoded spaces.'\n      throw new Error(message)\n    }\n  }\n\n  /**\n   * Returns an $rdf node for the containing directory, ending in slash.\n   */\n  dir (): NamedNode | null {\n     var str = this.value.split('#')[0]\n     var p = str.slice(0, -1).lastIndexOf('/')\n     var q = str.indexOf('//')\n     if ((q >= 0 && p < q + 2) || p < 0) return null\n     return new NamedNode(str.slice(0, p + 1))\n   }\n\n  /**\n   * Returns an NN for the whole web site, ending in slash.\n   * Contrast with the \"origin\" which does NOT have a trailing slash\n   */\n  site (): NamedNode {\n     var str = this.value.split('#')[0]\n     var p = str.indexOf('//')\n     if (p < 0) throw new Error('This URI does not have a web site part (origin)')\n     var q = str.indexOf('/', p+2)\n     if (q < 0) {\n       return new NamedNode(str.slice(0) + '/')   // Add slash to a bare origin\n     } else {\n       return new NamedNode(str.slice(0, q + 1))\n     }\n   }\n\n  /**\n   * Creates the fetchable named node for the document.\n   * Removes everything from the # anchor tag.\n   */\n  doc (): NamedNode {\n    if (this.value.indexOf('#') < 0) {\n      return this\n    } else {\n      return new NamedNode(this.value.split('#')[0])\n    }\n  }\n\n  /**\n   * Returns the URI including <brackets>\n   */\n  toString (): string {\n    return '<' + this.value + '>'\n  }\n\n  /** The local identifier with the document */\n  id (): string {\n    return this.value.split('#')[1]\n  }\n\n  /** Alias for value, favored by Tim */\n  get uri (): string {\n    return this.value\n  }\n\n  set uri (uri: string) {\n    this.value = uri\n  }\n\n  /**\n   * Creates a named node from the specified input value\n   * @param value - An input value\n   */\n  static fromValue (value) {\n    if (typeof value === 'undefined' || value === null) {\n      return value\n    }\n    if (isTerm(value)) {\n      return value\n    }\n    return new NamedNode(value)\n  }\n}\n","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Utility functions for $rdf\n * @module util\n */\nimport { docpart } from './uri'\nimport log from './log'\nimport * as uri from './uri'\nimport NamedNode from './named-node'\n\nconst string = { template: stringTemplate }\n\nexport { log, uri, string }\n\nexport function mediaTypeClass(mediaType){\n  mediaType = mediaType.split(';')[0].trim()  // remove media type parameters\n  return new NamedNode('http://www.w3.org/ns/iana/media-types/' + mediaType + '#Resource')\n}\n\nexport function linkRelationProperty(relation){\n  return new NamedNode('http://www.w3.org/ns/iana/link-relations/relation#' + relation.trim())\n}\n\n/**\n * Adds callback functionality to an object.\n * Callback functions are indexed by a 'hook' string.\n * They return true if they want to be called again.\n * @method callbackify\n * @param obj {Object}\n * @param callbacks {Array<string>}\n */\nexport function callbackify (obj, callbacks) {\n  obj.callbacks = {}\n  for (var x = callbacks.length - 1; x >= 0; x--) {\n    obj.callbacks[callbacks[x]] = []\n  }\n\n  obj.addHook = function (hook) {\n    if (!obj.callbacks[hook]) {\n      obj.callbacks[hook] = []\n    }\n  }\n\n  obj.addCallback = function (hook, func) {\n    obj.callbacks[hook].push(func)\n  }\n\n  obj.removeCallback = function (hook, funcName) {\n    for (var i = 0;i < obj.callbacks[hook].length;i++) {\n      if (obj.callbacks[hook][i].name === funcName) {\n        obj.callbacks[hook].splice(i, 1)\n        return true\n      }\n    }\n    return false\n  }\n\n  obj.insertCallback = function (hook, func) {\n    obj.callbacks[hook].unshift(func)\n  }\n\n  obj.fireCallbacks = function fireCallbacks (hook, args) {\n    var newCallbacks = []\n    var replaceCallbacks = []\n    var len = obj.callbacks[hook].length\n    var x\n    let callback\n\n    // log.info('!@$ Firing '+hook+' call back with length'+len)\n    for (x = len - 1; x >= 0; x--) {\n      // log.info('@@ Firing '+hook+' callback '+ obj.callbacks[hook][x])\n      callback = obj.callbacks[hook][x]\n      if (callback && callback.apply(obj, args)) {\n        newCallbacks.push(callback)\n      }\n    }\n\n    for (x = newCallbacks.length - 1; x >= 0; x--) {\n      replaceCallbacks.push(newCallbacks[x])\n    }\n\n    for (x = len; x < obj.callbacks[hook].length; x++) {\n      replaceCallbacks.push(obj.callbacks[hook][x])\n    }\n\n    obj.callbacks[hook] = replaceCallbacks\n  }\n}\n\n/**\n * Returns a DOM parser based on current runtime environment.\n */\nexport function DOMParserFactory () {\n  if (window.DOMParser) {\n    return new DOMParser()\n  } else if (window.ActiveXObject) {\n    return new ActiveXObject('Microsoft.XMLDOM')\n  } else {\n    return false\n  }\n}\n\n// From https://github.com/linkeddata/dokieli\nexport function domToString (node, options) {\n  options = options || {}\n  var selfClosing = []\n  if (options && options.selfClosing) {\n    options.selfClosing.split(' ').forEach(function (n) {\n      selfClosing[n] = true\n    })\n  }\n  var skipAttributes = []\n  if (options && options.skipAttributes) {\n    options.skipAttributes.split(' ').forEach(function (n) {\n      skipAttributes[n] = true\n    })\n  }\n  return dumpNode(node, options, selfClosing, skipAttributes)\n}\n\nexport function dumpNode (node, options, selfClosing, skipAttributes) {\n  var i\n  var out = ''\n  var noEsc = [ false ]\n  if (typeof node.nodeType === 'undefined') return out\n  if (node.nodeType === 1) {\n    if (node.hasAttribute('class') && (options && options.classWithChildText) && node.matches(options.classWithChildText.class)) {\n      out += node.querySelector(options.classWithChildText.element).textContent\n    } else if (!((options && options.skipNodeWithClass) && node.matches('.' + options.skipNodeWithClass))) {\n      var ename = node.nodeName.toLowerCase()\n      out += '<' + ename\n\n      var attrList = []\n      for (i = node.attributes.length - 1; i >= 0; i--) {\n        var atn = node.attributes[i]\n        if (skipAttributes && skipAttributes.length > 0 && skipAttributes[atn.name]) continue\n        if (/^\\d+$/.test(atn.name)) continue\n        if (atn.name === 'class' && (options && options.replaceClassItemWith) && (atn.value.split(' ').indexOf(options.replaceClassItemWith.source) > -1)) {\n          var re = new RegExp(options.replaceClassItemWith.source, 'g')\n          atn.value = atn.value.replace(re, options.replaceClassItemWith.target).trim()\n        }\n        if (!(atn.name === 'class' && (options && options.skipClassWithValue) && options.skipClassWithValue === atn.value)) {\n          attrList.push(atn.name + '=\\'' + atn.value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&quot;') + '\\'')\n        }\n      }\n      if (attrList.length > 0) {\n        if (options && options.sortAttributes) {\n          attrList.sort(function (a, b) {\n            return a.toLowerCase().localeCompare(b.toLowerCase())\n          })\n        }\n        out += ' ' + attrList.join(' ')\n      }\n      if (selfClosing && selfClosing.ename) {\n        out += ' />'\n      } else {\n        out += '>'\n        out += (ename === 'html') ? '\\n  ' : ''\n        noEsc.push(ename === 'style' || ename === 'script')\n        for (i = 0; i < node.childNodes.length; i++) out += dumpNode(node.childNodes[i])\n        noEsc.pop()\n        out += (ename === 'body') ? '</' + ename + '>' + '\\n' : '</' + ename + '>'\n      }\n    }\n  } else if (node.nodeType === 8) {\n    // FIXME: If comments are not tabbed in source, a new line is not prepended\n    out += '<!--' + node.nodeValue + '-->'\n  } else if (node.nodeType === 3 || node.nodeType === 4) {\n    // XXX: Remove new lines which were added after DOM ready\n    var nl = node.nodeValue.replace(/\\n+$/, '')\n    out += noEsc[noEsc.length - 1] ? nl : nl.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')\n  } else {\n    console.log('Warning; Cannot handle serialising nodes of type: ' + node.nodeType)\n    console.log(node)\n  }\n  return out\n}\n\nexport function dtstamp () {\n  var now = new Date()\n  var year = now.getYear() + 1900\n  var month = now.getMonth() + 1\n  var day = now.getDate()\n  var hour = now.getUTCHours()\n  var minute = now.getUTCMinutes()\n  var second = now.getSeconds()\n  if (month < 10) month = '0' + month\n  if (day < 10) day = '0' + day\n  if (hour < 10) hour = '0' + hour\n  if (minute < 10) minute = '0' + minute\n  if (second < 10) second = '0' + second\n  return year + '-' + month + '-' + day + 'T' +\n    hour + ':' + minute + ':' + second + 'Z'\n}\n\n/**\n * Compares statements (heavy comparison for repeatable canonical ordering)\n */\nexport function heavyCompare (x, y, g, uriMap) {\n  var nonBlank = function (x) {\n    return (x.termType === 'BlankNode') ? null : x\n  }\n  var signature = function (x) {\n    var lis = g.statementsMatching(x).map(function (st) {\n      return ('' + nonBlank(st.subject) + ' ' + nonBlank(st.predicate) +\n        ' ' + nonBlank(st.object))\n    }).concat(g.statementsMatching(undefined, undefined, x).map(function (st) {\n      return ('' + nonBlank(st.subject) + ' ' + nonBlank(st.predicate) +\n        ' ' + nonBlank(st.object))\n    }))\n    lis.sort()\n    return lis.join('\\n')\n  }\n  const comparison = Object.prototype.hasOwnProperty.call(g, \"compareTerms\")\n    ? g.compareTerms(x, y)\n    : x.compareTerm(y)\n\n  if ((x.termType === 'BlankNode') && (y.termType === 'BlankNode')) {\n    if (comparison === 0) return 0 // Same\n    if (signature(x) > signature(y)) return +1\n    if (signature(x) < signature(y)) return -1\n    return comparison  // Too bad -- this order not canonical.\n    // throw \"different bnodes indistinquishable for sorting\"\n  } else {\n    if (uriMap && x.uri && y.uri){\n      return (uriMap[x.uri] || x.uri).localeCompare(uriMap[y.uri] || y.uri)\n    }\n    return comparison\n  }\n}\n\nexport function heavyCompareSPO (x, y, g, uriMap) {\n  return heavyCompare(x.subject, y.subject, g, uriMap) ||\n    heavyCompare(x.predicate, y.predicate, g, uriMap) ||\n    heavyCompare(x.object, y.object, g, uriMap)\n}\n\n/**\n * Defines a simple debugging function\n * @method output\n * @param o {String}\n */\nexport function output (o) {\n  var k = document.createElement('div')\n  k.textContent = o\n  document.body.appendChild(k)\n}\n\nimport { DOMParser } from '@xmldom/xmldom'\n\n/**\n * Returns a DOM from parsed XML.\n */\nexport function parseXML (str, options) {\n  var dparser\n  options = options || {}\n  if (typeof module !== 'undefined' && module && module.exports) { // Node.js\n    var dom = new DOMParser().parseFromString(str, options.contentType || 'application/xhtml+xml')\n    return dom\n  } else {\n    if (typeof window !== 'undefined' && window.DOMParser) {\n      dparser = new window.DOMParser() // seems to actually work\n    } else {\n      dparser = new DOMParser() // Doc says this works\n    }\n  }\n  return dparser.parseFromString(str, 'application/xml')\n}\n\n/**\n * Removes all statements equal to x from a\n */\nexport function RDFArrayRemove (a, x) {\n  for (var i = 0; i < a.length; i++) {\n    // TODO: This used to be the following, which didnt always work..why\n    // if(a[i] === x)\n    if (a[i].subject.equals(x.subject) &&\n      a[i].predicate.equals(x.predicate) &&\n      a[i].object.equals(x.object) &&\n      a[i].why.equals(x.why)) {\n      a.splice(i, 1)\n      return\n    }\n  }\n  throw new Error('RDFArrayRemove: Array did not contain ' + x + ' ' + x.why)\n}\n\nexport function string_startswith (str, pref) { // missing library routines\n  return (str.slice(0, pref.length) === pref)\n}\n\n/**\n * C++, python style %s -> subs\n */\nfunction stringTemplate (base, subs) {\n  var baseA = base.split('%s')\n  var result = ''\n  for (var i = 0;i < subs.length;i++) {\n    subs[i] += ''\n    result += baseA[i] + subs[i]\n  }\n  return result + baseA.slice(subs.length).join()\n}\n\n\n// Stack dump on errors - to pass errors back\n\nexport function stackString (e) {\n  var str = '' + e + '\\n'\n  if (!e.stack) {\n    return str + 'No stack available.\\n'\n  }\n  var lines = e.stack.toString().split('\\n')\n  var toprint = []\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i]\n    if (line.indexOf('ecmaunit.js') > -1) {\n      // remove useless bit of traceback\n      break\n    }\n    if (line.charAt(0) == '(') {\n      line = 'function' + line\n    }\n    var chunks = line.split('@')\n    toprint.push(chunks)\n  }\n  // toprint.reverse();  No - I prefer the latest at the top by the error message -tbl\n\n  for (var i = 0; i < toprint.length; i++) {\n    str += '  ' + toprint[i][1] + '\\n    ' + toprint[i][0]\n  }\n  return str\n}\n","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { ValueType, Bindings, FromValueReturns, TermType } from './types'\nimport { Term } from './tf-types'\n\n/**\n * The superclass of all RDF Statement objects, that is\n * NamedNode, Literal, BlankNode, etc.\n * Should not be instantiated directly.\n * Also called Term.\n * @link https://rdf.js.org/data-model-spec/#term-interface\n * @class Node\n */\nexport default abstract class Node {\n  // Specified in './node.ts' to prevent circular dependency\n  static fromValue: <T extends FromValueReturns>(value: ValueType) => T\n  // Specified in './node.ts' to prevent circular dependency\n  static toJS: (term: any) => Date | Number | string | boolean | object | Array<Date | Number | string | boolean | object>;\n\n  /** The type of node */\n  termType!: TermType;\n\n  /** The class order for this node */\n  classOrder!: number;\n\n  /** The node's value */\n  value: string;\n\n  protected constructor(value: string) {\n    this.value = value\n  }\n\n  /**\n   * Creates the substituted node for this one, according to the specified bindings\n   * @param bindings - Bindings of identifiers to nodes\n   */\n  substitute <T extends Node = Node>(bindings: Bindings): T {\n    console.log('@@@ node substitute' + this)\n    return this as unknown as T\n  }\n\n  /**\n   * Compares this node with another\n   * @see {equals} to check if two nodes are equal\n   * @param other - The other node\n   */\n  compareTerm (other: Node): number {\n    if (this.classOrder < other.classOrder) {\n      return -1\n    }\n    if (this.classOrder > other.classOrder) {\n      return +1\n    }\n    if (this.value < other.value) {\n      return -1\n    }\n    if (this.value > other.value) {\n      return +1\n    }\n    return 0\n  }\n\n  /**\n   * Compares whether the two nodes are equal\n   * @param other The other node\n   */\n  equals (other: Term): boolean {\n    if (!other) {\n      return false\n    }\n    return (this.termType === other.termType) &&\n      (this.value === other.value)\n  }\n\n  /**\n   * Creates a hash for this node\n   * @deprecated use {rdfFactory.id} instead if possible\n   */\n  hashString (): string {\n    return this.toCanonical()\n  }\n\n  /**\n   * Compares whether this node is the same as the other one\n   * @param other - Another node\n   */\n  sameTerm(other: Node): boolean {\n    return this.equals(other)\n\n  }\n\n  /**\n   * Creates a canonical string representation of this node\n   */\n  toCanonical (): string {\n    return this.toNT()\n  }\n\n  /**\n   * Creates a n-triples string representation of this node\n   */\n  toNT (): string {\n    return this.toString()\n  }\n\n  /**\n   * Creates a n-quads string representation of this node\n   */\n  toNQ (): string {\n    return this.toNT();\n  }\n\n  /**\n   * Creates a string representation of this node\n   */\n  toString (): string {\n    throw new Error('Node.toString() is abstract - see the subclasses instead')\n  }\n}\n","import RDFlibNamedNode from './named-node'\nimport { RdfJsDataFactory, NamedNode } from './tf-types'\n\n/**\n * Gets a namespace for the specified namespace's URI\n * @param nsuri - The URI for the namespace\n * @param [factory] - The factory for creating named nodes with\n */\nexport default function Namespace (nsuri: string, factory?: RdfJsDataFactory): (ln: string) => NamedNode {\n  const dataFactory = factory || { namedNode: (value) => new RDFlibNamedNode(value) as NamedNode }\n\n  return function (ln: string): NamedNode {\n    return dataFactory.namedNode(nsuri + (ln || ''))\n  }\n}\n","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import Fetcher from './fetcher'\nimport log from './log'\nimport { docpart } from './uri'\nimport { string_startswith } from './utils-js'\nimport { RdfJsDataFactory, Quad, Quad_Subject, Term } from './tf-types'\n\n/** RDF/JS spec Typeguards */\n\n/**\n * Loads ontologies of the data we load (this is the callback from the kb to\n * the fetcher).\n */\nexport function AJAR_handleNewTerm (kb: { fetcher: Fetcher }, p, requestedBy) {\n  var sf: Fetcher | null = null\n  if (typeof kb.fetcher !== 'undefined') {\n    sf = kb.fetcher\n  } else {\n    return\n  }\n  if (p.termType !== 'NamedNode') return\n  var docuri = docpart(p.uri)\n  var fixuri\n  if (p.uri.indexOf('#') < 0) { // No hash\n    // @@ major hack for dbpedia Categories, which spread indefinitely\n    if (string_startswith(p.uri, 'http://dbpedia.org/resource/Category:')) return\n\n    /*\n      if (string_startswith(p.uri, 'http://xmlns.com/foaf/0.1/')) {\n      fixuri = \"http://dig.csail.mit.edu/2005/ajar/ajaw/test/foaf\"\n      // should give HTTP 303 to ontology -- now is :-)\n      } else\n    */\n    if (string_startswith(p.uri,\n            'http://purl.org/dc/elements/1.1/') ||\n          string_startswith(p.uri, 'http://purl.org/dc/terms/')) {\n      fixuri = 'http://dublincore.org/2005/06/13/dcq'\n    // dc fetched multiple times\n    } else if (string_startswith(p.uri, 'http://xmlns.com/wot/0.1/')) {\n      fixuri = 'http://xmlns.com/wot/0.1/index.rdf'\n    } else if (string_startswith(p.uri, 'http://web.resource.org/cc/')) {\n      //            log.warn(\"creative commons links to html instead of rdf. doesn't seem to content-negotiate.\")\n      fixuri = 'http://web.resource.org/cc/schema.rdf'\n    }\n  }\n  if (fixuri) {\n    docuri = fixuri\n  }\n  if (sf && (sf as Fetcher).getState(docuri) !== 'unrequested') return\n\n  if (fixuri) { // only give warning once: else happens too often\n    log.warn('Assuming server still broken, faking redirect of <' + p.uri +\n      '> to <' + docuri + '>')\n  }\n\n  return (sf as any).fetch(docuri, { referringTerm: requestedBy })\n}\n\nexport const appliedFactoryMethods = [\n  'blankNode',\n  'defaultGraph',\n  'literal',\n  'namedNode',\n  'quad',\n  'variable',\n  'supports',\n]\n\nconst rdf = {\n  first: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#first',\n  rest: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest',\n  nil: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil'\n}\n\n/**\n * Expands an array of Terms to a set of statements representing the rdf:list.\n * @param rdfFactory - The factory to use\n * @param subject - The iri of the first list item.\n * @param data - The terms to expand into the list.\n * @return The {data} as a set of statements.\n */\nexport function arrayToStatements(\n  rdfFactory: RdfJsDataFactory,\n  subject: Quad_Subject,\n  data: Term[]\n): Quad[] {\n  const statements: Quad[] = []\n\n  data.reduce<Quad_Subject>((id, _listObj, i, listData) => {\n    statements.push(rdfFactory.quad(id, rdfFactory.namedNode(rdf.first), listData[i]))\n\n    let nextNode\n    if (i < listData.length - 1) {\n      nextNode = rdfFactory.blankNode()\n      statements.push(rdfFactory.quad(id, rdfFactory.namedNode(rdf.rest), nextNode))\n    } else {\n      statements.push(rdfFactory.quad(id, rdfFactory.namedNode(rdf.rest), rdfFactory.namedNode(rdf.nil)))\n    }\n\n    return nextNode\n  }, subject)\n\n  return statements\n}\n\nexport function ArrayIndexOf (arr, item, i: number = 0) {\n  var length = arr.length\n  if (i < 0) i = length + i\n  for (; i < length; i++) {\n    if (arr[i] === item) {\n      return i\n    }\n  }\n  return -1\n}\n","/**\n* Class orders\n*/\nconst ClassOrder: {\n  [id: string]: number;\n} = {\n  'Literal': 1,\n  'Collection': 3,\n  'Graph': 4,\n  'NamedNode': 5,\n  'BlankNode': 6,\n  'Variable': 7\n}\n\nexport default ClassOrder\n","import BlankNode from '../blank-node'\nimport Literal from '../literal'\nimport NamedNode from '../named-node'\nimport Statement from '../statement'\nimport Variable from '../variable'\nimport {\n  SubjectType,\n  PredicateType,\n  ObjectType,\n  GraphType,\n  EmptyTermType,\n  DefaultGraphTermType,\n  VariableTermType,\n  BlankNodeTermType,\n  LiteralTermType,\n  NamedNodeTermType,\n  CollectionTermType,\n  GraphTermType,\n} from '../types'\nimport DefaultGraph from '../default-graph'\nimport {\n  Comparable,\n  DataFactory,\n  DefaultFactoryTypes,\n  Feature,\n} from './factory-types'\nimport { isQuad, isTerm } from '../utils/terms'\nimport { NamedNode as TFNamedNode, Quad, Term } from '../tf-types'\nimport Collection from \"../collection\";\n\nexport { defaultGraphURI } from '../utils/default-graph-uri'\n\n/**\n * Gets the default graph\n */\nconst defaultGraph = new DefaultGraph()\n\n/** A basic internal RDFlib datafactory, which does not support Collections  */\nconst CanonicalDataFactory: DataFactory = {\n\n  supports: {\n    [Feature.collections]: false,\n    [Feature.defaultGraphType]: false,\n    [Feature.equalsMethod]: true,\n    [Feature.identity]: false,\n    [Feature.id]: true,\n    [Feature.reversibleId]: false,\n    [Feature.variableType]: true,\n  },\n\n  /**\n   * Creates a new blank node\n   * @param value - The blank node's identifier\n   */\n  blankNode(value?: string): BlankNode {\n    return new BlankNode(value)\n  },\n\n  defaultGraph: () => defaultGraph,\n\n  /**\n   * Compares to (rdf) objects for equality.\n   */\n  equals(a: Comparable, b: Comparable): boolean {\n    if (a === b || !a || !b) {\n      return true\n    }\n\n    if (isQuad(a) || isQuad(b)) {\n      if (isQuad(a) && isQuad(b)) {\n        return (\n          this.equals(a.subject, b.subject) &&\n          this.equals(a.predicate, b.predicate) &&\n          this.equals(a.object, b.object) &&\n          this.equals(a.graph, b.graph)\n        )\n      }\n\n      return false\n    }\n\n    if (isTerm(a) && isTerm(b)) {\n      return this.id(a) === this.id(b)\n    }\n\n    return false\n  },\n\n  /**\n   * Generates a uniquely identifiably *idempotent* string for the given {term}.\n   *\n   * Equivalent to [[Term.hashString]]\n   *\n   * @example Use this to associate data with a term in an object\n   *   { obj[id(term)] = \"myData\" }\n   */\n  id (term: Term | Statement | undefined): string {\n    if (!term) {\n      return 'undefined'\n    }\n\n    if (isQuad(term)) {\n      return this.quadToNQ(term)\n    }\n\n    switch (term.termType) {\n      case DefaultGraphTermType:\n        return 'defaultGraph'\n      case VariableTermType:\n        return Variable.toString(term)\n      default:\n        const nq = this.termToNQ(term)\n        if (nq) {\n          return nq\n        }\n\n        throw new Error(`Can't id term with type '${term.termType}'`)\n    }\n  },\n\n  isQuad (obj: any): obj is Statement {\n    return obj instanceof Statement\n  },\n\n  /**\n   * Creates a new literal node. Does some JS literal parsing for ease of use.\n   * @param value - The lexical value\n   * @param languageOrDatatype - Either the language or the datatype\n   */\n  literal(\n    value: string | number | boolean | Date,\n    languageOrDatatype?: string | TFNamedNode\n  ): Literal {\n    if (typeof value !== \"string\" && !languageOrDatatype) {\n      return Literal.fromValue(value)\n    }\n\n    const strValue = typeof value === 'string' ? value : '' + value\n    if (typeof languageOrDatatype === 'string') {\n      if (languageOrDatatype.indexOf(':') === -1) {\n        return new Literal(strValue, languageOrDatatype)\n      } else {\n        return new Literal(strValue, null, this.namedNode(languageOrDatatype))\n      }\n    } else {\n      return new Literal(strValue, null, languageOrDatatype)\n    }\n  },\n\n  /**\n   * Creates a new named node\n   * @param value - The new named node\n   */\n  namedNode(value: string): NamedNode {\n    return new NamedNode(value)\n  },\n\n  /**\n   * Creates a new statement\n   * @param subject - The subject\n   * @param predicate - The predicate\n   * @param object - The object\n   * @param graph - The containing graph\n   */\n  quad<\n    S extends SubjectType = SubjectType,\n    P extends PredicateType = PredicateType,\n    O extends ObjectType = ObjectType,\n    G extends GraphType = GraphType\n  >(subject: S, predicate: P, object: O, graph?: G): Statement<S, P, O, G | DefaultGraph> {\n    return new Statement(subject, predicate, object, graph || defaultGraph)\n  },\n\n  /**\n   * Creates a new statement\n   * @param subject - The subject\n   * @param predicate - The predicate\n   * @param object - The object\n   * @param graph - The containing graph\n   */\n  triple(\n    subject: Term | SubjectType,\n    predicate: Term | PredicateType,\n    object: Term | ObjectType,\n    graph?: Term | GraphType\n  ): Statement {\n    return this.quad(subject, predicate, object, graph)\n  },\n\n  quadToNQ(q: Statement | Quad): string {\n    return `${this.termToNQ(q.subject)} ${this.termToNQ(q.predicate)} ${this.termToNQ(q.object)} ${this.termToNQ(q.graph)} .`;\n  },\n\n  /** Stringify a {term} to n-quads serialization. */\n  termToNQ(term: Term): string {\n    switch (term.termType) {\n      case BlankNodeTermType:\n        return '_:' + term.value\n      case DefaultGraphTermType:\n        return ''\n      case EmptyTermType:\n        return '<http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>'\n      case LiteralTermType:\n        return Literal.toNT(term as Literal)\n      case GraphTermType:\n      case NamedNodeTermType:\n        return '<' + term.value + '>'\n      case CollectionTermType:\n        return '(' + (term as Collection).elements.map(t => this.termToNQ(t)).join(' ') + ')'\n      default:\n        throw new Error(`Can't serialize nonstandard term type (was '${term.termType}')`)\n    }\n  },\n\n  /** Convert an rdf object (term or quad) to n-quads serialization. */\n  toNQ (term: Term | (DefaultFactoryTypes & Variable)): string {\n    if (this.isQuad(term)) {\n      return this.quadToNQ(term);\n    }\n\n    return this.termToNQ(term);\n  },\n\n  /**\n   * Creates a new variable\n   * @param name - The name for the variable\n   */\n  variable(name?: string): Variable {\n    return new Variable(name)\n  },\n}\n\n/** Contains the factory methods as defined in the spec, plus id */\nexport default CanonicalDataFactory\n","import NamedNode from './named-node';\n\nexport default {\n  boolean: new NamedNode('http://www.w3.org/2001/XMLSchema#boolean'),\n  dateTime: new NamedNode('http://www.w3.org/2001/XMLSchema#dateTime'),\n  decimal: new NamedNode('http://www.w3.org/2001/XMLSchema#decimal'),\n  double: new NamedNode('http://www.w3.org/2001/XMLSchema#double'),\n  integer: new NamedNode('http://www.w3.org/2001/XMLSchema#integer'),\n  langString: new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString'),\n  string: new NamedNode('http://www.w3.org/2001/XMLSchema#string'),\n}\n","import ClassOrder from './class-order'\nimport RDFlibNamedNode from './named-node'\nimport Node from './node-internal'\nimport {\n  FromValueReturns,\n  LiteralTermType,\n  ValueType\n} from './types'\nimport { isLiteral } from './utils/terms'\nimport XSD from './xsd-internal'\nimport { Literal as TFLiteral, Term } from './tf-types'\n\n/**\n * An RDF literal, containing some value which isn't expressed as an IRI.\n * @link https://rdf.js.org/data-model-spec/#literal-interface\n */\nexport default class Literal extends Node implements TFLiteral {\n  termType: typeof LiteralTermType = LiteralTermType\n\n  classOrder = ClassOrder.Literal\n\n  /**\n   * The literal's datatype as a named node\n   */\n  datatype: RDFlibNamedNode = XSD.string\n\n  isVar = 0\n\n  /**\n   * The language for the literal\n   */\n  language: string = ''\n\n  /**\n   * Initializes a literal\n   * @param value - The literal's lexical value\n   * @param language - The language for the literal. Defaults to ''.\n   * @param datatype - The literal's datatype as a named node. Defaults to xsd:string.\n   */\n  constructor (value: string, language?: string | null, datatype?) {\n    super(value)\n\n    if (language) {\n      this.language = language\n      this.datatype = XSD.langString\n    } else if (datatype) {\n      this.datatype = RDFlibNamedNode.fromValue(datatype)\n    } else {\n      this.datatype = XSD.string\n    }\n  }\n\n  /**\n   * Gets a copy of this literal\n   */\n  copy (): Literal {\n    return new Literal(this.value, this.lang, this.datatype)\n  }\n\n  /**\n   * Gets whether two literals are the same\n   * @param other The other statement\n   */\n  equals (other: Term): boolean {\n    if (!other) {\n      return false\n    }\n\n    return (this.termType === other.termType) &&\n      (this.value === other.value) &&\n      (this.language === (other as Literal).language) &&\n      ((!this.datatype && !(other as Literal).datatype) ||\n        (this.datatype && this.datatype.equals((other as Literal).datatype)))\n  }\n\n  /**\n   * The language for the literal\n   * @deprecated use {language} instead\n   */\n  get lang (): string {\n    return this.language\n  }\n\n  set lang (language: string) {\n    this.language = language || ''\n  }\n\n  toNT(): string {\n    return Literal.toNT(this)\n  }\n\n  /** Serializes a literal to an N-Triples string */\n  static toNT (literal: Literal): string {\n    if (typeof literal.value === 'number') {\n      return '' + literal.value\n    } else if (typeof literal.value !== 'string') {\n      throw new Error('Value of RDF literal is not string or number: ' +\n        literal.value)\n    }\n    var str = literal.value\n    // #x22 (\"), #x5C (\\), #x0A (\\n) and #xD (\\r) are disallowed and need to be replaced\n    // see https://www.w3.org/TR/n-triples/#grammar-production-STRING_LITERAL_QUOTE\n    str = str.replace(/\\\\/g, '\\\\\\\\')\n    str = str.replace(/\\\"/g, '\\\\\"')\n    str = str.replace(/\\n/g, '\\\\n')\n    str = str.replace(/\\r/g, '\\\\r')\n    str = '\"' + str + '\"'\n\n    if (literal.language) {\n      str += '@' + literal.language\n    } else if (!literal.datatype.equals(XSD.string)) {\n      // Only add datatype if it's not a string\n      str += '^^' + literal.datatype.toCanonical()\n    }\n    return str\n  }\n\n  toString () {\n    return '' + this.value\n  }\n\n  /**\n   * Builds a literal node from a boolean value\n   * @param value - The value\n   */\n  static fromBoolean (value: boolean): Literal {\n    let strValue = value ? '1' : '0'\n    return new Literal(strValue, null, XSD.boolean)\n  }\n\n  /**\n   * Builds a literal node from a date value\n   * @param value The value\n   */\n  static fromDate(value: Date): Literal {\n    if (!(value instanceof Date)) {\n      throw new TypeError('Invalid argument to Literal.fromDate()')\n    }\n    let d2 = function (x) {\n      return ('' + (100 + x)).slice(1, 3)\n    }\n    let date = '' + value.getUTCFullYear() + '-' + d2(value.getUTCMonth() + 1) +\n      '-' + d2(value.getUTCDate()) + 'T' + d2(value.getUTCHours()) + ':' +\n      d2(value.getUTCMinutes()) + ':' + d2(value.getUTCSeconds()) + 'Z'\n    return new Literal(date, null, XSD.dateTime)\n  }\n\n  /**\n   * Builds a literal node from a number value\n   * @param value - The value\n   */\n  static fromNumber(value: number): Literal {\n    if (typeof value !== 'number') {\n      throw new TypeError('Invalid argument to Literal.fromNumber()')\n    }\n    let datatype: RDFlibNamedNode\n    const strValue = value.toString()\n    if (strValue.indexOf('e') < 0 && Math.abs(value) <= Number.MAX_SAFE_INTEGER) {\n      datatype = Number.isInteger(value) ? XSD.integer : XSD.decimal\n    } else {\n      datatype = XSD.double\n    }\n    return new Literal(strValue, null, datatype)\n  }\n\n  /**\n   * Builds a literal node from an input value\n   * @param value - The input value\n   */\n  static fromValue<T extends FromValueReturns>(value: ValueType): T {\n    if (isLiteral(value)) {\n      return value as unknown as T\n    }\n    switch (typeof value) {\n      case 'object':\n        if (value instanceof Date) {\n          return Literal.fromDate(value) as unknown as T\n        }\n      case 'boolean':\n        return Literal.fromBoolean(value as boolean) as unknown as T\n      case 'number':\n        return Literal.fromNumber(value as number) as unknown as T\n      case 'string':\n        return new Literal(value) as unknown as T\n    }\n\n    throw new Error(\"Can't make literal from \" + value + ' of type ' +\n      typeof value)\n  }\n}\n","import Literal from '../literal'\nimport Statement from '../statement'\nimport NamedNode from '../named-node'\nimport BlankNode from '../blank-node'\nimport Variable from '../variable'\nimport DefaultGraph from '../default-graph'\nimport {\n  BlankNode as TFBlankNode,\n  RdfJsDataFactory,\n  Literal as TFLiteral,\n  NamedNode as TFNamedNode,\n  Quad,\n  Term,\n  Variable as TFVariable,\n} from '../tf-types'\n\nexport type Comparable = Term | TFNamedNode | TFBlankNode | TFLiteral | Quad | undefined | null\n\nexport type DefaultFactoryTypes = NamedNode | BlankNode | Literal | Variable | Statement\n\nexport type Indexable = number | string\n\nexport type Namespace = (term:string) => TFNamedNode\n\n/** A set of features that may be supported by a Data Factory */\nexport type SupportTable = Record<Feature, boolean>\n\nexport type TFIDFactoryTypes = TFNamedNode | TFBlankNode | TFLiteral | Quad | TFVariable | Term\n\nexport enum Feature {\n  /** Whether the factory supports termType:Collection terms */\n  collections = \"COLLECTIONS\",\n  /** Whether the factory supports termType:DefaultGraph terms */\n  defaultGraphType = \"DEFAULT_GRAPH_TYPE\",\n  /** Whether the factory supports equals on produced instances */\n  equalsMethod = \"EQUALS_METHOD\",\n  /** Whether the factory can create a unique idempotent identifier for the given term. */\n  id = \"ID\",\n  /**\n   * Whether the factory will return the same instance for subsequent calls.\n   * This implies `===`, which means methods like `indexOf` can be used.\n   */\n  identity = \"IDENTITY\",\n  /** Whether the factory supports mapping ids back to instances (should adhere to the identity setting) */\n  reversibleId = \"REVERSIBLE_ID\",\n  /** Whether the factory supports termType:Variable terms */\n  variableType = \"VARIABLE_TYPE\",\n}\n\n/**\n * Defines a DataFactory as used in rdflib, based on the RDF/JS: Data model specification,\n * but with additional extensions\n *\n * bnIndex is optional but useful.\n */\nexport interface DataFactory<\n  FactoryTypes = DefaultFactoryTypes,\n  IndexType = Indexable\n> extends RdfJsDataFactory {\n  /**\n   * BlankNode index\n   * @private\n  */\n  bnIndex?: number\n\n  supports: SupportTable\n\n  namedNode(value: string): NamedNode\n\n  blankNode(value?: string): BlankNode\n\n  literal(value: string, languageOrDatatype?: string | TFNamedNode): Literal\n\n  variable(value: string): Variable,\n\n  defaultGraph(): DefaultGraph,\n\n  isQuad(obj: any): obj is Statement\n\n  equals(a: Comparable, b: Comparable): boolean\n\n  toNQ(term: Term | FactoryTypes): string\n\n  quad(\n    subject: Term,\n    predicate: Term,\n    object: Term,\n    graph?: Term,\n  ): Statement;\n\n  quadToNQ(term: Statement | Quad): string\n\n  termToNQ(term: Term): string\n\n  /**\n   * Generates a unique session-idempotent identifier for the given object.\n   *\n   * @example NQ serialization (reversible from value)\n   * @example MD5 hash of termType + value (irreversible from value, map needed)\n   *\n   * @return {Indexable} A unique value which must also be a valid JS object key type.\n   */\n  id(obj: Term | FactoryTypes): IndexType\n}\n","import ClassOrder from './class-order'\nimport Node from './node-internal'\nimport IndexedFormula from './store'\nimport { BlankNodeTermType } from './types'\nimport { BlankNode as TFBlankNode } from './tf-types'\n\n/**\n * An RDF blank node is a Node without a URI\n * @link https://rdf.js.org/data-model-spec/#blanknode-interface\n */\nexport default class BlankNode extends Node implements TFBlankNode {\n  termType: typeof BlankNodeTermType = BlankNodeTermType;\n  /**\n   * The next unique identifier for blank nodes\n   */\n  static nextId: number = 0;\n  static NTAnonymousNodePrefix: '_:' = '_:'\n\n  private static getId (id: string | unknown): string {\n    if (id) {\n      if (typeof id !== 'string') {\n        console.log('Bad blank id:', id)\n        throw new Error('Bad id argument to new blank node: ' + id)\n      }\n\n      if (id.includes('#')) {\n        // Is a URI with hash fragment\n        let fragments = id.split('#')\n        return fragments[fragments.length - 1]\n      }\n\n      return id\n    }\n\n    return 'n' + BlankNode.nextId++\n  }\n\n  classOrder = ClassOrder.BlankNode\n  /** Whether this is a blank node */\n  isBlank: number = 1\n  /**\n   * This type of node is a variable.\n   *\n   * Note that the existence of this property already indicates that it is a variable.\n   */\n  isVar = 1\n\n  /**\n   * Initializes this node\n   * @param [id] The identifier for the blank node\n   */\n  constructor (id?: string | unknown) {\n    super(BlankNode.getId(id))\n  }\n\n  /**\n   * The identifier for the blank node\n   */\n  public get id (): string {\n    return this.value\n  }\n\n  public set id (value: string) {\n    this.value = value\n  }\n\n  compareTerm (other: BlankNode): number {\n    if (this.classOrder < other.classOrder) {\n      return -1\n    }\n    if (this.classOrder > other.classOrder) {\n      return +1\n    }\n    if (this.id < other.id) {\n      return -1\n    }\n    if (this.id > other.id) {\n      return +1\n    }\n    return 0\n  }\n\n  /**\n   * Gets a copy of this blank node in the specified formula\n   * @param formula The formula\n   */\n  copy (formula: IndexedFormula): BlankNode { // depends on the formula\n    var bnodeNew = new BlankNode()\n    formula.copyTo(this, bnodeNew)\n    return bnodeNew\n  }\n\n  toCanonical () {\n    return BlankNode.NTAnonymousNodePrefix + this.value\n  }\n\n  toString () {\n    return BlankNode.NTAnonymousNodePrefix + this.id\n  }\n}\n","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import ClassOrder from './class-order'\nimport Node from './node-internal'\nimport { VariableTermType } from './types'\nimport * as Uri from './uri'\nimport { Variable as TFVariable } from './tf-types'\n\n/**\n* Variables are placeholders used in patterns to be matched.\n* In cwm they are symbols which are the formula's list of quantified variables.\n* In sparql they are not visibly URIs.  Here we compromise, by having\n* a common special base URI for variables. Their names are uris,\n* but the ? notation has an implicit base uri of 'varid:'\n*/\nexport default class Variable extends Node implements TFVariable {\n  termType: typeof VariableTermType = VariableTermType\n\n  /** The base string for a variable's name */\n  base = 'varid:'\n  classOrder = ClassOrder.Variable\n  isVar = 1\n  /** The unique identifier of this variable */\n  uri: string\n\n  /**\n   * Initializes this variable\n   * @param name The variable's name\n   */\n  constructor (name = '') {\n    super(name)\n    this.base = 'varid:'\n    this.uri = Uri.join(name, this.base)\n  }\n\n  equals (other) {\n    if (!other) {\n      return false\n    }\n\n    return (this.termType === other.termType) && (this.value === other.value)\n  }\n\n  hashString () {\n    return this.toString()\n  }\n\n  substitute (bindings) {\n    var ref\n    return (ref = bindings[this.toNT()]) != null ? ref : this\n  }\n\n  toString () {\n    return Variable.toString(this)\n  }\n\n  static toString (variable) {\n    if (variable.uri.slice(0, variable.base.length) === variable.base) {\n      return `?${variable.uri.slice(variable.base.length)}`\n    }\n\n    return `?${variable.uri}`\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) &&\n  (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n","/*  Identity management and indexing for RDF\n *\n * This file provides  IndexedFormula a formula (set of triples) which\n * indexed by predicate, subject and object.\n *\n * It \"smushes\"  (merges into a single node) things which are identical\n * according to owl:sameAs or an owl:InverseFunctionalProperty\n * or an owl:FunctionalProperty\n *\n *\n *  2005-10 Written Tim Berners-Lee\n *  2007    Changed so as not to munge statements from documents when smushing\n *  2019    Converted to typescript\n *\n *\n*/\n\n/** @module store */\n\nimport ClassOrder from './class-order'\nimport { defaultGraphURI } from './factories/canonical-data-factory'\nimport Formula, { FormulaOpts } from './formula'\nimport { ArrayIndexOf } from './utils'\nimport { RDFArrayRemove } from './utils-js'\nimport {\n  isRDFlibObject,\n  isStore,\n  isGraph,\n  isPredicate,\n  isQuad,\n  isSubject\n} from './utils/terms'\nimport Node from './node'\nimport Variable from './variable'\nimport { Query, indexedFormulaQuery } from './query'\nimport UpdateManager from './update-manager'\nimport {\n  Bindings, BlankNodeTermType, CollectionTermType, DefaultGraphTermType, EmptyTermType, GraphTermType, LiteralTermType, NamedNodeTermType, VariableTermType\n} from './types'\nimport Statement from './statement'\nimport { Indexable } from './factories/factory-types'\nimport NamedNode from './named-node'\nimport Fetcher from './fetcher'\nimport {\n  Quad_Graph,\n  Literal as TFLiteral,\n  NamedNode as TFNamedNode,\n  Quad_Object,\n  Quad_Predicate,\n  Quad,\n  Quad_Subject,\n  Term,\n} from './tf-types'\nimport { namedNode } from './index'\nimport BlankNode from './blank-node'\nimport DefaultGraph from './default-graph'\nimport Empty from './empty'\nimport Literal from './literal'\nimport Collection from './collection'\n\nconst owlNamespaceURI = 'http://www.w3.org/2002/07/owl#'\n\ntype FeaturesType = Array<('sameAs' | 'InverseFunctionalProperty' | 'FunctionalProperty')> | undefined\n\nexport { defaultGraphURI }\n// var link_ns = 'http://www.w3.org/2007/ont/link#'\n\n// Handle Functional Property\nfunction handleFP (\n  formula: IndexedFormula,\n  subj: Quad_Subject,\n  pred: Quad_Predicate,\n  obj: Quad_Object\n): boolean {\n  var o1 = formula.any(subj, pred, undefined)\n  if (!o1) {\n    return false // First time with this value\n  }\n  // log.warn(\"Equating \"+o1.uri+\" and \"+obj.uri + \" because FP \"+pred.uri);  //@@\n  formula.equate(o1, obj)\n  return true\n} // handleFP\n\n// Handle Inverse Functional Property\nfunction handleIFP (\n  formula: IndexedFormula,\n  subj: Quad_Subject,\n  pred: Quad_Predicate,\n  obj: Quad_Object\n): boolean {\n  var s1 = formula.any(undefined, pred, obj)\n  if (!s1) {\n    return false // First time with this value\n  }\n  // log.warn(\"Equating \"+s1.uri+\" and \"+subj.uri + \" because IFP \"+pred.uri);  //@@\n  formula.equate(s1, subj)\n  return true\n} // handleIFP\n\nfunction handleRDFType (\n  formula: IndexedFormula,\n  subj: Quad_Subject,\n  pred: Quad_Predicate,\n  obj: Quad_Object,\n  why: Quad_Graph\n) {\n  //@ts-ignore this method does not seem to exist in this library\n  if (formula.typeCallback) {\n    (formula as any).typeCallback(formula, obj, why)\n  }\n\n  var x = formula.classActions[formula.id(obj)]\n  var done = false\n  if (x) {\n    for (var i = 0; i < x.length; i++) {\n      done = done || x[i](formula, subj, pred, obj, why)\n    }\n  }\n  return done // statement given is not needed if true\n}\n\n/**\n * Indexed Formula aka Store\n */\nexport default class IndexedFormula extends Formula { // IN future - allow pass array of statements to constructor\n  /**\n   * An UpdateManager initialised to this store\n   */\n  updater?: UpdateManager\n\n  /**\n   * Dictionary of namespace prefixes\n   */\n  namespaces: {[key: string]: string}\n\n  /** Map of iri predicates to functions to call when adding { s type X } */\n  classActions: { [k: string]: Function[] }\n  /** Map of iri predicates to functions to call when getting statement with {s X o} */\n  propertyActions: { [k: string]: Function[] }\n  /** Redirect to lexically smaller equivalent symbol */\n  redirections: any[]\n  /** Reverse mapping to redirection: aliases for this */\n  aliases: any[]\n  /** Redirections we got from HTTP */\n  HTTPRedirects: Statement[]\n  /** Array of statements with this X as subject */\n  subjectIndex: Statement[]\n  /** Array of statements with this X as predicate */\n  predicateIndex: Statement[]\n  /** Array of statements with this X as object */\n  objectIndex: Statement[]\n  /** Array of statements with X as provenance */\n  whyIndex: Statement[]\n  index: [\n    Statement[],\n    Statement[],\n    Statement[],\n    Statement[]\n  ]\n  features: FeaturesType\n  static handleRDFType: Function\n  _universalVariables?: NamedNode[]\n  _existentialVariables?: BlankNode[]\n\n  /** Function to remove quads from the store arrays with */\n  private rdfArrayRemove: (arr: Quad[], q: Quad) => void\n  /** Callbacks which are triggered after a statement has been added to the store */\n  private dataCallbacks?: Array<(q: Quad) => void>\n\n  /**\n   * Creates a new formula\n   * @param features - What sort of automatic processing to do? Array of string\n   * @param features.sameAs - Smush together A and B nodes whenever { A sameAs B }\n   * @param opts\n   * @param [opts.rdfFactory] - The data factory that should be used by the store\n   * @param [opts.rdfArrayRemove] - Function which removes statements from the store\n   * @param [opts.dataCallback] - Callback when a statement is added to the store, will not trigger when adding duplicates\n   */\n  constructor (features?: FeaturesType, opts: FormulaOpts = {}) {\n    super(undefined, undefined, undefined, undefined, opts)\n\n    this.propertyActions = {}\n    this.classActions = {}\n    this.redirections = []\n    this.aliases = []\n    this.HTTPRedirects = []\n    this.subjectIndex = []\n    this.predicateIndex = []\n    this.objectIndex = []\n    this.whyIndex = []\n    this.index = [\n      this.subjectIndex,\n      this.predicateIndex,\n      this.objectIndex,\n      this.whyIndex\n    ]\n    this.namespaces = {} // Dictionary of namespace prefixes\n    this.features = features || [ // By default, devs do not expect these features.\n// See https://github.com/linkeddata/rdflib.js/issues/458\n//      'sameAs',\n//      'InverseFunctionalProperty',\n//      'FunctionalProperty',\n    ]\n    this.rdfArrayRemove = opts.rdfArrayRemove || RDFArrayRemove\n    if (opts.dataCallback) {\n      this.dataCallbacks = [opts.dataCallback]\n    }\n\n    this.initPropertyActions(this.features)\n  }\n\n  /**\n   * Gets the URI of the default graph\n   */\n  static get defaultGraphURI(): string {\n    return defaultGraphURI\n  }\n\n  /**\n   * Gets this graph with the bindings substituted\n   * @param bindings The bindings\n   */\n  substitute <T extends Node = IndexedFormula>(bindings: Bindings): T {\n    var statementsCopy = this.statements.map(function (ea: Quad) {\n      return (ea as Statement).substitute(bindings)\n    })\n    var y = new IndexedFormula()\n    y.add(statementsCopy)\n    return y as unknown as T\n  }\n\n  /**\n   * Add a callback which will be triggered after a statement has been added to the store.\n   * @param cb\n   */\n  addDataCallback(cb: (q: Quad) => void): void {\n    if (!this.dataCallbacks) {\n      this.dataCallbacks = []\n    }\n    this.dataCallbacks.push(cb)\n  }\n\n  /**\n   * Apply a set of statements to be deleted and to be inserted\n   *\n   * @param patch - The set of statements to be deleted and to be inserted\n   * @param target - The name of the document to patch\n   * @param patchCallback - Callback to be called when patching is complete\n   */\n  applyPatch(\n    patch: {\n        delete?: ReadonlyArray<Statement>,\n        patch?: ReadonlyArray<Statement>,\n        where?: any\n    },\n    target: TFNamedNode,\n    patchCallback: (errorString?: string) => void\n  ): void {\n    var targetKB = this\n    var ds\n    var binding: Bindings | null = null\n\n    function doPatch (onDonePatch: (errorString?: string) => void) {\n      if (patch['delete']) {\n        ds = patch['delete']\n        // console.log(bindingDebug(binding))\n        // console.log('ds before substitute: ' + ds)\n        if (binding) ds = ds.substitute(binding)\n        // console.log('applyPatch: delete: ' + ds)\n        ds = ds.statements as Statement[]\n        var bad: Quad[] = []\n        var ds2 = ds.map(function (st: Quad) { // Find the actual statements in the store\n          var sts = targetKB.statementsMatching(st.subject, st.predicate, st.object, target)\n          if (sts.length === 0) {\n            // log.info(\"NOT FOUND deletable \" + st)\n            bad.push(st)\n            return null\n          } else {\n            // log.info(\"Found deletable \" + st)\n            return sts[0]\n          }\n        })\n        if (bad.length) {\n          // console.log('Could not find to delete ' + bad.length + 'statements')\n          // console.log('despite ' + targetKB.statementsMatching(bad[0].subject, bad[0].predicate)[0])\n          return patchCallback('Could not find to delete: ' + bad.join('\\n or '))\n        }\n        ds2.map(function (st: Quad) {\n          targetKB.remove(st)\n        })\n      }\n      if (patch['insert']) {\n        // log.info(\"doPatch insert \"+patch['insert'])\n        ds = patch['insert']\n        if (binding) ds = ds.substitute(binding)\n        ds = ds.statements\n        ds.map(function (st: Quad) {\n          st.graph = target\n          targetKB.add(st.subject, st.predicate, st.object, st.graph)\n        })\n      }\n      onDonePatch()\n    }\n    if (patch.where) {\n      // log.info(\"Processing WHERE: \" + patch.where + '\\n')\n      var query = new Query('patch')\n      query.pat = patch.where\n      query.pat.statements.map(function (st) {\n        st.graph = namedNode(target.value)\n      })\n      //@ts-ignore TODO: add sync property to Query when converting Query to typescript\n      query.sync = true\n\n      var bindingsFound: Bindings[] = []\n\n      targetKB.query(\n        query,\n        function onBinding (binding) {\n        bindingsFound.push(binding)\n        // console.log('   got a binding: ' + bindingDebug(binding))\n      },\n        targetKB.fetcher,\n        function onDone () {\n          if (bindingsFound.length === 0) {\n            return patchCallback('No match found to be patched:' + patch.where)\n          }\n          if (bindingsFound.length > 1) {\n            return patchCallback('Patch ambiguous. No patch done.')\n          }\n          binding = bindingsFound[0]\n          doPatch(patchCallback)\n        })\n    } else {\n      doPatch(patchCallback)\n    }\n  }\n\n  /**\n   * N3 allows for declaring blank nodes, this function enables that support\n   *\n   * @param x The blank node to be declared, supported in N3\n   */\n  declareExistential(x: BlankNode): BlankNode {\n    if (!this._existentialVariables) this._existentialVariables = []\n    this._existentialVariables.push(x)\n    return x\n  }\n\n  /**\n   * @param features\n   */\n  initPropertyActions(features: FeaturesType) {\n    // If the predicate is #type, use handleRDFType to create a typeCallback on the object\n    this.propertyActions[this.rdfFactory.id(this.rdfFactory.namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'))] =\n      [ handleRDFType ]\n\n    // Assumption: these terms are not redirected @@fixme\n    if (ArrayIndexOf(features, 'sameAs') >= 0) {\n      this.propertyActions[this.rdfFactory.id(this.rdfFactory.namedNode(`${owlNamespaceURI}sameAs`))] = [\n        function (formula, subj, pred, obj, why) {\n          // log.warn(\"Equating \"+subj.uri+\" sameAs \"+obj.uri);  //@@\n          formula.equate(subj, obj)\n          return true // true if statement given is NOT needed in the store\n        }\n      ] // sameAs -> equate & don't add to index\n    }\n    if (ArrayIndexOf(features, 'InverseFunctionalProperty') >= 0) {\n      this.classActions[this.rdfFactory.id(this.rdfFactory.namedNode(`${owlNamespaceURI}InverseFunctionalProperty`))] = [\n        function (formula, subj, pred, obj, addFn) {\n          // yes subj not pred!\n          return formula.newPropertyAction(subj, handleIFP)\n        }\n      ] // IFP -> handleIFP, do add to index\n    }\n    if (ArrayIndexOf(features, 'FunctionalProperty') >= 0) {\n      this.classActions[this.rdfFactory.id(this.rdfFactory.namedNode(`${owlNamespaceURI}FunctionalProperty`))] = [\n        function (formula, subj, proj, obj, addFn) {\n          return formula.newPropertyAction(subj, handleFP)\n        }\n      ] // FP => handleFP, do add to index\n    }\n  }\n\n  /** @deprecated Use {add} instead */\n  addStatement (st: Quad): number {\n    this.add(st.subject, st.predicate, st.object, st.graph)\n    return this.statements.length\n  }\n\n  /**\n   * Adds a triple (quad) to the store.\n   *\n   * @param subj - The thing about which the fact a relationship is asserted.\n   *        Also accepts a statement or an array of Statements.\n   * @param pred - The relationship which is asserted\n   * @param obj - The object of the relationship, e.g. another thing or a value. If passed a string, this will become a literal.\n   * @param why - The document in which the triple (S,P,O) was or will be stored on the web\n   * @returns The statement added to the store, or the store\n   */\n  add (\n    subj: Quad_Subject | Quad | Quad[] | Statement | Statement[],\n    pred?: Quad_Predicate,\n    obj?: Term | string,\n    why?: Quad_Graph\n  ): Statement | null | this | number {\n    var i: number\n    if (arguments.length === 1) {\n      if (subj instanceof Array) {\n        for (i = 0; i < subj.length; i++) {\n          this.add(subj[i])\n        }\n      } else if (isQuad(subj)) {\n        this.add(subj.subject, subj.predicate, subj.object, subj.graph)\n      } else if (isStore(subj)) {\n        this.add((subj as any).statements)\n      }\n      return this\n    }\n    var actions: Function[]\n    var st: Statement\n    if (!why) {\n      // system generated\n      why = this.fetcher ? this.fetcher.appNode : this.rdfFactory.defaultGraph()\n    }\n    if (typeof subj == 'string') {\n      subj = this.rdfFactory.namedNode(subj)\n    }\n    pred = Node.fromValue(pred)\n    const objNode = Node.fromValue(obj) as Term\n    why = Node.fromValue(why)\n    if (!isSubject(subj)) {\n      throw new Error('Subject is not a subject type')\n    }\n    if (!isPredicate(pred)) {\n      throw new Error(`Predicate ${pred} is not a predicate type`)\n    }\n    if (!isRDFlibObject(objNode)) {\n      throw new Error(`Object ${objNode} is not an object type`)\n    }\n    if (!isGraph(why)) {\n      throw new Error(\"Why is not a graph type\")\n    }\n    //@ts-ignore This is not used internally\n    if (this.predicateCallback) {\n      //@ts-ignore This is not used internally\n      this.predicateCallback(this, pred, why)\n    }\n    // Action return true if the statement does not need to be added\n    var predHash = this.id(this.canon(pred!))\n    actions = this.propertyActions[predHash] // Predicate hash\n    var done = false\n    if (actions) {\n      // alert('type: '+typeof actions +' @@ actions='+actions)\n      for (i = 0; i < actions.length; i++) {\n        done = done || actions[i](this, subj, pred, objNode, why)\n      }\n    }\n    if (this.holds(subj, pred, objNode, why)) { // Takes time but saves duplicates\n      // console.log('rdflib: Ignoring dup! {' + subj + ' ' + pred + ' ' + obj + ' ' + why + '}')\n      return null // @@better to return self in all cases?\n    }\n    // If we are tracking provenance, every thing should be loaded into the store\n    // if (done) return this.rdfFactory.quad(subj, pred, obj, why)\n    // Don't put it in the store\n    // still return this statement for owl:sameAs input\n    var hash = [\n      this.id(this.canon(subj)),\n      predHash,\n      this.id(this.canon(objNode)),\n      this.id(this.canon(why))\n    ]\n    // @ts-ignore this will fail if you pass a collection and the factory does not allow Collections\n    st = this.rdfFactory.quad(subj, pred, objNode, why)\n    for (i = 0; i < 4; i++) {\n      var ix = this.index[i]\n      var h = hash[i]\n      if (!ix[h]) {\n        ix[h] = []\n      }\n      ix[h].push(st) // Set of things with this as subject, etc\n    }\n\n    // log.debug(\"ADDING    {\"+subj+\" \"+pred+\" \"+objNode+\"} \"+why)\n    this.statements.push(st)\n\n    if (this.dataCallbacks) {\n      for (const callback of this.dataCallbacks) {\n        callback(st)\n      }\n    }\n\n    return st\n  }\n\n  /**\n   * Returns the symbol with canonical URI as smushed\n   * @param term - An RDF node\n   */\n  canon(term?: Term): Node {\n    if (!term) {\n      // @@ TODO Should improve this to return proper value - doing this to keep it backward compatible\n      return term as unknown as Node\n    }\n    const y = this.redirections[this.id(term)]\n    if (y) {\n      return y\n    }\n    switch (term.termType) {\n      case BlankNodeTermType:\n        return new BlankNode(term.value)\n      case CollectionTermType:\n        return term as Collection // non-RDF/JS type, should just need to cast\n      case DefaultGraphTermType:\n        return new DefaultGraph()\n      case EmptyTermType: // non-RDF/JS type, should just need to cast\n        return term as Empty\n      case GraphTermType: // non-RDF/JS type, should just need to cast\n        return term as IndexedFormula\n      case LiteralTermType:\n        return new Literal(term.value, (term as TFLiteral).language, (term as TFLiteral).datatype)\n      case NamedNodeTermType:\n        return new NamedNode(term.value)\n      case VariableTermType:\n        return new Variable(term.value)\n      default:\n        throw new Error(`Term Type not recognized for canonization: ${term.termType}`)\n    }\n  }\n\n\n  /**\n   * Checks this formula for consistency\n   */\n  check(): void {\n    this.checkStatementList(this.statements)\n    for (var p = 0; p < 4; p++) {\n      var ix = this.index[p]\n      for (var key in ix) {\n        if (ix.hasOwnProperty(key)) {\n          // @ts-ignore should this pass an array or a single statement? checkStateMentsList expects an array.\n          this.checkStatementList(ix[key], p)\n        }\n      }\n    }\n  }\n\n  /**\n   * Checks a list of statements for consistency\n   * @param sts - The list of statements to check\n   * @param from - An index with the array ['subject', 'predicate', 'object', 'why']\n   */\n  checkStatementList(\n    sts: ReadonlyArray<Quad>,\n    from?: number\n  ): boolean | void {\n    if (from === undefined) {\n      from = 0\n    }\n    var names = ['subject', 'predicate', 'object', 'why']\n    var origin = ' found in ' + names[from] + ' index.'\n    var st: Quad\n    for (var j = 0; j < sts.length; j++) {\n      st = sts[j]\n      var term = [ st.subject, st.predicate, st.object, st.graph ]\n      var arrayContains = function (a: Array<any>, x: Quad) {\n        for (var i = 0; i < a.length; i++) {\n          if (a[i].subject.equals(x.subject) &&\n            a[i].predicate.equals(x.predicate) &&\n            a[i].object.equals(x.object) &&\n            a[i].why.equals(x.graph)) {\n            return true\n          }\n        }\n      }\n      for (var p = 0; p < 4; p++) {\n        var c = this.canon(term[p])\n        var h = this.id(c)\n        if (!this.index[p][h]) {\n          // throw new Error('No ' + name[p] + ' index for statement ' + st + '@' + st.why + origin)\n        } else {\n          if (!arrayContains(this.index[p][h], st)) {\n            // throw new Error('Index for ' + name[p] + ' does not have statement ' + st + '@' + st.why + origin)\n          }\n        }\n      }\n      if (!arrayContains(this.statements, st)) {\n        throw new Error('Statement list does not statement ' + st + '@' + st.graph + origin)\n      }\n    }\n  }\n\n  /**\n   * Closes this formula (and return it)\n   */\n  close(): IndexedFormula {\n    return this\n  }\n\n  compareTerms(u1: Term, u2: Term): number {\n    // Keep compatibility with downstream classOrder changes\n    if (Object.prototype.hasOwnProperty.call(u1, \"compareTerm\")) {\n      return (u1 as Node).compareTerm(u2 as Node)\n    }\n    if (ClassOrder[u1.termType] < ClassOrder[u2.termType]) {\n      return -1\n    }\n    if (ClassOrder[u1.termType] > ClassOrder[u2.termType]) {\n      return +1\n    }\n    if (u1.value < u2.value) {\n      return -1\n    }\n    if (u1.value > u2.value) {\n      return +1\n    }\n    return 0\n  }\n\n\n  /**\n   * replaces @template with @target and add appropriate triples\n   * removes no triples by default and is a one-direction replication\n   * @param template node to copy\n   * @param target node to copy to\n   * @param flags Whether or not to do a two-directional copy and/or delete triples\n   */\n  copyTo(\n    template: Quad_Subject,\n    target: Quad_Subject,\n    flags?: Array<('two-direction' | 'delete')>\n  ): void {\n    if (!flags) flags = []\n    var statList = this.statementsMatching(template)\n    if (ArrayIndexOf(flags, 'two-direction') !== -1) {\n      statList.concat(this.statementsMatching(undefined, undefined, template))\n    }\n    for (var i = 0; i < statList.length; i++) {\n      var st = statList[i]\n      switch (st.object.termType) {\n        case 'NamedNode':\n          this.add(target, st.predicate, st.object)\n          break\n        case 'Literal':\n        case 'BlankNode':\n        // @ts-ignore Collections can appear here\n        case 'Collection':\n          // @ts-ignore Possible bug: copy is not available on Collections\n          this.add(target, st.predicate, st.object.copy(this))\n      }\n      if (ArrayIndexOf(flags, 'delete') !== -1) {\n        this.remove(st)\n      }\n    }\n  }\n\n  /**\n   * Simplify graph in store when we realize two identifiers are equivalent\n   * We replace the bigger with the smaller.\n   * @param u1in The first node\n   * @param u2in The second node\n   */\n  equate(u1in: Term, u2in : Term): boolean {\n    // log.warn(\"Equating \"+u1+\" and \"+u2); // @@\n    // @@JAMBO Must canonicalize the uris to prevent errors from a=b=c\n    // 03-21-2010\n    const u1 = this.canon(u1in) as Quad_Subject\n    const u2 = this.canon(u2in) as Quad_Subject\n    var d = this.compareTerms(u1, u2)\n    if (!d) {\n      return true // No information in {a = a}\n    }\n    // var big\n    // var small\n    if (d < 0) { // u1 less than u2\n      return this.replaceWith(u2, u1)\n    } else {\n      return this.replaceWith(u1, u2)\n    }\n  }\n\n  /**\n   * Creates a new empty indexed formula\n   * Only applicable for IndexedFormula, but TypeScript won't allow a subclass to override a property\n   * @param features The list of features\n   */\n  formula(features: FeaturesType): IndexedFormula {\n    return new IndexedFormula(features)\n  }\n\n  /**\n   * Returns the number of statements contained in this IndexedFormula.\n   * (Getter proxy to this.statements).\n   * Usage:\n   *    ```\n   *    var kb = rdf.graph()\n   *    kb.length  // -> 0\n   *    ```\n   * @returns {Number}\n   */\n  get length (): number {\n    return this.statements.length\n  }\n\n  /**\n   * Returns any quads matching the given arguments.\n   * Standard RDFJS spec method for Source objects, implemented as an\n   * alias to `statementsMatching()`\n   * @param subject The subject\n   * @param predicate The predicate\n   * @param object The object\n   * @param graph The graph that contains the statement\n   */\n  match(\n    subject?: Quad_Subject | null,\n    predicate?: Quad_Predicate | null,\n    object?: Quad_Object | null,\n    graph?: Quad_Graph | null\n  ): Quad[] {\n    return this.statementsMatching(\n      Node.fromValue(subject),\n      Node.fromValue(predicate),\n      Node.fromValue(object),\n      Node.fromValue(graph)\n    )\n  }\n\n  /**\n   * Find out whether a given URI is used as symbol in the formula\n   * @param uri The URI to look for\n   */\n  mentionsURI(uri: string): boolean {\n    var hash = '<' + uri + '>'\n    return (!!this.subjectIndex[hash] ||\n    !!this.objectIndex[hash] ||\n    !!this.predicateIndex[hash])\n  }\n\n  /**\n   * Existentials are BNodes - something exists without naming\n   * @param uri An URI\n   */\n  newExistential(uri: string): Term {\n    if (!uri) return this.bnode()\n    var x = this.sym(uri)\n    // @ts-ignore x should be blanknode, but is namedNode.\n    return this.declareExistential(x)\n  }\n\n  /**\n   * Adds a new property action\n   * @param pred the predicate that the function should be triggered on\n   * @param action the function that should trigger\n   */\n  newPropertyAction(\n    pred: Quad_Predicate,\n    action: (\n      store: IndexedFormula,\n      subject: Quad_Subject,\n      predicate: Quad_Predicate,\n      object: Quad_Object\n    ) => boolean\n  ): boolean {\n    // log.debug(\"newPropertyAction:  \"+pred)\n    var hash = this.id(pred)\n    if (!this.propertyActions[hash]) {\n      this.propertyActions[hash] = []\n    }\n    this.propertyActions[hash].push(action)\n    // Now apply the function to to statements already in the store\n    var toBeFixed = this.statementsMatching(undefined, pred, undefined)\n    var done = false\n    for (var i = 0; i < toBeFixed.length; i++) { // NOT optimized - sort toBeFixed etc\n      done = done || action(this, toBeFixed[i].subject, pred, toBeFixed[i].object)\n    }\n    return done\n  }\n\n  /**\n   * Creates a new universal node\n   * Universals are Variables\n   * @param uri An URI\n   */\n  newUniversal(uri: string): TFNamedNode {\n    var x = this.sym(uri)\n    if (!this._universalVariables) this._universalVariables = []\n    this._universalVariables.push(x)\n    return x\n  }\n\n  // convenience function used by N3 parser\n  variable (name: string) {\n    return new Variable(name)\n  }\n\n  /**\n   * Find an unused id for a file being edited: return a symbol\n   * (Note: Slow iff a lot of them -- could be O(log(k)) )\n   * @param doc A document named node\n   */\n  nextSymbol(doc: TFNamedNode): TFNamedNode {\n    for (var i = 0; ;i++) {\n      var uri = doc.value + '#n' + i\n      if (!this.mentionsURI(uri)) return this.sym(uri)\n    }\n  }\n\n  /**\n   * Query this store asynchronously, return bindings in callback\n   *\n   * @param myQuery The query to be run\n   * @param callback Function to call when bindings\n   * @param Fetcher | null  If you want the query to do link following\n   * @param onDone OBSOLETE - do not use this // @@ Why not ?? Called when query complete\n   */\n  query(\n    myQuery: Query,\n    callback: (bindings: Bindings) => void,\n    fetcher?: Fetcher | null,\n    onDone?: () => void\n  ): void {\n    return indexedFormulaQuery.call(this, myQuery, callback, fetcher, onDone)\n  }\n\n  /**\n   * Query this store synchronously and return bindings\n   *\n   * @param myQuery The query to be run\n   */\n  querySync(myQuery: Query): any[] {\n    var results: Bindings[] = []\n    function saveBinginds (bindings: Bindings) {\n      results.push(bindings)\n    }\n    function onDone () {\n      done = true\n    }\n    var done = false\n    // @ts-ignore TODO: Add .sync to Query\n    myQuery.sync = true\n\n    indexedFormulaQuery.call(this, myQuery, saveBinginds, null, onDone)\n    if (!done) {\n      throw new Error('Sync query should have called done function')\n    }\n    return results\n  }\n\n  /**\n   * Removes one or multiple statement(s) from this formula\n   * @param st - A Statement or array of Statements to remove\n   */\n  remove(st: Quad | Quad[]): IndexedFormula {\n    if (st instanceof Array) {\n      for (var i = 0; i < st.length; i++) {\n        this.remove(st[i])\n      }\n      return this\n    }\n    if (isStore(st)) {\n      return this.remove(st.statements)\n    }\n    var sts = this.statementsMatching(st.subject, st.predicate, st.object, st.graph)\n    if (!sts.length) {\n      throw new Error('Statement to be removed is not on store: ' + st)\n    }\n    this.removeStatement(sts[0])\n    return this\n  }\n\n  /**\n   * Removes all statements in a doc\n   * @param doc - The document / graph\n   */\n  removeDocument(doc: Quad_Graph): IndexedFormula {\n    var sts: Quad[] = this.statementsMatching(undefined, undefined, undefined, doc).slice() // Take a copy as this is the actual index\n    for (var i = 0; i < sts.length; i++) {\n      this.removeStatement(sts[i])\n    }\n    return this\n  }\n\n  /**\n   * Remove all statements matching args (within limit) *\n   * @param subj The subject\n   * @param pred The predicate\n   * @param obj The object\n   * @param why The graph that contains the statement\n   * @param limit The number of statements to remove\n   */\n  removeMany(\n    subj?: Quad_Subject | null,\n    pred?: Quad_Predicate | null,\n    obj?: Quad_Object | null,\n    why?: Quad_Graph | null,\n    limit?: number\n  ): void {\n    // log.debug(\"entering removeMany w/ subj,pred,obj,why,limit = \" + subj +\", \"+ pred+\", \" + obj+\", \" + why+\", \" + limit)\n    var sts = this.statementsMatching(subj, pred, obj, why, false)\n    // This is a subtle bug that occurred in updateCenter.js too.\n    // The fact is, this.statementsMatching returns this.whyIndex instead of a copy of it\n    // but for perfromance consideration, it's better to just do that\n    // so make a copy here.\n    var statements: Quad[] = []\n    for (var i = 0; i < sts.length; i++) statements.push(sts[i])\n    if (limit) statements = statements.slice(0, limit)\n    for (i = 0; i < statements.length; i++) this.remove(statements[i])\n  }\n\n  /**\n   * Remove all matching statements\n   * @param subject The subject\n   * @param predicate The predicate\n   * @param object The object\n   * @param graph The graph that contains the statement\n   */\n  removeMatches(\n    subject?: Quad_Subject | null,\n    predicate?: Quad_Predicate | null,\n    object?: Quad_Object | null,\n    graph?: Quad_Graph | null\n  ): IndexedFormula {\n    this.removeStatements(\n      this.statementsMatching(subject, predicate, object, graph)\n    )\n    return this\n  }\n\n  /**\n   * Remove a particular statement object from the store\n   *\n   * @param st - a statement which is already in the store and indexed.\n   *        Make sure you only use this for these.\n   *        Otherwise, you should use remove() above.\n   */\n  removeStatement(st: Quad): IndexedFormula {\n    // log.debug(\"entering remove w/ st=\" + st)\n    var term = [ st.subject, st.predicate, st.object, st.graph ]\n    for (var p = 0; p < 4; p++) {\n      var c = this.canon(term[p])\n      var h = this.id(c)\n      if (!this.index[p][h]) {\n        // log.warn (\"Statement removal: no index '+p+': \"+st)\n      } else {\n        this.rdfArrayRemove(this.index[p][h], st)\n      }\n    }\n    this.rdfArrayRemove(this.statements, st)\n    return this\n  }\n\n  /**\n   * Removes statements\n   * @param sts The statements to remove\n   */\n  removeStatements(sts: ReadonlyArray<Quad>): IndexedFormula {\n    for (var i = 0; i < sts.length; i++) {\n      this.remove(sts[i])\n    }\n    return this\n  }\n\n  /**\n   * Replace big with small, obsoleted with obsoleting.\n   */\n  replaceWith (big: Quad_Subject, small: Quad_Subject): boolean {\n    // log.debug(\"Replacing \"+big+\" with \"+small) // this.id(@@\n    var oldhash = this.id(big)\n    var newhash = this.id(small)\n    var moveIndex = function (ix) {\n      var oldlist = ix[oldhash]\n      if (!oldlist) {\n        return // none to move\n      }\n      var newlist = ix[newhash]\n      if (!newlist) {\n        ix[newhash] = oldlist\n      } else {\n        ix[newhash] = oldlist.concat(newlist)\n      }\n      delete ix[oldhash]\n    }\n    // the canonical one carries all the indexes\n    for (var i = 0; i < 4; i++) {\n      moveIndex(this.index[i])\n    }\n    this.redirections[oldhash] = small\n    if (big.value) {\n      // @@JAMBO: must update redirections,aliases from sub-items, too.\n      if (!this.aliases[newhash]) {\n        this.aliases[newhash] = []\n      }\n      this.aliases[newhash].push(big) // Back link\n      if (this.aliases[oldhash]) {\n        for (i = 0; i < this.aliases[oldhash].length; i++) {\n          this.redirections[this.id(this.aliases[oldhash][i])] = small\n          this.aliases[newhash].push(this.aliases[oldhash][i])\n        }\n      }\n      this.add(small, this.sym('http://www.w3.org/2007/ont/link#uri'), big)\n      // If two things are equal, and one is requested, we should request the other.\n      if (this.fetcher) {\n        this.fetcher.nowKnownAs(big, small)\n      }\n    }\n    moveIndex(this.classActions)\n    moveIndex(this.propertyActions)\n    // log.debug(\"Equate done. \"+big+\" to be known as \"+small)\n    return true // true means the statement does not need to be put in\n  }\n\n  /**\n   * Return all equivalent URIs by which this is known\n   * @param x A named node\n   */\n  allAliases(x: NamedNode): NamedNode[] {\n    var a = this.aliases[this.id(this.canon(x))] || []\n    a.push(this.canon(x))\n    return a\n  }\n\n  /**\n   * Compare by canonical URI as smushed\n   * @param x A named node\n   * @param y Another named node\n   */\n  sameThings(x: NamedNode, y: NamedNode): boolean {\n    if (x.equals(y)) {\n      return true\n    }\n    var x1 = this.canon(x)\n    //    alert('x1='+x1)\n    if (!x1) return false\n    var y1 = this.canon(y)\n    //    alert('y1='+y1); //@@\n    if (!y1) return false\n    return (x1.value === y1.value)\n  }\n\n  setPrefixForURI (prefix: string, nsuri: string): void {\n    // TODO: This is a hack for our own issues, which ought to be fixed\n    // post-release\n    // See http://dig.csail.mit.edu/cgi-bin/roundup.cgi/$rdf/issue227\n    if (prefix === 'tab' && this.namespaces['tab']) {\n      return\n    } // There are files around with long badly generated prefixes like this\n    if (prefix.slice(0, 2) === 'ns' || prefix.slice(0, 7) === 'default') {\n      return\n    }\n    this.namespaces[prefix] = nsuri\n  }\n\n  /** Search the Store\n   *\n   * ALL CONVENIENCE LOOKUP FUNCTIONS RELY ON THIS!\n   * @param subj - A node to search for as subject, or if null, a wildcard\n   * @param pred - A node to search for as predicate, or if null, a wildcard\n   * @param obj - A node to search for as object, or if null, a wildcard\n   * @param why - A node to search for as graph, or if null, a wildcard\n   * @param justOne - flag - stop when found one rather than get all of them?\n   * @returns An array of nodes which match the wildcard position\n   */\n  statementsMatching (\n    subj?: Quad_Subject | null,\n    pred?: Quad_Predicate | null,\n    obj?: Quad_Object | null,\n    why?: Quad_Graph | null,\n    justOne?: boolean\n  ): Statement[] {\n    // log.debug(\"Matching {\"+subj+\" \"+pred+\" \"+obj+\"}\")\n    var pat = [ subj, pred, obj, why ]\n    var pattern: Term[] = []\n    var hash: Indexable[] = []\n    var wild: number[] = [] // wildcards\n    var given: number[] = [] // Not wild\n    var p: number\n    var list\n    for (p = 0; p < 4; p++) {\n      pattern[p] = this.canon(Node.fromValue(pat[p]))\n      if (!pattern[p]) {\n        wild.push(p)\n      } else {\n        given.push(p)\n        hash[p] = this.id(pattern[p])\n      }\n    }\n    if (given.length === 0) {\n      return this.statements\n    }\n    if (given.length === 1) { // Easy too, we have an index for that\n      p = given[0]\n      list = this.index[p][hash[p]]\n      if (list && justOne) {\n        if (list.length > 1) {\n          list = list.slice(0, 1)\n        }\n      }\n      list = list || []\n      return list\n    }\n    // Now given.length is 2, 3 or 4.\n    // We hope that the scale-free nature of the data will mean we tend to get\n    // a short index in there somewhere!\n    var best = 1e10 // really bad\n    var iBest\n    var i\n    for (i = 0; i < given.length; i++) {\n      p = given[i] // Which part we are dealing with\n      list = this.index[p][hash[p]]\n      if (!list) {\n        return [] // No occurrences\n      }\n      if (list.length < best) {\n        best = list.length\n        iBest = i // (not p!)\n      }\n    }\n    // Ok, we have picked the shortest index but now we have to filter it\n    var pBest = given[iBest]\n    var possibles: Statement[] = this.index[pBest][hash[pBest]]\n    var check = given.slice(0, iBest).concat(given.slice(iBest + 1)) // remove iBest\n    var results: Statement[] = []\n    var parts = [ 'subject', 'predicate', 'object', 'why' ]\n    for (var j = 0; j < possibles.length; j++) {\n      var st: Statement | null = possibles[j]\n\n      for (i = 0; i < check.length; i++) { // for each position to be checked\n        p = check[i]\n        if (!this.canon(st[parts[p]]).equals(pattern[p])) {\n          st = null\n          break\n        }\n      }\n      if (st != null) {\n        results.push(st)\n        if (justOne) break\n      }\n    }\n    return results\n  }\n\n  /**\n   * A list of all the URIs by which this thing is known\n   * @param term\n   */\n  uris(term: Quad_Subject): string[] {\n    var cterm = this.canon(term)\n    var terms = this.aliases[this.id(cterm)]\n    if (!cterm.value) return []\n    var res = [ cterm.value ]\n    if (terms) {\n      for (var i = 0; i < terms.length; i++) {\n        res.push(terms[i].uri)\n      }\n    }\n    return res\n  }\n}\nIndexedFormula.handleRDFType = handleRDFType\n","import { Term } from '../tf-types'\n\n/** Retrieve the value of a term, or self if already a string. */\nexport function termValue (node: Term | string): string {\n  if (typeof node === 'string') {\n    return node\n  }\n\n  return node.value\n}\n","// This file attaches all functionality to Node\n// that would otherwise require circular dependencies.\nimport { fromValue } from './collection'\nimport Node from './node-internal'\nimport Namespace from './namespace'\nimport { isCollection, isLiteral } from './utils/terms'\nimport { Term } from './tf-types'\n\n/**\n * Creates an RDF Node from a native javascript value.\n * RDF Nodes are returned unchanged, undefined returned as itself.\n * @method fromValue\n * @static\n * @param value {Node|Date|String|Number|Boolean|Undefined}\n * @return {Node|Collection}\n */\nNode.fromValue = fromValue;\n\nexport default Node\n\nconst ns = { xsd: Namespace('http://www.w3.org/2001/XMLSchema#') }\n\n/**\n * Gets the javascript object equivalent to a node\n * @param term The RDF node\n */\nNode.toJS = function (term: Term): Term | boolean | number | Date | string | any[] {\n  if (isCollection(term)) {\n    return term.elements.map(Node.toJS) // Array node (not standard RDFJS)\n  }\n  if (!isLiteral(term)) return term\n  if (term.datatype.equals(ns.xsd('boolean'))) {\n    return term.value === '1' || term.value === 'true'\n  }\n  if (term.datatype.equals(ns.xsd('dateTime')) ||\n    term.datatype.equals(ns.xsd('date'))) {\n    return new Date(term.value)\n  }\n  if (\n    term.datatype.equals(ns.xsd('integer')) ||\n    term.datatype.equals(ns.xsd('float')) ||\n    term.datatype.equals(ns.xsd('decimal'))\n  ) {\n    return Number(term.value)\n  }\n  return term.value\n}\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\n// TODO: move `IdentifierIssuer` to its own package\nconst IdentifierIssuer = require('rdf-canonize').IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\n\n// constants\nconst REGEX_LINK_HEADERS = /(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g;\nconst REGEX_LINK_HEADER = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\nconst REGEX_LINK_HEADER_PARAMS =\n  /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\nconst DEFAULTS = {\n  headers: {\n    accept: 'application/ld+json, application/json'\n  }\n};\n\nconst api = {};\nmodule.exports = api;\napi.IdentifierIssuer = IdentifierIssuer;\n\n/**\n * Clones an object, array, Map, Set, or string/number. If a typed JavaScript\n * object is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(types.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(value instanceof Map) {\n      rval = new Map();\n      for(const [k, v] of value) {\n        rval.set(k, api.clone(v));\n      }\n    } else if(value instanceof Set) {\n      rval = new Set();\n      for(const v of value) {\n        rval.add(api.clone(v));\n      }\n    } else if(types.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Ensure a value is an array. If the value is an array, it is returned.\n * Otherwise, it is wrapped in an array.\n *\n * @param value the value to return as an array.\n *\n * @return the value as an array.\n */\napi.asArray = function(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\n/**\n * Builds an HTTP headers object for making a JSON-LD request from custom\n * headers and asserts the `accept` header isn't overridden.\n *\n * @param headers an object of headers with keys as header names and values\n *          as header values.\n *\n * @return an object of headers with a valid `accept` header.\n */\napi.buildHeaders = (headers = {}) => {\n  const hasAccept = Object.keys(headers).some(\n    h => h.toLowerCase() === 'accept');\n\n  if(hasAccept) {\n    throw new RangeError(\n      'Accept header may not be specified; only \"' +\n      DEFAULTS.headers.accept + '\" is supported.');\n  }\n\n  return Object.assign({Accept: DEFAULTS.headers.accept}, headers);\n};\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>;\n * rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\napi.parseLinkHeader = header => {\n  const rval = {};\n  // split on unbracketed/unquoted commas\n  const entries = header.match(REGEX_LINK_HEADERS);\n  for(let i = 0; i < entries.length; ++i) {\n    let match = entries[i].match(REGEX_LINK_HEADER);\n    if(!match) {\n      continue;\n    }\n    const result = {target: match[1]};\n    const params = match[2];\n    while((match = REGEX_LINK_HEADER_PARAMS.exec(params))) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    const rel = result['rel'] || '';\n    if(Array.isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rval.hasOwnProperty(rel)) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\napi.validateTypeValue = (v, isFrame) => {\n  if(types.isString(v)) {\n    return;\n  }\n\n  if(types.isArray(v) && v.every(vv => types.isString(vv))) {\n    return;\n  }\n  if(isFrame && types.isObject(v)) {\n    switch(Object.keys(v).length) {\n      case 0:\n        // empty object is wildcard\n        return;\n      case 1:\n        // default entry is all strings\n        if('@default' in v &&\n          api.asArray(v['@default']).every(vv => types.isString(vv))) {\n          return;\n        }\n    }\n  }\n\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n    'strings, an empty object, ' +\n    'or a default object.', 'jsonld.SyntaxError',\n    {code: 'invalid type value', value: v});\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\napi.hasProperty = (subject, property) => {\n  if(subject.hasOwnProperty(property)) {\n    const value = subject[property];\n    return (!types.isArray(value) || value.length > 0);\n  }\n  return false;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\napi.hasValue = (subject, property, value) => {\n  if(api.hasProperty(subject, property)) {\n    let val = subject[property];\n    const isList = graphTypes.isList(val);\n    if(types.isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(let i = 0; i < val.length; ++i) {\n        if(api.compareValues(value, val[i])) {\n          return true;\n        }\n      }\n    } else if(!types.isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      return api.compareValues(value, val);\n    }\n  }\n  return false;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [valueIsArray] true if the value to be added should be preserved as\n *          an array (lists) (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n *        [prependValue] false to prepend value to any existing values.\n *          (default: false)\n */\napi.addValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('valueIsArray' in options)) {\n    options.valueIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n  if(!('prependValue' in options)) {\n    options.prependValue = false;\n  }\n\n  if(options.valueIsArray) {\n    subject[property] = value;\n  } else if(types.isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !subject.hasOwnProperty(property)) {\n      subject[property] = [];\n    }\n    if(options.prependValue) {\n      value = value.concat(subject[property]);\n      subject[property] = [];\n    }\n    for(let i = 0; i < value.length; ++i) {\n      api.addValue(subject, property, value[i], options);\n    }\n  } else if(subject.hasOwnProperty(property)) {\n    // check if subject already has value if duplicates not allowed\n    const hasValue = (!options.allowDuplicate &&\n      api.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!types.isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      if(options.prependValue) {\n        subject[property].unshift(value);\n      } else {\n        subject[property].push(value);\n      }\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\napi.getValues = (subject, property) => [].concat(subject[property] || []);\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\napi.removeProperty = (subject, property) => {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\napi.removeValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  const values = api.getValues(subject, property).filter(\n    e => !api.compareValues(e, value));\n\n  if(values.length === 0) {\n    api.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] an IdentifierIssuer to use to label blank nodes.\n */\napi.relabelBlankNodes = (input, options) => {\n  options = options || {};\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\napi.compareValues = (v1, v2) => {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(graphTypes.isValue(v1) && graphTypes.isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(types.isObject(v1) &&\n    ('@id' in v1) &&\n    types.isObject(v2) &&\n    ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a === b.\n */\napi.compareShortestLeast = (a, b) => {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n};\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(types.isArray(element)) {\n    for(let i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(graphTypes.isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(types.isObject(element)) {\n    // relabel blank node\n    if(graphTypes.isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    const keys = Object.keys(element).sort();\n    for(let ki = 0; ki < keys.length; ++ki) {\n      const key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class JsonLdError extends Error {\n  /**\n   * Creates a JSON-LD Error.\n   *\n   * @param msg the error message.\n   * @param type the error type.\n   * @param details the error details.\n   */\n  constructor(\n    message = 'An unspecified JSON-LD error occurred.',\n    name = 'jsonld.Error',\n    details = {}) {\n    super(message);\n    this.name = name;\n    this.message = message;\n    this.details = details;\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\napi.isSubject = v => {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  if(types.isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    const keyCount = Object.keys(v).length;\n    return (keyCount > 1 || !('@id' in v));\n  }\n  return false;\n};\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\napi.isSubjectReference = v =>\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  (types.isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\napi.isValue = v =>\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  types.isObject(v) && ('@value' in v);\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\napi.isList = v =>\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  types.isObject(v) && ('@list' in v);\n\n/**\n * Returns true if the given value is a @graph.\n *\n * @return true if the value is a @graph, false if not.\n */\napi.isGraph = v => {\n  // Note: A value is a graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It may have '@id' or '@index'\n  return types.isObject(v) &&\n    '@graph' in v &&\n    Object.keys(v)\n      .filter(key => key !== '@id' && key !== '@index').length === 1;\n};\n\n/**\n * Returns true if the given value is a simple @graph.\n *\n * @return true if the value is a simple @graph, false if not.\n */\napi.isSimpleGraph = v => {\n  // Note: A value is a simple graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It has only 1 key or 2 keys where one of them is `@index`.\n  return api.isGraph(v) && !('@id' in v);\n};\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\napi.isBlankNode = v => {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  if(types.isObject(v)) {\n    if('@id' in v) {\n      return (v['@id'].indexOf('_:') === 0);\n    }\n    return (Object.keys(v).length === 0 ||\n      !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n  }\n  return false;\n};\n","// Prevents circular dependencies between data-factory-internal and statement\n\nimport NamedNode from '../named-node'\n\nexport const defaultGraphURI = 'chrome:theSession'\nexport const defaultGraphNode = new NamedNode(defaultGraphURI)\n","import RdflibBlankNode from './blank-node'\nimport ClassOrder from './class-order'\nimport Literal from './literal'\nimport Node from './node-internal'\nimport {\n  Bindings,\n  CollectionTermType,\n  FromValueReturns,\n  ValueType\n} from './types'\nimport Variable from './variable'\nimport { isTerm } from './utils/terms'\nimport { Term } from './tf-types'\n\n/**\n * Creates an RDF Node from a native javascript value.\n * RDF Nodes are returned unchanged, undefined returned as itself.\n * Arrays return Collections.\n * Strings, numbers and booleans return Literals.\n * @param value {Node|Date|String|Number|Boolean|Undefined}\n * @return {Node|Collection}\n */\nexport function fromValue <T extends FromValueReturns<C> = any, C extends Node = any>(value: ValueType): T {\n  if (typeof value === 'undefined' || value === null) {\n    return value as T\n  }\n\n  if (isTerm(value)) {  // a Node subclass or a Collection\n    return value as T\n  }\n\n  if (Array.isArray(value)) {\n    return new Collection<C>(value) as T\n  }\n\n  return Literal.fromValue<any>(value)\n}\n\n/**\n * A collection of other RDF nodes\n *\n * Use generic T to control the contents of the array.\n */\nexport default class Collection<\n  T extends Node = Node | RdflibBlankNode | Collection<any> | Literal | Variable\n> extends Node implements Term {\n  static termType: typeof CollectionTermType = CollectionTermType\n  termType: typeof CollectionTermType = CollectionTermType\n\n  classOrder = ClassOrder.Collection\n  closed: boolean = false\n  compareTerm = RdflibBlankNode.prototype.compareTerm\n  /**\n   * The nodes in this collection\n   */\n  elements: T[] = []\n  isVar = 0\n\n  constructor (initial?: ReadonlyArray<ValueType>) {\n    super((RdflibBlankNode.nextId++).toString())\n\n    if (initial && initial.length > 0) {\n      initial.forEach(element => {\n        this.elements.push(fromValue<T>(element))\n      })\n    }\n  }\n\n  public get id (): string {\n    return this.value\n  }\n\n  public set id (value) {\n    this.value = value\n  }\n\n  /**\n   * Appends an element to this collection\n   * @param element - The new element\n   */\n  append (element: T): number {\n    return this.elements.push(element)\n  }\n\n  /**\n   * Closes this collection\n   */\n  close (): boolean {\n    this.closed = true\n    return this.closed\n  }\n\n  /**\n   * Removes the first element from the collection (and return it)\n   */\n  shift (): T | undefined {\n    return this.elements.shift()\n  }\n\n  /**\n   * Creates a new Collection with the substituting bindings applied\n   * @param bindings - The bindings to substitute\n   */\n  substitute (bindings: Bindings) {\n    const elementsCopy = this.elements.map((ea) => ea.substitute(bindings))\n\n    return new Collection(elementsCopy) as Collection<Node | Collection<any> | Literal | Variable>\n  }\n\n  toNT () {\n    return Collection.toNT(this)\n  }\n\n  static toNT (collection) {\n    return RdflibBlankNode.NTAnonymousNodePrefix + collection.id\n  }\n\n  /**\n   * Serializes the collection to a string.\n   * Surrounded by (parentheses) and separated by spaces.\n   */\n  toString () {\n    return '(' + this.elements.join(' ') + ')'\n  }\n\n  /**\n   * Prepends the specified element to the collection's front\n   * @param element - The element to prepend\n   */\n  unshift (element: T): number {\n    return this.elements.unshift(element)\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\napi.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: [\n      'href', 'scheme', 'authority', 'path', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: [\n      'href', 'protocol', 'scheme', 'authority', 'auth', 'user', 'password',\n      'hostname', 'port', 'path', 'directory', 'file', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\napi.parse = (str, parser) => {\n  const parsed = {};\n  const o = api.parsers[parser || 'full'];\n  const m = o.regex.exec(str);\n  let i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n\n  // remove default ports in found in URLs\n  if((parsed.scheme === 'https' && parsed.port === '443') ||\n    (parsed.scheme === 'http' && parsed.port === '80')) {\n    parsed.href = parsed.href.replace(':' + parsed.port, '');\n    parsed.authority = parsed.authority.replace(':' + parsed.port, '');\n    parsed.port = null;\n  }\n\n  parsed.normalizedPath = api.removeDotSegments(parsed.path);\n  return parsed;\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\napi.prependBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(api.isAbsolute(iri)) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // parse given IRI\n  const rel = api.parse(iri);\n\n  // per RFC3986 5.2.2\n  const transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        let path = base.path;\n\n        // append relative path to the end of the last directory from base\n        path = path.substr(0, path.lastIndexOf('/') + 1);\n        if((path.length > 0 || base.authority) && path.substr(-1) !== '/') {\n          path += '/';\n        }\n        path += rel.path;\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  if(rel.path !== '') {\n    // remove slashes and dots in path\n    transform.path = api.removeDotSegments(transform.path);\n  }\n\n  // construct URL\n  let rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\napi.removeBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // establish base root\n  let root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  const rel = api.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  const baseSegments = base.normalizedPath.split('/');\n  const iriSegments = rel.normalizedPath.split('/');\n  const last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  let rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(let i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n */\napi.removeDotSegments = path => {\n  // RFC 3986 5.2.4 (reworked)\n\n  // empty path shortcut\n  if(path.length === 0) {\n    return '';\n  }\n\n  const input = path.split('/');\n  const output = [];\n\n  while(input.length > 0) {\n    const next = input.shift();\n    const done = input.length === 0;\n\n    if(next === '.') {\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    if(next === '..') {\n      output.pop();\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    output.push(next);\n  }\n\n  // if path was absolute, ensure output has leading /\n  if(path[0] === '/' && output.length > 0 && output[0] !== '') {\n    output.unshift('');\n  }\n  if(output.length === 1 && output[0] === '') {\n    return '/';\n  }\n\n  return output.join('/');\n};\n\n// TODO: time better isAbsolute/isRelative checks using full regexes:\n// http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n\n// regex to check for absolute IRI (starting scheme and ':') or blank node IRI\nconst isAbsoluteRegex = /^([A-Za-z][A-Za-z0-9+-.]*|_):[^\\s]*$/;\n\n/**\n * Returns true if the given value is an absolute IRI or blank node IRI, false\n * if not.\n * Note: This weak check only checks for a correct starting scheme.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\napi.isAbsolute = v => types.isString(v) && isAbsoluteRegex.test(v);\n\n/**\n * Returns true if the given value is a relative IRI, false if not.\n * Note: this is a weak check.\n *\n * @param v the value to check.\n *\n * @return true if the value is a relative IRI, false if not.\n */\napi.isRelative = v => types.isString(v);\n","/**\n*\n*  UTF-8 data encode / decode\n*  http://www.webtoolkit.info/\n*\n**/\nimport * as Uri from './uri'\nimport { ArrayIndexOf } from './utils'\n\nfunction hexify (str) { // also used in parser\n  return encodeURI(str);\n}\n\nvar Utf8 = {\n    // public method for url encoding\n    encode : function (string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                    utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                    utftext += String.fromCharCode((c >> 6) | 192);\n                    utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                    utftext += String.fromCharCode((c >> 12) | 224);\n                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                    utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    },\n    // public method for url decoding\n    decode : function (utftext) {\n        var string = \"\";\n        var i = 0;\n\n        while ( i < utftext.length ) {\n\n                var c = utftext.charCodeAt(i);\n                if (c < 128) {\n                        string += String.fromCharCode(c);\n                        i++;\n                }\n                else if((c > 191) && (c < 224)) {\n                        string += String.fromCharCode(((c & 31) << 6)\n                            | (utftext.charCodeAt(i+1) & 63));\n                        i += 2;\n                }\n                else {\n                        string += String.fromCharCode(((c & 15) << 12)\n                            | ((utftext.charCodeAt(i+1) & 63) << 6)\n                            | (utftext.charCodeAt(i+2) & 63));\n                        i += 3;\n                }\n        }\n        return string;\n    }\n}// Things we need to define to make converted pythn code work in js\n// environment of $rdf\n\nvar RDFSink_forSomeSym = \"http://www.w3.org/2000/10/swap/log#forSome\";\nvar RDFSink_forAllSym = \"http://www.w3.org/2000/10/swap/log#forAll\";\nvar Logic_NS = \"http://www.w3.org/2000/10/swap/log#\";\n\n//  pyjs seems to reference runtime library which I didn't find\n\nvar pyjslib_Tuple = function(theList) { return theList };\n\nvar pyjslib_List = function(theList) { return theList };\n\nvar pyjslib_Dict = function(listOfPairs) {\n    if (listOfPairs.length > 0)\n\tthrow \"missing.js: oops nnonempty dict not imp\";\n    return [];\n}\n\nvar pyjslib_len = function(s) { return s.length }\n\nvar pyjslib_slice = function(str, i, j) {\n    if (typeof str.slice == 'undefined')\n        throw '@@ mising.js: No .slice function for '+str+' of type '+(typeof str)\n    if ((typeof j == 'undefined') || (j ==null)) return str.slice(i);\n    return str.slice(i, j) // @ exactly the same spec?\n}\nvar StopIteration = Error('dummy error stop iteration');\n\nvar pyjslib_Iterator = function(theList) {\n    this.last = 0;\n    this.li = theList;\n    this.next = function() {\n\tif (this.last == this.li.length) throw StopIteration;\n\treturn this.li[this.last++];\n    }\n    return this;\n};\n\nvar ord = function(str) {\n    return str.charCodeAt(0)\n}\n\nvar string_find = function(str, s) {\n    return str.indexOf(s)\n}\n\nvar assertFudge = function(condition, desc) {\n    if (condition) return;\n    if (desc) throw \"python Assertion failed: \"+desc;\n    throw \"(python) Assertion failed.\";\n}\n\n\nvar stringFromCharCode = function(uesc) {\n    return String.fromCharCode(uesc);\n}\n\n\nString.prototype.encode = function(encoding) {\n    if (encoding != 'utf-8') throw \"UTF8_converter: can only do utf-8\"\n    return Utf8.encode(this);\n}\nString.prototype.decode = function(encoding) {\n    if (encoding != 'utf-8') throw \"UTF8_converter: can only do utf-8\"\n    //return Utf8.decode(this);\n    return this;\n}\n\n\n\nvar uripath_join = function(base, given) {\n    return Uri.join(given, base)  // sad but true\n}\n\nvar becauseSubexpression = null; // No reason needed\nvar diag_tracking = 0;\nvar diag_chatty_flag = 0;\nvar diag_progress = function(str) { /*$rdf.log.debug(str);*/ }\n\n// why_BecauseOfData = function(doc, reason) { return doc };\n\n\nvar RDF_type_URI = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nvar DAML_sameAs_URI = \"http://www.w3.org/2002/07/owl#sameAs\";\n\n/*\nfunction SyntaxError(details) {\n    return new __SyntaxError(details);\n}\n*/\n\nfunction __SyntaxError(details) {\n    this.details = details\n}\n\n/*\n\n$Id: n3parser.js 14561 2008-02-23 06:37:26Z kennyluck $\n\nHAND EDITED FOR CONVERSION TO JAVASCRIPT\n\nThis module implements a Nptation3 parser, and the final\npart of a notation3 serializer.\n\nSee also:\n\nNotation 3\nhttp://www.w3.org/DesignIssues/Notation3\n\nClosed World Machine - and RDF Processor\nhttp://www.w3.org/2000/10/swap/cwm\n\nTo DO: See also \"@@\" in comments\n\n- Clean up interfaces\n______________________________________________\n\nModule originally by Dan Connolly, includeing notation3\nparser and RDF generator. TimBL added RDF stream model\nand N3 generation, replaced stream model with use\nof common store/formula API.  Yosi Scharf developped\nthe module, including tests and test harness.\n\n*/\n\nvar ADDED_HASH = \"#\";\nvar LOG_implies_URI = \"http://www.w3.org/2000/10/swap/log#implies\";\nvar INTEGER_DATATYPE = \"http://www.w3.org/2001/XMLSchema#integer\";\nvar FLOAT_DATATYPE = \"http://www.w3.org/2001/XMLSchema#double\";\nvar DECIMAL_DATATYPE = \"http://www.w3.org/2001/XMLSchema#decimal\";\nvar DATE_DATATYPE = \"http://www.w3.org/2001/XMLSchema#date\";\nvar DATETIME_DATATYPE = \"http://www.w3.org/2001/XMLSchema#dateTime\";\nvar BOOLEAN_DATATYPE = \"http://www.w3.org/2001/XMLSchema#boolean\";\nvar option_noregen = 0;\nvar _notQNameChars = \"\\t\\r\\n !\\\"#$%&'()*.,+/;<=>?@[\\\\]^`{|}~\";\nvar _notNameChars =  ( _notQNameChars + \":\" ) ;\nvar _rdfns = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nvar N3CommentCharacter = \"#\";\nvar eol = new RegExp(\"^[ \\\\t]*(#[^\\\\n]*)?\\\\r?\\\\n\", 'g');\nvar eof = new RegExp(\"^[ \\\\t]*(#[^\\\\n]*)?$\", 'g');\nvar ws = new RegExp(\"^[ \\\\t]*\", 'g');\nvar signed_integer = new RegExp(\"^[-+]?[0-9]+\", 'g');\nvar number_syntax = new RegExp(\"^([-+]?[0-9]+)(\\\\.[0-9]+)?(e[-+]?[0-9]+)?\", 'g');\nvar datetime_syntax = new RegExp('^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9](T[0-9][0-9]:[0-9][0-9](:[0-9][0-9](\\\\.[0-9]*)?)?)?Z?');\n\nvar digitstring = new RegExp(\"^[0-9]+\", 'g');\nvar interesting = new RegExp(\"[\\\\\\\\\\\\r\\\\n\\\\\\\"]\", 'g');\nvar langcode = new RegExp(\"^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\", 'g');\n\nfunction createSinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why) {\n    return new SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why);\n}\n\nexport default createSinkParser;\n\nexport class SinkParser {\n    constructor(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why) {\n        if (typeof openFormula == 'undefined') openFormula=null;\n        if (typeof thisDoc == 'undefined') thisDoc=\"\";\n        if (typeof baseURI == 'undefined') baseURI=null;\n        if (typeof genPrefix == 'undefined') genPrefix=\"\";\n        if (typeof metaURI == 'undefined') metaURI=null;\n        if (typeof flags == 'undefined') flags=\"\";\n        if (typeof why == 'undefined') why=null;\n        /*\n        note: namespace names should *not* end in #;\n        the # will get added during qname processing */\n\n        this._bindings = new pyjslib_Dict([]);\n        this._flags = flags;\n        if ((thisDoc != \"\")) {\n            assertFudge((thisDoc.indexOf(\":\") >= 0),  ( \"Document URI not absolute: \" + thisDoc ) );\n            this._bindings[\"\"] = (  ( thisDoc + \"#\" ) );\n        }\n        this._store = store;\n        if (genPrefix) {\n            store.setGenPrefix(genPrefix);\n        }\n        this._thisDoc = thisDoc;\n        this.source = store.sym(thisDoc);\n        this.lines = 0;\n        this.statementCount = 0;\n        this.startOfLine = 0;\n        this.previousLine = 0;\n        this._genPrefix = genPrefix;\n        this.keywords = new pyjslib_List([\"a\", \"this\", \"bind\", \"has\", \"is\", \"of\", \"true\", \"false\"]);\n        this.keywordsSet = 0;\n        this._anonymousNodes = new pyjslib_Dict([]);\n        this._variables = new pyjslib_Dict([]);\n        this._parentVariables = new pyjslib_Dict([]);\n        this._reason = why;\n        this._reason2 = null;\n        if (diag_tracking) {\n            this._reason2 = why_BecauseOfData(store.sym(thisDoc), this._reason);\n        }\n        if (baseURI) {\n            this._baseURI = baseURI;\n        }\n        else {\n            if (thisDoc) {\n                this._baseURI = thisDoc;\n            }\n            else {\n                this._baseURI = null;\n            }\n        }\n        assertFudge(!(this._baseURI) || (this._baseURI.indexOf(\":\") >= 0));\n        if (!(this._genPrefix)) {\n            if (this._thisDoc) {\n                this._genPrefix =  ( this._thisDoc + \"#_g\" ) ;\n            }\n            else {\n                this._genPrefix = RDFSink_uniqueURI();\n            }\n        }\n        if ((openFormula == null)) {\n            if (this._thisDoc) {\n                this._formula = store.formula( ( thisDoc + \"#_formula\" ) );\n            }\n            else {\n                this._formula = store.formula();\n            }\n        }\n        else {\n            this._formula = openFormula;\n        }\n        this._context = this._formula;\n        this._parentContext = null;\n    }\n\n\n    here(i) {\n        return  (  (  (  ( this._genPrefix + \"_L\" )  + this.lines )  + \"C\" )  +  (  ( i - this.startOfLine )  + 1 )  ) ;\n    };\n    formula() {\n        return this._formula;\n    };\n    loadStream(stream) {\n        return this.loadBuf(stream.read());\n    };\n    loadBuf(buf) {\n        /*\n        Parses a buffer and returns its top level formula*/\n\n        this.startDoc();\n        this.feed(buf);\n        return this.endDoc();\n    };\n    feed(octets) {\n        /*\n        Feed an octet stream tothe parser\n\n        if BadSyntax is raised, the string\n        passed in the exception object is the\n        remainder after any statements have been parsed.\n        So if there is more data to feed to the\n        parser, it should be straightforward to recover.*/\n\n        var str = octets.decode(\"utf-8\");\n        var i = 0;\n        while ((i >= 0)) {\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                return;\n            }\n            var i = this.directiveOrStatement(str, j);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected directive or statement\");\n            }\n        }\n    };\n    directiveOrStatement(str, h) {\n        var i = this.skipSpace(str, h);\n        if ((i < 0)) {\n            return i;\n        }\n        var j = this.directive(str, i);\n        if ((j >= 0)) {\n            return this.checkDot(str, j);\n        }\n        var j = this.statement(str, i);\n        if ((j >= 0)) {\n            return this.checkDot(str, j);\n        }\n        return j;\n    };\n    tok(tok, str, i) {\n        /*\n        Check for keyword.  Space must have been stripped on entry and\n        we must not be at end of file.*/\n        var whitespace = \"\\t\\n\\v\\f\\r \";\n        if ((str.slice( i,  ( i + 1 ) ) == \"@\")) {\n            var i =  ( i + 1 ) ;\n        }\n        else {\n            if ((ArrayIndexOf(this.keywords,tok) < 0)) {\n                return -1;\n            }\n        }\n        var k =  ( i + pyjslib_len(tok) ) ;\n        if ((str.slice( i, k) == tok) && (_notQNameChars.indexOf(str.charAt(k)) >= 0)) {\n            return k;\n        }\n        else {\n            return -1;\n        }\n    };\n    directive(str, i) {\n        var j = this.skipSpace(str, i);\n        if ((j < 0)) {\n            return j;\n        }\n        var res = new pyjslib_List([]);\n        var j = this.tok(\"bind\", str, i);\n        if ((j > 0)) {\n            throw BadSyntax(this._thisDoc, this.lines, str, i, \"keyword bind is obsolete: use @prefix\");\n        }\n        var j = this.tok(\"keywords\", str, i);\n        if ((j > 0)) {\n            var i = this.commaSeparatedList(str, j, res, false);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"'@keywords' needs comma separated list of words\");\n            }\n            this.setKeywords(pyjslib_slice(res, null, null));\n            if ((diag_chatty_flag > 80)) {\n                diag_progress(\"Keywords \", this.keywords);\n            }\n            return i;\n        }\n        var j = this.tok(\"forAll\", str, i);\n        if ((j > 0)) {\n            var i = this.commaSeparatedList(str, j, res, true);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad variable list after @forAll\");\n            }\n\n            var __x = new pyjslib_Iterator(res);\n            try {\n                while (true) {\n                    var x = __x.next();\n\n\n                    if (ArrayIndexOf(this._variables,x) < 0 || (ArrayIndexOf(this._parentVariables,x) >= 0)) {\n                        this._variables[x] = ( this._context.newUniversal(x));\n                    }\n\n                }\n            } catch (e) {\n                if (e != StopIteration) {\n                    throw e;\n                }\n            }\n\n            return i;\n        }\n        var j = this.tok(\"forSome\", str, i);\n        if ((j > 0)) {\n            var i = this.commaSeparatedList(str, j, res, this.uri_ref2);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad variable list after @forSome\");\n            }\n\n            var __x = new pyjslib_Iterator(res);\n            try {\n                while (true) {\n                    var x = __x.next();\n\n\n                    this._context.declareExistential(x);\n\n                }\n            } catch (e) {\n                if (e != StopIteration) {\n                    throw e;\n                }\n            }\n\n            return i;\n        }\n        var j = this.tok(\"prefix\", str, i);\n        if ((j >= 0)) {\n            var t = new pyjslib_List([]);\n            var i = this.qname(str, j, t);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected qname after @prefix\");\n            }\n            var j = this.uri_ref2(str, i, t);\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected <uriref> after @prefix _qname_\");\n            }\n            var ns = t[1].uri;\n            if (this._baseURI) {\n                var ns = uripath_join(this._baseURI, ns);\n            }\n            else {\n                assertFudge((ns.indexOf(\":\") >= 0), \"With no base URI, cannot handle relative URI for NS\");\n            }\n            assertFudge((ns.indexOf(\":\") >= 0));\n            this._bindings[t[0][0]] = ( ns);\n\n            this.bind(t[0][0], hexify(ns));\n            return j;\n        }\n        var j = this.tok(\"base\", str, i);\n        if ((j >= 0)) {\n            var t = new pyjslib_List([]);\n            var i = this.uri_ref2(str, j, t);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected <uri> after @base \");\n            }\n            var ns = t[0].uri;\n            if (this._baseURI) {\n                var ns = uripath_join(this._baseURI, ns);\n            }\n            else {\n                throw BadSyntax(this._thisDoc, this.lines, str, j,  (  ( \"With no previous base URI, cannot use relative URI in @base  <\" + ns )  + \">\" ) );\n            }\n            assertFudge((ns.indexOf(\":\") >= 0));\n            this._baseURI = ns;\n            return i;\n        }\n        return -1;\n    };\n    bind(qn, uri) {\n        if ((qn == \"\")) {\n        }\n        else {\n            this._store.setPrefixForURI(qn, uri);\n        }\n    };\n    setKeywords(k) {\n        /*\n        Takes a list of strings*/\n\n        if ((k == null)) {\n            this.keywordsSet = 0;\n        }\n        else {\n            this.keywords = k;\n            this.keywordsSet = 1;\n        }\n    };\n    startDoc() {\n    };\n    endDoc() {\n        /*\n        Signal end of document and stop parsing. returns formula*/\n\n        return this._formula;\n    };\n    makeStatement(quad) {\n        quad[0].add(quad[2], quad[1], quad[3], this.source);\n        this.statementCount += 1;\n    };\n    statement(str, i) {\n        var r = new pyjslib_List([]);\n        var i = this.object(str, i, r);\n        if ((i < 0)) {\n            return i;\n        }\n        var j = this.property_list(str, i, r[0]);\n        if ((j < 0)) {\n            throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected propertylist\");\n        }\n        return j;\n    };\n    subject(str, i, res) {\n        return this.item(str, i, res);\n    };\n    verb(str, i, res) {\n        /*\n        has _prop_\n        is _prop_ of\n        a\n        =\n        _prop_\n        >- prop ->\n        <- prop -<\n        _operator_*/\n\n        var j = this.skipSpace(str, i);\n        if ((j < 0)) {\n            return j;\n        }\n        var r = new pyjslib_List([]);\n        var j = this.tok(\"has\", str, i);\n        if ((j >= 0)) {\n            var i = this.prop(str, j, r);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected property after 'has'\");\n            }\n            res.push(new pyjslib_Tuple([\"->\", r[0]]));\n            return i;\n        }\n        var j = this.tok(\"is\", str, i);\n        if ((j >= 0)) {\n            var i = this.prop(str, j, r);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected <property> after 'is'\");\n            }\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"End of file found, expected property after 'is'\");\n                return j;\n            }\n            var i = j;\n            var j = this.tok(\"of\", str, i);\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected 'of' after 'is' <prop>\");\n            }\n            res.push(new pyjslib_Tuple([\"<-\", r[0]]));\n            return j;\n        }\n        var j = this.tok(\"a\", str, i);\n        if ((j >= 0)) {\n            res.push(new pyjslib_Tuple([\"->\", this._store.sym(RDF_type_URI)]));\n            return j;\n        }\n        if ((str.slice( i,  ( i + 2 ) ) == \"<=\")) {\n            res.push(new pyjslib_Tuple([\"<-\", this._store.sym( ( Logic_NS + \"implies\" ) )]));\n            return  ( i + 2 ) ;\n        }\n        if ((str.slice( i,  ( i + 1 ) ) == \"=\")) {\n            if ((str.slice(  ( i + 1 ) ,  ( i + 2 ) ) == \">\")) {\n                res.push(new pyjslib_Tuple([\"->\", this._store.sym( ( Logic_NS + \"implies\" ) )]));\n                return  ( i + 2 ) ;\n            }\n            res.push(new pyjslib_Tuple([\"->\", this._store.sym(DAML_sameAs_URI)]));\n            return  ( i + 1 ) ;\n        }\n        if ((str.slice( i,  ( i + 2 ) ) == \":=\")) {\n            res.push(new pyjslib_Tuple([\"->\",  ( Logic_NS + \"becomes\" ) ]));\n            return  ( i + 2 ) ;\n        }\n        var j = this.prop(str, i, r);\n        if ((j >= 0)) {\n            res.push(new pyjslib_Tuple([\"->\", r[0]]));\n            return j;\n        }\n        if ((str.slice( i,  ( i + 2 ) ) == \">-\") || (str.slice( i,  ( i + 2 ) ) == \"<-\")) {\n            throw BadSyntax(this._thisDoc, this.lines, str, j, \">- ... -> syntax is obsolete.\");\n        }\n        return -1;\n    };\n    prop(str, i, res) {\n        return this.item(str, i, res);\n    };\n    item(str, i, res) {\n        return this.path(str, i, res);\n    };\n    blankNode(uri) {\n        return this._context.bnode(uri, this._reason2);\n    };\n    path(str, i, res) {\n        /*\n        Parse the path production.\n        */\n\n        var j = this.nodeOrLiteral(str, i, res);\n        if ((j < 0)) {\n            return j;\n        }\n        while ((\"!^.\".indexOf(str.slice( j,  ( j + 1 ) )) >= 0)) {\n            var ch = str.slice( j,  ( j + 1 ) );\n            if ((ch == \".\")) {\n                var ahead = str.slice(  ( j + 1 ) ,  ( j + 2 ) );\n                if (!(ahead) || (_notNameChars.indexOf(ahead) >= 0) && (\":?<[{(\".indexOf(ahead) < 0)) {\n                    break;\n                }\n            }\n            var subj = res.pop();\n            var obj = this.blankNode(this.here(j));\n            var j = this.node(str,  ( j + 1 ) , res);\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found in middle of path syntax\");\n            }\n            var pred = res.pop();\n            if ((ch == \"^\")) {\n                this.makeStatement(new pyjslib_Tuple([this._context, pred, obj, subj]));\n            }\n            else {\n                this.makeStatement(new pyjslib_Tuple([this._context, pred, subj, obj]));\n            }\n            res.push(obj);\n        }\n        return j;\n    };\n    anonymousNode(ln) {\n        /*\n        Remember or generate a term for one of these _: anonymous nodes*/\n\n        var term = this._anonymousNodes[ln];\n        if (term) {\n            return term;\n        }\n        var term = this._store.bnode(ln);\n        // var term = this._store.bnode(this._context, this._reason2); eh?\n        this._anonymousNodes[ln] = ( term);\n        return term;\n    };\n    node(str, i, res, subjectAlready) {\n        if (typeof subjectAlready == 'undefined') subjectAlready=null;\n        /*\n        Parse the <node> production.\n        Space is now skipped once at the beginning\n        instead of in multipe calls to self.skipSpace().\n        */\n\n        var subj = subjectAlready;\n        var j = this.skipSpace(str, i);\n        if ((j < 0)) {\n            return j;\n        }\n        var i = j;\n        var ch = str.slice( i,  ( i + 1 ) );\n        if ((ch == \"[\")) {\n            var bnodeID = this.here(i);\n            var j = this.skipSpace(str,  ( i + 1 ) );\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF after '['\");\n            }\n            if ((str.slice( j,  ( j + 1 ) ) == \"=\")) {\n                var i =  ( j + 1 ) ;\n                var objs = new pyjslib_List([]);\n                var j = this.objectList(str, i, objs);\n\n                if ((j >= 0)) {\n                    var subj = objs[0];\n                    if ((pyjslib_len(objs) > 1)) {\n\n                        var __obj = new pyjslib_Iterator(objs);\n                        try {\n                            while (true) {\n                                var obj = __obj.next();\n\n\n                                this.makeStatement(new pyjslib_Tuple([this._context, this._store.sym(DAML_sameAs_URI), subj, obj]));\n\n                            }\n                        } catch (e) {\n                            if (e != StopIteration) {\n                                throw e;\n                            }\n                        }\n\n                    }\n                    var j = this.skipSpace(str, j);\n                    if ((j < 0)) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF when objectList expected after [ = \");\n                    }\n                    if ((str.slice( j,  ( j + 1 ) ) == \";\")) {\n                        var j =  ( j + 1 ) ;\n                    }\n                }\n                else {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"objectList expected after [= \");\n                }\n            }\n            if ((subj == null)) {\n                var subj = this.blankNode(bnodeID);\n            }\n            var i = this.property_list(str, j, subj);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"property_list expected\");\n            }\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF when ']' expected after [ <propertyList>\");\n            }\n            if ((str.slice( j,  ( j + 1 ) ) != \"]\")) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"']' expected\");\n            }\n            res.push(subj);\n            return  ( j + 1 ) ;\n        }\n        if ((ch == \"{\")) {\n            var ch2 = str.slice(  ( i + 1 ) ,  ( i + 2 ) );\n            if ((ch2 == \"$\")) {\n                i += 1;\n                var j =  ( i + 1 ) ;\n                var mylist = new pyjslib_List([]);\n                var first_run = true;\n                while (1) {\n                    var i = this.skipSpace(str, j);\n                    if ((i < 0)) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed '$}', found end.\");\n                    }\n                    if ((str.slice( i,  ( i + 2 ) ) == \"$}\")) {\n                        var j =  ( i + 2 ) ;\n                        break;\n                    }\n                    if (!(first_run)) {\n                        if ((str.slice( i,  ( i + 1 ) ) == \",\")) {\n                            i += 1;\n                        }\n                        else {\n                            throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected: ','\");\n                        }\n                    }\n                    else {\n                        var first_run = false;\n                    }\n                    var item = new pyjslib_List([]);\n                    var j = this.item(str, i, item);\n                    if ((j < 0)) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected item in set or '$}'\");\n                    }\n                    mylist.push(item[0]);\n                }\n                res.push(this._store.newSet(mylist, this._context));\n                return j;\n            }\n            else {\n                var j =  ( i + 1 ) ;\n                var oldParentContext = this._parentContext;\n                this._parentContext = this._context;\n                var parentAnonymousNodes = this._anonymousNodes;\n                var grandParentVariables = this._parentVariables;\n                this._parentVariables = this._variables;\n                this._anonymousNodes = new pyjslib_Dict([]);\n                this._variables = this._variables.slice();\n                var reason2 = this._reason2;\n                this._reason2 = becauseSubexpression;\n                if ((subj == null)) {\n                    var subj = this._store.formula();\n                }\n                this._context = subj;\n                while (1) {\n                    var i = this.skipSpace(str, j);\n                    if ((i < 0)) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed '}', found end.\");\n                    }\n                    if ((str.slice( i,  ( i + 1 ) ) == \"}\")) {\n                        var j =  ( i + 1 ) ;\n                        break;\n                    }\n                    var j = this.directiveOrStatement(str, i);\n                    if ((j < 0)) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected statement or '}'\");\n                    }\n                }\n                this._anonymousNodes = parentAnonymousNodes;\n                this._variables = this._parentVariables;\n                this._parentVariables = grandParentVariables;\n                this._context = this._parentContext;\n                this._reason2 = reason2;\n                this._parentContext = oldParentContext;\n                res.push(subj.close());\n                return j;\n            }\n        }\n        if ((ch == \"(\")) {\n            var thing_type = this._store.list;\n            var ch2 = str.slice(  ( i + 1 ) ,  ( i + 2 ) );\n            if ((ch2 == \"$\")) {\n                var thing_type = this._store.newSet;\n                i += 1;\n            }\n            var j =  ( i + 1 ) ;\n            var mylist = new pyjslib_List([]);\n            while (1) {\n                var i = this.skipSpace(str, j);\n                if ((i < 0)) {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed ')', found end.\");\n                }\n                if ((str.slice( i,  ( i + 1 ) ) == \")\")) {\n                    var j =  ( i + 1 ) ;\n                    break;\n                }\n                var item = new pyjslib_List([]);\n                var j = this.item(str, i, item);\n                if ((j < 0)) {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected item in list or ')'\");\n                }\n                mylist.push(item[0]);\n            }\n            res.push(thing_type(mylist, this._context));\n            return j;\n        }\n        var j = this.tok(\"this\", str, i);\n        if ((j >= 0)) {\n            throw BadSyntax(this._thisDoc, this.lines, str, i, \"Keyword 'this' was ancient N3. Now use @forSome and @forAll keywords.\");\n            res.push(this._context);\n            return j;\n        }\n        var j = this.tok(\"true\", str, i);\n        if ((j >= 0)) {\n            res.push(true);\n            return j;\n        }\n        var j = this.tok(\"false\", str, i);\n        if ((j >= 0)) {\n            res.push(false);\n            return j;\n        }\n        if ((subj == null)) {\n            var j = this.uri_ref2(str, i, res);\n            if ((j >= 0)) {\n                return j;\n            }\n        }\n        return -1;\n    };\n    property_list(str, i, subj) {\n        /*\n        Parse property list\n        Leaves the terminating punctuation in the buffer\n        */\n\n        while (1) {\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF found when expected verb in property list\");\n                return j;\n            }\n            if ((str.slice( j,  ( j + 2 ) ) == \":-\")) {\n                var i =  ( j + 2 ) ;\n                var res = new pyjslib_List([]);\n                var j = this.node(str, i, res, subj);\n                if ((j < 0)) {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad {} or () or [] node after :- \");\n                }\n                var i = j;\n                continue;\n            }\n            var i = j;\n            var v = new pyjslib_List([]);\n            var j = this.verb(str, i, v);\n            if ((j <= 0)) {\n                return i;\n            }\n            var objs = new pyjslib_List([]);\n            var i = this.objectList(str, j, objs);\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"objectList expected\");\n            }\n\n            var __obj = new pyjslib_Iterator(objs);\n            try {\n                while (true) {\n                    var obj = __obj.next();\n\n\n                    var pairFudge = v[0];\n                    var dir = pairFudge[0];\n                    var sym = pairFudge[1];\n                    if ((dir == \"->\")) {\n                        this.makeStatement(new pyjslib_Tuple([this._context, sym, subj, obj]));\n                    }\n                    else {\n                        this.makeStatement(new pyjslib_Tuple([this._context, sym, obj, subj]));\n                    }\n\n                }\n            } catch (e) {\n                if (e != StopIteration) {\n                    throw e;\n                }\n            }\n\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found in list of objects\");\n                return j;\n            }\n            if ((str.slice( i,  ( i + 1 ) ) != \";\")) {\n                return i;\n            }\n            var i =  ( i + 1 ) ;\n        }\n    };\n    commaSeparatedList(str, j, res, ofUris) {\n        /*\n        return value: -1 bad syntax; >1 new position in str\n        res has things found appended\n\n        Used to use a final value of the function to be called, e.g. this.bareWord\n        but passing the function didn't work fo js converion pyjs\n        */\n\n        var i = this.skipSpace(str, j);\n        if ((i < 0)) {\n            throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF found expecting comma sep list\");\n            return i;\n        }\n        if ((str.charAt(i) == \".\")) {\n            return j;\n        }\n        if (ofUris) {\n            var i = this.uri_ref2(str, i, res);\n        }\n        else {\n            var i = this.bareWord(str, i, res);\n        }\n        if ((i < 0)) {\n            return -1;\n        }\n        while (1) {\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                return j;\n            }\n            var ch = str.slice( j,  ( j + 1 ) );\n            if ((ch != \",\")) {\n                if ((ch != \".\")) {\n                    return -1;\n                }\n                return j;\n            }\n            if (ofUris) {\n                var i = this.uri_ref2(str,  ( j + 1 ) , res);\n            }\n            else {\n                var i = this.bareWord(str,  ( j + 1 ) , res);\n            }\n            if ((i < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad list content\");\n                return i;\n            }\n        }\n    };\n    objectList(str, i, res) {\n        var i = this.object(str, i, res);\n        if ((i < 0)) {\n            return -1;\n        }\n        while (1) {\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found after object\");\n                return j;\n            }\n            if ((str.slice( j,  ( j + 1 ) ) != \",\")) {\n                return j;\n            }\n            var i = this.object(str,  ( j + 1 ) , res);\n            if ((i < 0)) {\n                return i;\n            }\n        }\n    };\n    checkDot(str, i) {\n        var j = this.skipSpace(str, i);\n        if ((j < 0)) {\n            return j;\n        }\n        if ((str.slice( j,  ( j + 1 ) ) == \".\")) {\n            return  ( j + 1 ) ;\n        }\n        if ((str.slice( j,  ( j + 1 ) ) == \"}\")) {\n            return j;\n        }\n        if ((str.slice( j,  ( j + 1 ) ) == \"]\")) {\n            return j;\n        }\n        throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected '.' or '}' or ']' at end of statement\");\n        return i;\n    };\n    uri_ref2(str, i, res) {\n        /*\n        Generate uri from n3 representation.\n\n        Note that the RDF convention of directly concatenating\n        NS and local name is now used though I prefer inserting a '#'\n        to make the namesapces look more like what XML folks expect.\n        */\n\n        var qn = new pyjslib_List([]);\n        var j = this.qname(str, i, qn);\n        if ((j >= 0)) {\n            var pairFudge = qn[0];\n            var pfx = pairFudge[0];\n            var ln = pairFudge[1];\n            if ((pfx == null)) {\n                assertFudge(0, \"not used?\");\n                var ns =  ( this._baseURI + ADDED_HASH ) ;\n            }\n            else {\n                var ns = this._bindings[pfx];\n                if (!(ns)) {\n                    if ((pfx == \"_\")) {\n                        res.push(this.anonymousNode(ln));\n                        return j;\n                    }\n                    throw BadSyntax(this._thisDoc, this.lines, str, i,  (  ( \"Prefix \" + pfx )  + \" not bound.\" ) );\n                }\n            }\n            var symb = this._store.sym( ( ns + ln ) );\n            if ((ArrayIndexOf(this._variables, symb) >= 0)) {\n                res.push(this._variables[symb]);\n            }\n            else {\n                res.push(symb);\n            }\n            return j;\n        }\n        var i = this.skipSpace(str, i);\n        if ((i < 0)) {\n            return -1;\n        }\n        if ((str.charAt(i) == \"?\")) {\n            var v = new pyjslib_List([]);\n            var j = this.variable(str, i, v);\n            if ((j > 0)) {\n                res.push(v[0]);\n                return j;\n            }\n            return -1;\n        }\n        else if ((str.charAt(i) == \"<\")) {\n            var i =  ( i + 1 ) ;\n            var st = i;\n            while ((i < pyjslib_len(str))) {\n                if ((str.charAt(i) == \">\")) {\n                    var uref = str.slice( st, i);\n                    if (this._baseURI) {\n                        var uref = uripath_join(this._baseURI, uref);\n                    }\n                    else {\n                        assertFudge((uref.indexOf(\":\") >= 0), \"With no base URI, cannot deal with relative URIs\");\n                    }\n                    if ((str.slice(  ( i - 1 ) , i) == \"#\") && !((pyjslib_slice(uref, -1, null) == \"#\"))) {\n                        var uref =  ( uref + \"#\" ) ;\n                    }\n                    var symb = this._store.sym(uref);\n                    if ((ArrayIndexOf(this._variables,symb) >= 0)) {\n                        res.push(this._variables[symb]);\n                    }\n                    else {\n                        res.push(symb);\n                    }\n                    return  ( i + 1 ) ;\n                }\n                var i =  ( i + 1 ) ;\n            }\n            throw BadSyntax(this._thisDoc, this.lines, str, j, \"unterminated URI reference\");\n        }\n        else if (this.keywordsSet) {\n            var v = new pyjslib_List([]);\n            var j = this.bareWord(str, i, v);\n            if ((j < 0)) {\n                return -1;\n            }\n            if ((ArrayIndexOf(this.keywords, v[0]) >= 0)) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i,  (  ( \"Keyword \\\"\" + v[0] )  + \"\\\" not allowed here.\" ) );\n            }\n            res.push(this._store.sym( ( this._bindings[\"\"] + v[0] ) ));\n            return j;\n        }\n        else {\n            return -1;\n        }\n    };\n    skipSpace(str, i) {\n        /*\n        Skip white space, newlines and comments.\n        return -1 if EOF, else position of first non-ws character*/\n\n        var whitespace = ' \\n\\r\\t\\f\\x0b\\xa0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000';\n        for (var j = (i ? i : 0); j < str.length; j++) {\n            var ch = str.charAt(j);\n            // console.log(\"    skipspace j= \"+j + \" i= \" + i + \" n= \" + str.length);\n            // console.log(\" skipspace ch <\" + ch + \">\");\n            if (whitespace.indexOf(ch) < 0 ) { //not ws\n                // console.log(\" skipspace 2 ch <\" + ch + \">\");\n                if( str.charAt(j)==='#' ) {\n                    for (;; j++) {\n                        // console.log(\"    skipspace2 j= \"+j + \" i= \" + i + \" n= \" + str.length);\n                        if (j === str.length) {\n                            return -1; // EOF\n                        }\n                        if (str.charAt(j) === '\\n') {\n                            this.lines = this.lines + 1;\n                            break;\n                        }\n                    };\n                } else { // Not hash - something interesting\n                    // console.log(\" skipspace 3 ch <\" + ch + \">\");\n                    return j\n                }\n            } else { // Whitespace\n                // console.log(\" skipspace 5 ch <\" + ch + \">\");\n                if (str.charAt(j) === '\\n') {\n                    this.lines = this.lines + 1;\n                }\n            }\n        } // next j\n        return -1; // EOF\n    };\n\n    variable(str, i, res) {\n        /*\n        ?abc -> variable(:abc)\n        */\n\n        var j = this.skipSpace(str, i);\n        if ((j < 0)) {\n            return -1;\n        }\n        if ((str.slice( j,  ( j + 1 ) ) != \"?\")) {\n            return -1;\n        }\n        var j =  ( j + 1 ) ;\n        var i = j;\n        if ((\"0123456789-\".indexOf(str.charAt(j)) >= 0)) {\n            throw BadSyntax(this._thisDoc, this.lines, str, j,  (  ( \"Varible name can't start with '\" + str.charAt(j) )  + \"s'\" ) );\n            return -1;\n        }\n        while ((i < pyjslib_len(str)) && (_notNameChars.indexOf(str.charAt(i)) < 0)) {\n            var i =  ( i + 1 ) ;\n        }\n        if ((this._parentContext == null)) {\n            throw BadSyntax(this._thisDoc, this.lines, str, j,  ( \"Can't use ?xxx syntax for variable in outermost level: \" + str.slice(  ( j - 1 ) , i) ) );\n        }\n        res.push(this._store.variable(str.slice( j, i)));\n        return i;\n    };\n    bareWord(str, i, res) {\n        /*\n        abc -> :abc\n        */\n\n        var j = this.skipSpace(str, i);\n        if ((j < 0)) {\n            return -1;\n        }\n        var ch = str.charAt(j);\n        if ((\"0123456789-\".indexOf(ch) >= 0)) {\n            return -1;\n        }\n        if ((_notNameChars.indexOf(ch) >= 0)) {\n            return -1;\n        }\n        var i = j;\n        while ((i < pyjslib_len(str)) && (_notNameChars.indexOf(str.charAt(i)) < 0)) {\n            var i =  ( i + 1 ) ;\n        }\n        res.push(str.slice( j, i));\n        return i;\n    };\n    qname(str, i, res) {\n        /*\n\n        xyz:def -> ('xyz', 'def')\n        If not in keywords and keywordsSet: def -> ('', 'def')\n        :def -> ('', 'def')\n        */\n\n        var i = this.skipSpace(str, i);\n        if ((i < 0)) {\n            return -1;\n        }\n        var c = str.charAt(i);\n        if ((\"0123456789-+\".indexOf(c) >= 0)) {\n            return -1;\n        }\n        if ((_notNameChars.indexOf(c) < 0)) {\n            var ln = c;\n            var i =  ( i + 1 ) ;\n            while ((i < pyjslib_len(str))) {\n                var c = str.charAt(i);\n                if ((_notNameChars.indexOf(c) < 0)) {\n                    var ln =  ( ln + c ) ;\n                    var i =  ( i + 1 ) ;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        else {\n            var ln = \"\";\n        }\n        if ((i < pyjslib_len(str)) && (str.charAt(i) == \":\")) {\n            var pfx = ln;\n            var i =  ( i + 1 ) ;\n            var ln = \"\";\n            while ((i < pyjslib_len(str))) {\n                var c = str.charAt(i);\n                if ((_notNameChars.indexOf(c) < 0)) {\n                    var ln =  ( ln + c ) ;\n                    var i =  ( i + 1 ) ;\n                }\n                else {\n                    break;\n                }\n            }\n            res.push(new pyjslib_Tuple([pfx, ln]));\n            return i;\n        }\n        else {\n            if (ln && this.keywordsSet && (ArrayIndexOf(this.keywords, ln) < 0)) {\n                res.push(new pyjslib_Tuple([\"\", ln]));\n                return i;\n            }\n            return -1;\n        }\n    };\n    object(str, i, res) {\n        var j = this.subject(str, i, res);\n        if ((j >= 0)) {\n            return j;\n        }\n        else {\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                return -1;\n            }\n            else {\n                var i = j;\n            }\n            var delim = null\n            let ch = str.charAt(i)\n            if ((ch == \"\\\"\" || ch == \"'\")) {\n                if (str.slice(i,  ( i + 3 ) == ch + ch)) {\n                    delim = ch + ch + ch;\n                }\n                else {\n                    delim = ch;\n                }\n                var i =  ( i + pyjslib_len(delim) ) ;\n                var pairFudge = this.strconst(str, i, delim);\n                var j = pairFudge[0];\n                var s = pairFudge[1];\n                res.push(this._store.literal(s));\n                diag_progress(\"New string const \", s, j);\n                return j;\n            }\n            else {\n                return -1;\n            }\n        }\n    };\n    nodeOrLiteral(str, i, res) {\n        var j = this.node(str, i, res);\n        if ((j >= 0)) {\n            return j;\n        }\n        else {\n            var j = this.skipSpace(str, i);\n            if ((j < 0)) {\n                return -1;\n            }\n            else {\n                var i = j;\n            }\n            var ch = str.charAt(i);\n            if ((\"-+0987654321\".indexOf(ch) >= 0)) {\n\n                datetime_syntax.lastIndex = 0;\n                var m = datetime_syntax.exec(str.slice(i));\n                if ((m != null)) {\n                    // j =  ( i + datetime_syntax.lastIndex ) ;\n                    var val = m[0];\n                    j = i + val.length;\n                    if ((val.indexOf(\"T\") >= 0)) {\n                        res.push(this._store.literal(val, this._store.sym(DATETIME_DATATYPE)));\n                    } else {\n                        res.push(this._store.literal(val, this._store.sym(DATE_DATATYPE)));\n                    }\n\n                } else {\n                    number_syntax.lastIndex = 0;\n                    var m = number_syntax.exec(str.slice(i));\n                    if ((m == null)) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad number or date syntax\");\n                    }\n                    j =  ( i + number_syntax.lastIndex ) ;\n                    var val = str.slice( i, j);\n                    if ((val.indexOf(\"e\") >= 0)) {\n                        res.push(this._store.literal(parseFloat(val), this._store.sym(FLOAT_DATATYPE)));\n                    }\n                    else if ((str.slice( i, j).indexOf(\".\") >= 0)) {\n                        res.push(this._store.literal(parseFloat(val), this._store.sym(DECIMAL_DATATYPE)));\n                    }\n                    else {\n                        res.push(this._store.literal(parseInt(val), this._store.sym(INTEGER_DATATYPE)));\n                    }\n                };\n                return j; // Where we have got up to\n            }\n            if ((str.charAt(i) == \"\\\"\")) {\n                if ((str.slice( i,  ( i + 3 ) ) == \"\\\"\\\"\\\"\")) {\n                    var delim = \"\\\"\\\"\\\"\";\n                }\n                else {\n                    var delim = \"\\\"\";\n                }\n                var i =  ( i + pyjslib_len(delim) ) ;\n                var dt = null;\n                var pairFudge = this.strconst(str, i, delim);\n                var j = pairFudge[0];\n                var s = pairFudge[1];\n                var lang = null;\n                if ((str.slice( j,  ( j + 1 ) ) == \"@\")) {\n                    langcode.lastIndex = 0;\n\n                    var m = langcode.exec(str.slice( ( j + 1 ) ));\n                    if ((m == null)) {\n                        throw BadSyntax(this._thisDoc, startline, str, i, \"Bad language code syntax on string literal, after @\");\n                    }\n                    var i =  (  ( langcode.lastIndex + j )  + 1 ) ;\n\n                    var lang = str.slice(  ( j + 1 ) , i);\n                    var j = i;\n                }\n                if ((str.slice( j,  ( j + 2 ) ) == \"^^\")) {\n                    var res2 = new pyjslib_List([]);\n                    var j = this.uri_ref2(str,  ( j + 2 ) , res2);\n                    var dt = res2[0];\n                }\n                res.push(this._store.literal(s, lang || dt));\n                return j;\n            }\n            else {\n                return -1;\n            }\n        }\n    };\n    strconst(str, i, delim) {\n        /*\n        parse an N3 string constant delimited by delim.\n        return index, val\n        */\n\n        var j = i;\n        var ustr = \"\";\n        var startline = this.lines;\n        while ((j < pyjslib_len(str))) {\n            var i =  ( j + pyjslib_len(delim) ) ;\n            if ((str.slice( j, i) == delim)) {\n                return new pyjslib_Tuple([i, ustr]);\n            }\n            if ((str.charAt(j) == \"\\\"\")) {\n                var ustr =  ( ustr + \"\\\"\" ) ;\n                var j =  ( j + 1 ) ;\n                continue;\n            }\n            interesting.lastIndex = 0;\n            var m = interesting.exec(str.slice(j));\n            if (!(m)) {\n                throw BadSyntax(this._thisDoc, startline, str, j,  (  (  ( \"Closing quote missing in string at ^ in \" + str.slice(  ( j - 20 ) , j) )  + \"^\" )  + str.slice( j,  ( j + 20 ) ) ) );\n            }\n            var i =  (  ( j + interesting.lastIndex )  - 1 ) ;\n            var ustr =  ( ustr + str.slice( j, i) ) ;\n            var ch = str.charAt(i);\n            if ((ch == \"\\\"\")) {\n                var j = i;\n                continue;\n            }\n            else if ((ch == \"\\r\")) {\n                var j =  ( i + 1 ) ;\n                continue;\n            }\n            else if ((ch == \"\\n\")) {\n                if ((delim == \"\\\"\")) {\n                    throw BadSyntax(this._thisDoc, startline, str, i, \"newline found in string literal\");\n                }\n                this.lines =  ( this.lines + 1 ) ;\n                var ustr =  ( ustr + ch ) ;\n                var j =  ( i + 1 ) ;\n                this.previousLine = this.startOfLine;\n                this.startOfLine = j;\n            }\n            else if ((ch == \"\\\\\")) {\n                var j =  ( i + 1 ) ;\n                var ch = str.slice( j,  ( j + 1 ) );\n                if (!(ch)) {\n                    throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal (2)\");\n                }\n                var k = string_find(\"abfrtvn\\\\\\\"\", ch);\n                if ((k >= 0)) {\n                    var uch = \"\\a\\b\\f\\r\\t\\v\\n\\\\\\\"\".charAt(k);\n                    var ustr =  ( ustr + uch ) ;\n                    var j =  ( j + 1 ) ;\n                }\n                else if ((ch == \"u\")) {\n                    var pairFudge = this.uEscape(str,  ( j + 1 ) , startline);\n                    var j = pairFudge[0];\n                    var ch = pairFudge[1];\n                    var ustr =  ( ustr + ch ) ;\n                }\n                else if ((ch == \"U\")) {\n                    var pairFudge = this.UEscape(str,  ( j + 1 ) , startline);\n                    var j = pairFudge[0];\n                    var ch = pairFudge[1];\n                    var ustr =  ( ustr + ch ) ;\n                }\n                else {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad escape\");\n                }\n            }\n        }\n        throw BadSyntax(this._thisDoc, this.lines, str, i, \"unterminated string literal\");\n    };\n    uEscape(str, i, startline) {\n        var j = i;\n        var count = 0;\n        var value = 0;\n        while ((count < 4)) {\n            var chFudge = str.slice( j,  ( j + 1 ) );\n            var ch = chFudge.toLowerCase();\n            var j =  ( j + 1 ) ;\n            if ((ch == \"\")) {\n                throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal(3)\");\n            }\n            var k = string_find(\"0123456789abcdef\", ch);\n            if ((k < 0)) {\n                throw BadSyntax(this._thisDoc, startline, str, i, \"bad string literal hex escape\");\n            }\n            var value =  (  ( value * 16 )  + k ) ;\n            var count =  ( count + 1 ) ;\n        }\n        var uch = String.fromCharCode(value);\n        return new pyjslib_Tuple([j, uch]);\n    };\n    UEscape(str, i, startline) {\n        var j = i;\n        var count = 0;\n        var value = \"\\\\U\";\n        while ((count < 8)) {\n            var chFudge = str.slice( j,  ( j + 1 ) );\n            var ch = chFudge.toLowerCase();\n            var j =  ( j + 1 ) ;\n            if ((ch == \"\")) {\n                throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal(3)\");\n            }\n            var k = string_find(\"0123456789abcdef\", ch);\n            if ((k < 0)) {\n                throw BadSyntax(this._thisDoc, startline, str, i, \"bad string literal hex escape\");\n            }\n            var value =  ( value + ch ) ;\n            var count =  ( count + 1 ) ;\n        }\n        var uch = stringFromCharCode( (  ( \"0x\" + pyjslib_slice(value, 2, 10) )  - 0 ) );\n        return new pyjslib_Tuple([j, uch]);\n    };\n}\n\nfunction OLD_BadSyntax(uri, lines, str, i, why) {\n    return new __OLD_BadSyntax(uri, lines, str, i, why);\n}\nfunction __OLD_BadSyntax(uri, lines, str, i, why) {\n    this._str = str.encode(\"utf-8\");\n    this._str = str;\n    this._i = i;\n    this._why = why;\n    this.lines = lines;\n    this._uri = uri;\n}\n__OLD_BadSyntax.prototype.toString = function() {\n    var str = this._str;\n    var i = this._i;\n    var st = 0;\n    if ((i > 60)) {\n        var pre = \"...\";\n        var st =  ( i - 60 ) ;\n    }\n    else {\n        var pre = \"\";\n    }\n    if (( ( pyjslib_len(str) - i )  > 60)) {\n        var post = \"...\";\n    }\n    else {\n        var post = \"\";\n    }\n    return \"Line %i of <%s>: Bad syntax (%s) at ^ in:\\n\\\"%s%s^%s%s\\\"\" % new pyjslib_Tuple([ ( this.lines + 1 ) , this._uri, this._why, pre, str.slice( st, i), str.slice( i,  ( i + 60 ) ), post]);\n}\n\nfunction BadSyntax(uri, lines, str, i, why) {\n    let lineNo = lines + 1\n    let msg =  (  (  (  (  (  (  (  ( \"Line \" +  ( lineNo )  )  + \" of <\" )  + uri )  + \">: Bad syntax: \" )  + why )  + \"\\nat: \\\"\" )  + str.slice( i,  ( i + 30 ) ) )  + \"\\\"\" ) ;\n    let e = new SyntaxError(msg, uri , lineNo)\n    e.lineNo = lineNo\n    e.characterInFile = i\n    e.syntaxProblem = why\n    return e\n}\n\nfunction stripCR(str) {\n    var res = \"\";\n\n    var __ch = new pyjslib_Iterator(str);\n    try {\n        while (true) {\n            var ch = __ch.next();\n\n\n            if ((ch != \"\\r\")) {\n                var res =  ( res + ch ) ;\n            }\n\n        }\n    } catch (e) {\n        if (e != StopIteration) {\n            throw e;\n        }\n    }\n\n    return res;\n}\n\n\nfunction dummyWrite(x) {\n}\n\n","/* global $SolidTestEnvironment */\n/**\n *\n * Project: rdflib.js\n *\n * @file: fetcher.js\n *\n * Description: contains functions for requesting/fetching/retracting\n *  This implements quite a lot of the web architecture.\n * A fetcher is bound to a specific quad store, into which\n * it loads stuff and into which it writes its metadata\n * @@ The metadata could be optionally a separate graph\n *\n * - implements semantics of HTTP headers, Internet Content Types\n * - selects parsers for rdf/xml, n3, rdfa, grddl\n *\n * TO do:\n * - Implement a runtime registry for parsers and serializers\n * -\n */\n\n/**\n * Things to test: callbacks on request, refresh, retract\n *   loading from HTTP, HTTPS, FTP, FILE, others?\n * To do:\n * Firing up a mail client for mid:  (message:) URLs\n */\nimport IndexedFormula from './store'\nimport log from './log'\nimport N3Parser from './n3parser'\nimport RDFlibNamedNode from './named-node'\nimport Namespace from './namespace'\nimport rdfParse from './parse'\nimport { parseRDFaDOM } from './rdfaparser'\nimport RDFParser from './rdfxmlparser'\nimport * as Uri from './uri'\nimport { isCollection, isNamedNode} from './utils/terms'\nimport * as Util from './utils-js'\nimport serialize from './serialize'\nimport crossFetch, { Headers } from 'cross-fetch'\n\nimport {\n  ContentType, TurtleContentType, RDFXMLContentType, XHTMLContentType\n} from './types'\nimport { termValue } from './utils/termValue'\nimport {\n  BlankNode,\n  RdfJsDataFactory,\n  Quad_Graph,\n  NamedNode,\n  Quad_Predicate,\n  Quad_Subject\n} from './tf-types'\nimport jsonldParser from './jsonldparser'\n\nconst Parsable = {\n  'text/n3': true,\n  'text/turtle': true,\n  'application/rdf+xml': true,\n  'application/xhtml+xml': true,\n  'text/html': true,\n  'application/ld+json': true\n}\n\n// This is a minimal set to allow the use of damaged servers if necessary\nconst CONTENT_TYPE_BY_EXT = {\n  'rdf': RDFXMLContentType,\n  'owl': RDFXMLContentType,\n  'n3': 'text/n3',\n  'ttl': 'text/turtle',\n  'nt': 'text/n3',\n  'acl': 'text/n3',\n  'html': 'text/html',\n  'xml': 'text/xml'\n}\n\n// Convenience namespaces needed in this module.\n// These are deliberately not exported as the user application should\n// make its own list and not rely on the prefixes used here,\n// and not be tempted to add to them, and them clash with those of another\n// application.\nconst getNS = (factory?: RdfJsDataFactory) => {\n  return {\n    link: Namespace('http://www.w3.org/2007/ont/link#', factory),\n    http: Namespace('http://www.w3.org/2007/ont/http#', factory),\n    httph: Namespace('http://www.w3.org/2007/ont/httph#', factory),  // headers\n    rdf: Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#', factory),\n    rdfs: Namespace('http://www.w3.org/2000/01/rdf-schema#', factory),\n    dc: Namespace('http://purl.org/dc/elements/1.1/', factory),\n    ldp: Namespace('http://www.w3.org/ns/ldp#', factory)\n  }\n}\nconst ns = getNS()\n\nexport interface FetchError extends Error {\n  statusText?: string\n  status?: StatusValues\n  response?: ExtendedResponse\n}\n\n/** An extended interface of Response, since RDFlib.js adds some properties. */\nexport interface ExtendedResponse extends Response {\n  /** String representation of the Body */\n  responseText?: string\n  /** Identifier of the reqest */\n  req?: Quad_Subject\n  size?: number\n  timeout?: number\n  /** Used in UpdateManager.updateDav */\n  error?: string\n}\n\n/** tell typescript that a 'panes' child may exist on Window */\ndeclare global {\n  interface Window {\n    panes?: any\n    solidFetcher?: any\n    solidFetch?: any\n  }\n  var solidFetcher: Function\n  var solidFetch: Function\n}\ndeclare var $SolidTestEnvironment: {\n  localSiteMap?: any\n}\n\ntype UserCallback = (\n  ok: boolean,\n  message: string,\n  response?: any\n) => void\n\ntype HTTPMethods = 'GET' | 'PUT' | 'POST' | 'PATCH' | 'HEAD' | 'DELETE' | 'CONNECT' | 'TRACE' | 'OPTIONS'\n\n/** All valid inputs for initFetchOptions */\ntype Options = Partial<AutoInitOptions>\n\n/** Initiated by initFetchOptions, which runs on load */\nexport interface AutoInitOptions extends RequestInit{\n  /** The used Fetch function */\n  fetch?: Fetch\n  /**\n   * Referring term, the resource which\n   * referred to this (for tracking bad links).\n   * The document in which this link was found.\n   */\n  referringTerm?: NamedNode\n  /** Provided content type (for writes) */\n  contentType?: string\n  /**\n   * Override the incoming header to\n   * force the data to be treated as this content-type (for reads)\n   */\n  forceContentType?: ContentType\n  /**\n   * Load the data even if loaded before.\n   * Also sets the `Cache-Control:` header to `no-cache`\n   */\n  force?: boolean\n  /**\n   * Original uri to preserve\n   * through proxying etc (`xhr.original`).\n   */\n  baseURI: string\n  /**\n   * Whether this request is a retry via\n   * a proxy (generally done from an error handler)\n   */\n  proxyUsed?: boolean\n  actualProxyURI?: string\n  /** flag for XHR/CORS etc */\n  withCredentials?: boolean\n  /** Before we parse new data, clear old, but only on status 200 responses */\n  clearPreviousData?: boolean\n  /** Prevents the addition of various metadata triples (about the fetch request) to the store*/\n  noMeta?: boolean\n  noRDFa?: boolean\n  handlers?: Handler[]\n  timeout?: number\n  method?: HTTPMethods\n  retriedWithNoCredentials?: boolean\n  requestedURI?: string\n  // Seems to be required in some functions, such as XHTML parse and RedirectToProxy\n  resource: Quad_Subject\n  /** The serialized resource in the body*/\n  // Used for storing metadata of requests\n  original: NamedNode\n  // Like requeststatus? Can contain text with error.\n  data?: string\n  // Probably an identifier for request?s\n  req: BlankNode\n  // Might be the same as Options.data\n  body?: string\n  headers: HeadersInit\n  credentials?: 'include' | 'omit'\n}\n\nclass Handler {\n  // TODO: Document, type\n  response: ExtendedResponse\n  // TODO: Document, type\n  dom: Document\n  static pattern: RegExp\n\n  constructor (response: ExtendedResponse, dom?: Document) {\n    this.response = response\n    // The type assertion operator here might need to be removed.\n    this.dom = dom!\n  }\n}\n\nclass RDFXMLHandler extends Handler {\n  static toString () {\n    return 'RDFXMLHandler'\n  }\n\n  static register (fetcher: Fetcher) {\n    fetcher.mediatypes[RDFXMLContentType] = {\n      'q': 0.9\n    }\n  }\n\n  parse (\n    fetcher: Fetcher,\n    /** An XML String */\n    responseText: String,\n    /** Requires .original */\n    options: {\n      original: Quad_Subject\n      req: Quad_Subject\n    } & Options,\n  ) {\n    let kb = fetcher.store\n    if (!this.dom) {\n      this.dom = Util.parseXML(responseText)\n    }\n    let root = this.dom.documentElement\n    if (root.nodeName === 'parsererror') { // Mozilla only See issue/issue110\n      // have to fail the request\n      return fetcher.failFetch(options, 'Badly formed XML in ' +\n        options.resource!.value, 'parse_error')\n    }\n    let parser = new RDFParser(kb)\n    try {\n      parser.parse(this.dom, options.original.value, options.original)\n    } catch (err) {\n      return fetcher.failFetch(options, 'Syntax error parsing RDF/XML! ' + err,\n        'parse_error')\n    }\n    if (!options.noMeta) {\n      kb.add(options.original, ns.rdf('type'), ns.link('RDFDocument'), fetcher.appNode)\n    }\n\n    return fetcher.doneFetch(options, this.response)\n  }\n}\nRDFXMLHandler.pattern = new RegExp('application/rdf\\\\+xml')\n\nclass XHTMLHandler extends Handler {\n  static toString () {\n    return 'XHTMLHandler'\n  }\n\n  static register (fetcher: Fetcher) {\n    fetcher.mediatypes[XHTMLContentType] = {}\n  }\n\n  parse (\n    fetcher: Fetcher,\n    responseText: string,\n    options: {\n      resource: Quad_Subject\n      original: Quad_Subject\n    } & Options,\n  ): Promise<FetchError> | ExtendedResponse {\n    let relation, reverse: boolean\n    if (!this.dom) {\n      this.dom = Util.parseXML(responseText)\n    }\n    let kb = fetcher.store\n\n    // dc:title\n    let title = this.dom.getElementsByTagName('title')\n    if (title.length > 0) {\n      kb.add(options.resource, ns.dc('title'), kb.rdfFactory.literal(title[0].textContent as string),\n        options.resource)\n      // log.info(\"Inferring title of \" + xhr.resource)\n    }\n\n    // link rel\n    let links = this.dom.getElementsByTagName('link')\n    for (let x = links.length - 1; x >= 0; x--) { // @@ rev\n      relation = links[x].getAttribute('rel')\n      reverse = false\n      if (!relation) {\n        relation = links[x].getAttribute('rev')\n        reverse = true\n      }\n      if (relation) {\n        fetcher.linkData(options.original, relation,\n          links[x].getAttribute('href') as string, options.resource, reverse)\n      }\n    }\n\n    // Data Islands\n    let scripts = this.dom.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      let contentType = scripts[i].getAttribute('type')\n      if (Parsable[contentType!]) {\n        // @ts-ignore incompatibility between Store.add and Formula.add\n        rdfParse(scripts[i].textContent as string, kb, options.original.value, contentType)\n        // @ts-ignore incompatibility between Store.add and Formula.add\n        rdfParse(scripts[i].textContent as string, kb, options.original.value, contentType)\n      }\n    }\n\n    if (!options.noMeta) {\n      kb.add(options.resource, ns.rdf('type'), ns.link('WebPage'), fetcher.appNode)\n    }\n\n    if (!options.noRDFa && parseRDFaDOM) { // enable by default\n      try {\n        parseRDFaDOM(this.dom, kb, options.original.value)\n      } catch (err) {\n        // @ts-ignore\n        let msg = 'Error trying to parse ' + options.resource + ' as RDFa:\\n' + err + ':\\n' + err.stack\n        return fetcher.failFetch(options as AutoInitOptions, msg, 'parse_error')\n      }\n    }\n\n    return fetcher.doneFetch(options as AutoInitOptions, this.response)\n  }\n}\nXHTMLHandler.pattern = new RegExp('application/xhtml')\n\nclass XMLHandler extends Handler {\n  static toString () {\n    return 'XMLHandler'\n  }\n\n  static register (fetcher: Fetcher) {\n    fetcher.mediatypes['text/xml'] = { 'q': 0.5 }\n    fetcher.mediatypes['application/xml'] = { 'q': 0.5 }\n  }\n\n  static isElement(node: Node): node is Element {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n\n  parse (\n    fetcher: Fetcher,\n    responseText: string,\n    options: {\n      original: Quad_Subject\n      req: BlankNode\n      resource: Quad_Subject\n    } & Options,\n  ): ExtendedResponse | Promise<FetchError> {\n    let dom = Util.parseXML(responseText)\n\n    // XML Semantics defined by root element namespace\n    // figure out the root element\n    for (let c = 0; c < dom.childNodes.length; c++) {\n      const node = dom.childNodes[c]\n      // is this node an element?\n      if (XMLHandler.isElement(node)) {\n\n        // We've found the first element, it's the root\n        let ns = node.namespaceURI\n\n        // Is it RDF/XML?\n        if (ns && ns === ns['rdf']) {\n          fetcher.addStatus(options.req,\n            'Has XML root element in the RDF namespace, so assume RDF/XML.')\n\n          let rdfHandler = new RDFXMLHandler(this.response, dom)\n          return rdfHandler.parse(fetcher, responseText, options)\n        }\n\n        break\n      }\n    }\n\n    // Or it could be XHTML?\n    // Maybe it has an XHTML DOCTYPE?\n    if (dom.doctype) {\n      // log.info(\"We found a DOCTYPE in \" + xhr.resource)\n      if (dom.doctype.name === 'html' &&\n          dom.doctype.publicId.match(/^-\\/\\/W3C\\/\\/DTD XHTML/) &&\n          dom.doctype.systemId.match(/http:\\/\\/www.w3.org\\/TR\\/xhtml/)) {\n        fetcher.addStatus(options.req,\n          'Has XHTML DOCTYPE. Switching to XHTML Handler.\\n')\n\n        let xhtmlHandler = new XHTMLHandler(this.response, dom)\n        return xhtmlHandler.parse(fetcher, responseText, options)\n      }\n    }\n\n    // Or what about an XHTML namespace?\n    let html = dom.getElementsByTagName('html')[0]\n    if (html) {\n      let xmlns = html.getAttribute('xmlns')\n      if (xmlns && xmlns.match(/^http:\\/\\/www.w3.org\\/1999\\/xhtml/)) {\n        fetcher.addStatus(options.req,\n          'Has a default namespace for ' + 'XHTML. Switching to XHTMLHandler.\\n')\n\n        let xhtmlHandler = new XHTMLHandler(this.response, dom)\n        return xhtmlHandler.parse(fetcher, responseText, options)\n      }\n    }\n\n    // At this point we should check the namespace document (cache it!) and\n    // look for a GRDDL transform\n    // @@  Get namespace document <n>, parse it, look for  <n> grddl:namespaceTransform ?y\n    // Apply ?y to   dom\n    // We give up. What dialect is this?\n    return fetcher.failFetch(options,\n      'Unsupported dialect of XML: not RDF or XHTML namespace, etc.\\n' +\n      responseText.slice(0, 80), 901)\n  }\n}\nXMLHandler.pattern = new RegExp('(text|application)/(.*)xml')\n\nclass HTMLHandler extends Handler {\n  static toString () {\n    return 'HTMLHandler'\n  }\n\n  static register (fetcher: Fetcher) {\n    fetcher.mediatypes['text/html'] = {\n      'q': 0.9\n    }\n  }\n\n  parse (\n    fetcher: Fetcher,\n    responseText: string,\n    options: {\n      req: BlankNode,\n      resource: Quad_Subject,\n      original: Quad_Subject,\n    } & Options\n  ): Promise<FetchError> | ExtendedResponse {\n    let kb = fetcher.store\n\n    // We only handle XHTML so we have to figure out if this is XML\n    // log.info(\"Sniffing HTML \" + xhr.resource + \" for XHTML.\")\n    if (isXML(responseText)) {\n      fetcher.addStatus(options.req, \"Has an XML declaration. We'll assume \" +\n        \"it's XHTML as the content-type was text/html.\\n\")\n\n      let xhtmlHandler = new XHTMLHandler(this.response)\n      return xhtmlHandler.parse(fetcher, responseText, options)\n    }\n\n    // DOCTYPE html\n    if (isXHTML(responseText)) {\n      fetcher.addStatus(options.req,\n        'Has XHTML DOCTYPE. Switching to XHTMLHandler.\\n')\n\n      let xhtmlHandler = new XHTMLHandler(this.response)\n      return xhtmlHandler.parse(fetcher, responseText, options)\n    }\n\n    // xmlns\n    if (isXMLNS(responseText)) {\n      fetcher.addStatus(options.req,\n        'Has default namespace for XHTML, so switching to XHTMLHandler.\\n')\n\n      let xhtmlHandler = new XHTMLHandler(this.response)\n      return xhtmlHandler.parse(fetcher, responseText, options)\n    }\n\n    // dc:title\n    // no need to escape '/' here\n    let titleMatch = (new RegExp('<title>([\\\\s\\\\S]+?)</title>', 'im')).exec(responseText)\n    if (titleMatch) {\n      kb.add(options.resource, ns.dc('title'), kb.rdfFactory.literal(titleMatch[1]),\n        options.resource) // think about xml:lang later\n    }\n    kb.add(options.resource, ns.rdf('type'), ns.link('WebPage'), fetcher.appNode)\n    fetcher.addStatus(options.req, 'non-XML HTML document, not parsed for data.')\n\n    return fetcher.doneFetch(options, this.response)\n  }\n}\nHTMLHandler.pattern = new RegExp('text/html')\n\nclass JsonLdHandler extends Handler {\n  static toString () {\n    return 'JsonLdHandler'\n  }\n  static register (fetcher: Fetcher) {\n    fetcher.mediatypes['application/ld+json'] = {\n      'q': 0.9\n    }\n  }\n  parse (\n    fetcher: Fetcher,\n    responseText: string,\n    options: {\n      req: Quad_Subject\n      original: Quad_Subject\n      resource: Quad_Subject\n    } & Options,\n    response: ExtendedResponse\n  ): Promise<ExtendedResponse | FetchError> {\n    const kb = fetcher.store\n    return new Promise((resolve, reject) => {\n      try {\n        jsonldParser (responseText, kb, options.original.value, () => {\n          resolve(fetcher.doneFetch(options, response))\n        })\n      } catch (err) {\n        const msg = 'Error trying to parse ' + options.resource +\n          ' as JSON-LD:\\n' + err  // not err.stack -- irrelevant\n        resolve(fetcher.failFetch(options, msg, 'parse_error', response))\n      }\n    })\n  }\n}\nJsonLdHandler.pattern = /application\\/ld\\+json/\n\nclass TextHandler extends Handler {\n  static toString () {\n    return 'TextHandler'\n  }\n\n  static register (fetcher: Fetcher) {\n    fetcher.mediatypes['text/plain'] = {\n      'q': 0.5\n    }\n  }\n\n  parse (\n    fetcher: Fetcher,\n    responseText: string,\n    options: {\n      req: Quad_Subject\n      original: Quad_Subject\n      resource: Quad_Subject\n    } & Options\n  ): ExtendedResponse | Promise<FetchError> {\n    // We only speak dialects of XML right now. Is this XML?\n\n    // Look for an XML declaration\n    if (isXML(responseText)) {\n      fetcher.addStatus(options.req, 'Warning: ' + options.resource +\n        \" has an XML declaration. We'll assume \" +\n        \"it's XML but its content-type wasn't XML.\\n\")\n\n      let xmlHandler = new XMLHandler(this.response)\n      return xmlHandler.parse(fetcher, responseText, options)\n    }\n\n    // Look for an XML declaration\n    if (responseText.slice(0, 500).match(/xmlns:/)) {\n      fetcher.addStatus(options.req, \"May have an XML namespace. We'll assume \" +\n        \"it's XML but its content-type wasn't XML.\\n\")\n\n      let xmlHandler = new XMLHandler(this.response)\n      return xmlHandler.parse(fetcher, responseText, options)\n    }\n\n    // We give up finding semantics - this is not an error, just no data\n    fetcher.addStatus(options.req, 'Plain text document, no known RDF semantics.')\n\n    return fetcher.doneFetch(options, this.response)\n  }\n}\nTextHandler.pattern = new RegExp('text/plain')\n\nclass N3Handler extends Handler {\n  static toString () {\n    return 'N3Handler'\n  }\n\n  static register (fetcher: Fetcher) {\n    fetcher.mediatypes['text/n3'] = {\n      'q': '1.0'\n    } // as per 2008 spec\n    /*\n     fetcher.mediatypes['application/x-turtle'] = {\n     'q': 1.0\n     } // pre 2008\n     */\n    fetcher.mediatypes['text/turtle'] = {\n      'q': 1.0\n    } // post 2008\n  }\n\n  parse (\n    fetcher: Fetcher,\n    responseText: string,\n    options: {\n      original: NamedNode\n      req: Quad_Subject\n    } & Options,\n    response: ExtendedResponse\n  ): ExtendedResponse | Promise<FetchError> {\n    // Parse the text of this N3 file\n    let kb = fetcher.store\n    let p = N3Parser(kb, kb, options.original.value, options.original.value,\n      null, null, '', null)\n    //                p.loadBuf(xhr.responseText)\n    try {\n      p.loadBuf(responseText)\n    } catch (err) {\n      let msg = 'Error trying to parse ' + options.resource +\n        ' as Notation3:\\n' + err  // not err.stack -- irrelevant\n      return fetcher.failFetch(options, msg, 'parse_error', response)\n    }\n\n    fetcher.addStatus(options.req, 'N3 parsed: ' + p.statementCount + ' triples in ' + p.lines + ' lines.')\n    fetcher.store.add(options.original, ns.rdf('type'), ns.link('RDFDocument'), fetcher.appNode)\n\n    return fetcher.doneFetch(options, this.response)\n  }\n}\nN3Handler.pattern = new RegExp('(application|text)/(x-)?(rdf\\\\+)?(n3|turtle)')\n\nconst defaultHandlers = {\n  RDFXMLHandler, XHTMLHandler, XMLHandler, HTMLHandler, TextHandler, N3Handler, JsonLdHandler\n}\n\nfunction isXHTML (responseText) {\n  const docTypeStart = responseText.indexOf('<!DOCTYPE html')\n  const docTypeEnd = responseText.indexOf('>')\n  if (docTypeStart === -1 || docTypeEnd === -1 || docTypeStart > docTypeEnd) {\n    return false\n  }\n  return responseText.substr(docTypeStart, docTypeEnd - docTypeStart).indexOf('XHTML') !== -1\n}\n\nfunction isXML (responseText: string): boolean {\n  const match = responseText.match(/\\s*<\\?xml\\s+version\\s*=[^<>]+\\?>/)\n  return !!match\n}\n\nfunction isXMLNS (responseText: string): boolean {\n  const match = responseText.match(/[^(<html)]*<html\\s+[^<]*xmlns=['\"]http:\\/\\/www.w3.org\\/1999\\/xhtml[\"'][^<]*>/)\n  return !!match\n}\n\ntype StatusValues =\n  /** No record of web access or record reset */\n  undefined |\n  /** Has been requested, fetch in progress */\n  true |\n  /** Received, OK */\n  'done' |\n  /** Not logged in */\n  401 |\n  /** HTTP status unauthorized */\n  403 |\n  /** Not found, resource does not exist */\n  404 |\n  /** In attempt to counter CORS problems retried */\n  'redirected' |\n  /** If it did fail */\n  'failed' |\n  'parse_error' |\n  /**\n   * URI is not a protocol Fetcher can deal with\n   * other strings mean various other errors.\n   */\n  'unsupported_protocol' |\n  'timeout' |\n  /** Any other HTTP status code */\n  number\n\ninterface MediatypesMap {\n  [id: string]: {\n    // Either string '1.0' or number 1.0 is allowed\n    'q'?: number | string\n  };\n}\n\ninterface RequestedMap {\n  [uri: string]: StatusValues\n}\n\ninterface TimeOutsMap {\n  [uri: string]: number[]\n}\n\ninterface FetchQueue {\n  [uri: string]: Promise<ExtendedResponse>\n}\n\ninterface FetchCallbacks {\n  [uri: string]: UserCallback[]\n}\n\ninterface BooleanMap {\n  [uri: string]: boolean\n}\n\n// Not sure about the shapes of this. Response? FetchError?\ntype Result = Response\n\n/** Differs from normal Fetch, has an extended Response type */\ntype Fetch = (input: RequestInfo, init?: RequestInit) => Promise<ExtendedResponse>;\n\ninterface CallbackifyInterface {\n  fireCallbacks: Function\n}\n\n/** Fetcher\n *\n * The Fetcher object is a helper object for a quadstore\n * which turns it from an offline store to an online store.\n * The fetcher deals with loading data files rom the web,\n  * figuring how to parse them.  It will also refresh, remove, the data\n  * and put back the data to the web.\n */\nexport default class Fetcher implements CallbackifyInterface {\n  store: IndexedFormula\n  timeout: number\n  _fetch: Fetch\n  mediatypes: MediatypesMap\n  /** Denoting this session */\n  appNode: BlankNode\n  /**\n   * this.requested[uri] states:\n   * undefined     no record of web access or records reset\n   * true          has been requested, fetch in progress\n   * 'done'        received, Ok\n   * 401           Not logged in\n   * 403           HTTP status unauthorized\n   * 404           Resource does not exist. Can be created etc.\n   * 'redirected'  In attempt to counter CORS problems retried.\n   * 'parse_error' Parse error\n   * 'unsupported_protocol'  URI is not a protocol Fetcher can deal with\n   * other strings mean various other errors.\n   */\n  requested: RequestedMap\n  /** List of timeouts associated with a requested URL */\n  timeouts: TimeOutsMap\n  /** Redirected from *key uri* to *value uri* */\n  redirectedTo: Record<string, string>\n  fetchQueue: FetchQueue\n  /** fetchCallbacks[uri].push(callback) */\n  fetchCallbacks: FetchCallbacks\n  /** Keep track of explicit 404s -> we can overwrite etc */\n  nonexistent: BooleanMap\n  lookedUp: BooleanMap\n  handlers: Array<typeof Handler>\n  ns: { [k: string]: (ln: string) => Quad_Predicate }\n  static HANDLERS: {\n    [handlerName: number]: Handler\n  }\n  static CONTENT_TYPE_BY_EXT: Record<string, string>\n  // TODO: Document this\n  static crossSiteProxyTemplate: any\n\n  /** Methods added by calling Util.callbackify in the constructor*/\n  fireCallbacks!: Function\n\n  constructor (store: IndexedFormula, options: Options = {}) {\n    this.store = store || new IndexedFormula()\n    this.ns = getNS(this.store.rdfFactory)\n    this.timeout = options.timeout || 30000\n\n    // solidFetcher is deprecated\n    this._fetch = options.fetch\n               || (typeof global !== 'undefined' && (global.solidFetcher || global.solidFetch))\n               || (typeof window !== 'undefined' && (window.solidFetcher || window.solidFetch))\n               || crossFetch\n    if (!this._fetch) {\n      throw new Error('No _fetch function available for Fetcher')\n    }\n\n    this.appNode = this.store.rdfFactory.blankNode()\n    this.store.fetcher = this // Bi-linked\n    this.requested = {}\n    this.timeouts = {}\n    this.redirectedTo = {}\n    this.fetchQueue = {}\n    this.fetchCallbacks = {}\n    this.nonexistent = {}\n    this.lookedUp = {}\n    this.handlers = []\n    this.mediatypes = {\n      'image/*': { 'q': 0.9 },\n      '*/*': { 'q': 0.1 }  // Must allow access to random content\n    }\n\n    // Util.callbackify(this, ['request', 'recv', 'headers', 'load', 'fail',\n    //   'refresh', 'retract', 'done'])\n    // In switching to fetch(), 'recv', 'headers' and 'load' do not make sense\n    Util.callbackify(this, ['request', 'fail', 'refresh', 'retract', 'done'])\n\n    Object.keys(options.handlers || defaultHandlers).map(key => this.addHandler(defaultHandlers[key]))\n  }\n\n  static crossSiteProxy (uri: string): undefined | any {\n    if (Fetcher.crossSiteProxyTemplate) {\n      return Fetcher.crossSiteProxyTemplate\n        .replace('{uri}', encodeURIComponent(uri))\n    } else {\n      return undefined\n    }\n  }\n\n  static offlineOverride (uri: string): string {\n    // Map the URI to a localhost proxy if we are running on localhost\n    // This is used for working offline, e.g. on planes.\n    // Is the script itself is running in localhost, then access all\n    //   data in a localhost mirror.\n    // Do not remove without checking with TimBL\n    let requestedURI = uri\n\n    var UI\n    if (typeof window !== 'undefined' && window.panes && (UI = window.panes.UI) &&\n      UI.preferences && UI.preferences.get('offlineModeUsingLocalhost')) {\n      if (requestedURI.slice(0, 7) === 'http://' && requestedURI.slice(7, 17) !== 'localhost/') {\n        requestedURI = 'http://localhost/' + requestedURI.slice(7)\n        log.warn('Localhost kludge for offline use: actually getting <' +\n          requestedURI + '>')\n      } else {\n        // log.warn(\"Localhost kludge NOT USED <\" + requestedURI + \">\")\n      }\n    } else {\n      // log.warn(\"Localhost kludge OFF offline use: actually getting <\" +\n      //   requestedURI + \">\")\n    }\n\n    return requestedURI\n  }\n\n  static proxyIfNecessary (uri: string) {\n    var UI\n    if (\n      typeof window !== 'undefined' &&\n      (window as any).panes &&\n      (UI = (window as any).panes.UI) &&\n      UI.isExtension\n    ) {\n      return uri\n    } // Extension does not need proxy\n\n    if (typeof $SolidTestEnvironment !== 'undefined' &&\n      $SolidTestEnvironment.localSiteMap) {\n      // nested dictionaries of URI parts from origin down\n      let hostpath = uri.split('/').slice(2) // the bit after the //\n\n      const lookup = (parts, index) => {\n        let z = index[parts.shift()]\n\n        if (!z) { return null }\n\n        if (typeof z === 'string') {\n          return z + parts.join('/')\n        }\n\n        if (!parts) { return null }\n\n        return lookup(parts, z)\n      }\n\n      const y = lookup(hostpath, $SolidTestEnvironment.localSiteMap)\n\n      if (y) {\n        return y\n      }\n    }\n\n    // browser does 2014 on as https browser script not trusted\n    // If the web app origin is https: then the mixed content rules\n    // prevent it loading insecure http: stuff so we need proxy.\n    if (Fetcher.crossSiteProxyTemplate &&\n        typeof document !== 'undefined' && document.location &&\n        ('' + document.location).slice(0, 6) === 'https:' && // origin is secure\n        uri.slice(0, 5) === 'http:') { // requested data is not\n      return Fetcher.crossSiteProxyTemplate\n        .replace('{uri}', encodeURIComponent(uri))\n    }\n\n    return uri\n  }\n\n  /**\n   * Tests whether the uri's protocol is supported by the Fetcher.\n   * @param uri\n   */\n  static unsupportedProtocol (uri: string): boolean {\n    let pcol = Uri.protocol(uri)\n\n    return (pcol === 'tel' || pcol === 'mailto' || pcol === 'urn')\n  }\n\n  /** Decide on credentials using old XXHR api or new fetch()  one\n   * @param requestedURI\n   * @param options\n   */\n  static setCredentials (requestedURI: string, options: Options = {}) {\n    // 2014 CORS problem:\n    // XMLHttpRequest cannot load http://www.w3.org/People/Berners-Lee/card.\n    // A wildcard '*' cannot be used in the 'Access-Control-Allow-Origin'\n    //   header when the credentials flag is true.\n    // @ Many ontology files under http: and need CORS wildcard ->\n    //   can't have credentials\n    if (options.credentials === undefined) { // Caller using new fetch convention\n      if (options.withCredentials !== undefined) { // XHR style is what Fetcher specified before\n        options.credentials = options.withCredentials ? 'include' : 'omit'\n      } else {\n        options.credentials = 'include' // default is to be logged on\n      }\n    }\n  }\n\n  /**\n   * Promise-based load function\n   *\n   * Loads a web resource or resources into the store.\n   *\n   * A resource may be given as NamedNode object, or as a plain URI.\n   * an array of resources will be given, in which they will be fetched in parallel.\n   * By default, the HTTP headers are recorded also, in the same store, in a separate graph.\n   * This allows code like editable() for example to test things about the resource.\n   *\n   * @param uri {Array<RDFlibNamedNode>|Array<string>|RDFlibNamedNode|string}\n   *\n   * @param [options={}] {Object}\n   *\n   * @param [options.fetch] {Function}\n   *\n   * @param [options.referringTerm] {RDFlibNamedNode} Referring term, the resource which\n   *   referred to this (for tracking bad links)\n   *\n   * @param [options.contentType] {string} Provided content type (for writes)\n   *\n   * @param [options.forceContentType] {string} Override the incoming header to\n   *   force the data to be treated as this content-type (for reads)\n   *\n   * @param [options.force] {boolean} Load the data even if loaded before.\n   *   Also sets the `Cache-Control:` header to `no-cache`\n   *\n   * @param [options.baseURI=docuri] {Node|string} Original uri to preserve\n   *   through proxying etc (`xhr.original`).\n   *\n   * @param [options.proxyUsed] {boolean} Whether this request is a retry via\n   *   a proxy (generally done from an error handler)\n   *\n   * @param [options.withCredentials] {boolean} flag for XHR/CORS etc\n   *\n   * @param [options.clearPreviousData] {boolean} Before we parse new data,\n   *   clear old, but only on status 200 responses\n   *\n   * @param [options.noMeta] {boolean} Prevents the addition of various metadata\n   *   triples (about the fetch request) to the store\n   *\n   * @param [options.noRDFa] {boolean}\n   *\n   * @returns {Promise<Result>}\n   */\n  load <T extends NamedNode | string | Array<string | NamedNode>>(\n    uri: T,\n    options: Options = {}\n  ): T extends Array<string | NamedNode> ? Promise<Result[]> : Promise<Result> {\n    options = Object.assign({}, options) // Take a copy as we add stuff to the options!!\n    if (uri instanceof Array) {\n      return Promise.all(uri.map((x) => {\n        return this.load(x, Object.assign({}, options)) as unknown as Promise<Result>\n      })) as T extends Array<string | NamedNode> ? Promise<Result[]> : Promise<Result>\n    }\n\n    const uriIn: NamedNode | string = uri as NamedNode\n\n    let docuri = termValue(uriIn)\n    docuri = docuri.split('#')[0]\n\n    options = this.initFetchOptions(docuri, options)\n\n    const initialisedOptions = this.initFetchOptions(docuri, options)\n\n    return this.pendingFetchPromise(docuri, initialisedOptions.baseURI, initialisedOptions) as any\n  }\n\n  pendingFetchPromise (\n    uri: string,\n    originalUri: string,\n    options: AutoInitOptions\n  ): Promise<Result> {\n    let pendingPromise\n\n    // Check to see if some request is already dealing with this uri\n    if (!options.force && this.fetchQueue[originalUri]) {\n      pendingPromise = this.fetchQueue[originalUri]\n    } else {\n      pendingPromise = Promise\n        .race([\n          this.setRequestTimeout(uri, options),\n          this.fetchUri(uri, options)\n        ])\n      this.fetchQueue[originalUri] = pendingPromise\n\n      // Clean up the queued promise after a time, if it's resolved\n      this.cleanupFetchRequest(originalUri, undefined, this.timeout)\n    }\n\n    return pendingPromise.then(x => {\n      if (uri in this.timeouts) {\n        this.timeouts[uri].forEach(clearTimeout)\n        delete this.timeouts[uri]\n      }\n      return x\n    })\n  }\n\n  /**\n   * @param _options - DEPRECATED\n   */\n  cleanupFetchRequest (\n    originalUri: string,\n    _options,\n    timeout: number\n  ) {\n    if (_options !== undefined) {\n      console.warn(\"_options is deprecated\")\n    }\n    this.timeouts[originalUri] = (this.timeouts[originalUri] || []).concat(setTimeout(() => {\n      if (!this.isPending(originalUri)) {\n        delete this.fetchQueue[originalUri]\n      }\n    }, timeout) as unknown as number)\n  }\n\n  initFetchOptions (\n    uri: string,\n    options: Options\n  ): AutoInitOptions {\n    let kb = this.store\n\n    let isGet = !options.method || options.method.toUpperCase() === 'GET'\n    if (!isGet) {\n      options.force = true\n    }\n\n    options.resource = kb.rdfFactory.namedNode(uri) // This might be proxified\n    options.baseURI = options.baseURI || uri // Preserve though proxying etc\n    options.original = kb.rdfFactory.namedNode(options.baseURI)\n    options.req = kb.bnode()\n    options.headers = options.headers || new Headers()\n\n    if (options.contentType) {\n      // @ts-ignore\n      options.headers['content-type'] = options.contentType\n    }\n\n    if (options.force) {\n      options.cache = 'no-cache'\n    }\n\n    let acceptString = this.acceptString()\n    // @ts-ignore\n    options.headers['accept'] = acceptString\n\n    let requestedURI = Fetcher.offlineOverride(uri)\n    options.requestedURI = requestedURI\n\n    Fetcher.setCredentials(requestedURI, options)\n\n    let actualProxyURI = Fetcher.proxyIfNecessary(requestedURI)\n    if (requestedURI !== actualProxyURI) {\n      options.proxyUsed = true\n    }\n    options.actualProxyURI = actualProxyURI\n\n    return options as AutoInitOptions\n  }\n\n  /**\n   * (The promise chain ends in either a `failFetch()` or a `doneFetch()`)\n   *\n   * @param docuri {string}\n   * @param options {Object}\n   *\n   * @returns {Promise<Object>} fetch() result or an { error, status } object\n   */\n  fetchUri (docuri: string, options: AutoInitOptions): Promise<ExtendedResponse | FetchError> {\n    if (!docuri) {\n      return Promise.reject(new Error('Cannot fetch an empty uri'))\n    }\n\n    if (Fetcher.unsupportedProtocol(docuri)) {\n      return this.failFetch(options, 'fetcher: Unsupported protocol', 'unsupported_protocol')\n    }\n\n    let state = this.getState(docuri)\n\n    if (!options.force) {\n      if (state === 'fetched') {  // URI already fetched and added to store\n        return Promise.resolve(\n          // @ts-ignore This is not a valid response object\n          this.doneFetch(options, {\n            status: 200,\n            ok: true,\n            statusText: 'Already loaded into quadstore.'\n          })\n        )\n      }\n      if (state === 'failed' && this.requested[docuri] === 404) { // Remember nonexistence\n        let message = 'Previously failed: ' + this.requested[docuri]\n        // @ts-ignore This is not a valid response object\n        let dummyResponse: ExtendedResponse = {\n          url: docuri,\n          // This does not comply to Fetch spec, it can be a string value in rdflib\n          status: this.requested[docuri] as number,\n          statusText: message,\n          responseText: message,\n          headers: new Headers,  // Headers() ???\n          ok: false,\n          body: null,\n          bodyUsed: false,\n          size: 0,\n          timeout: 0\n        }\n        return this.failFetch(options, message,\n          this.requested[docuri], dummyResponse)\n      }\n    } else {\n      // options.force == true\n      delete this.nonexistent[docuri]\n    }\n\n    this.fireCallbacks('request', [docuri])\n\n    this.requested[docuri] = true  // mark this uri as 'requested'\n\n    if (!options.noMeta) {\n      this.saveRequestMetadata(docuri, options)\n    }\n\n    let { actualProxyURI } = options\n\n    // Map might get mistakenly added into headers\n    // error TS2339: Property 'map' does not exist on type 'Headers'.\n    /* let map\n    if (options.headers && map in options.headers) {\n      delete options.headers.map\n    } */\n\n    return this._fetch((actualProxyURI as string), options)\n      .then(response => this.handleResponse(response, docuri, options),\n      error => { // @@ handleError?\n        // @ts-ignore Invalid response object\n        let dummyResponse: ExtendedResponse = {\n          url: actualProxyURI as string,\n          status: 999, // @@ what number/string should fetch failures report?\n          statusText: (error.name || 'network failure') + ': ' +\n            (error.errno || error.code || error.type),\n          responseText: error.message,\n          headers: new Headers(),  // Headers() ???\n          ok: false,\n          body: null,\n          bodyUsed: false,\n          size: 0,\n          timeout: 0\n        }\n        console.log('Fetcher: <' + actualProxyURI + '> Non-HTTP fetch exception: ' + error)\n        return this.handleError(dummyResponse, docuri, options) // possible credentials retry\n        // return this.failFetch(options, 'fetch failed: ' + error, 999, dummyResponse) // Fake status code: fetch exception\n\n        // handleError expects a response so we fake some important bits.\n        /*\n        this.handleError(, docuri, options)\n        */\n      }\n    )\n  }\n\n  /**\n   * Asks for a doc to be loaded if necessary then calls back\n   *\n   * Calling methods:\n   *   nowOrWhenFetched (uri, userCallback)\n   *   nowOrWhenFetched (uri, options, userCallback)\n   *   nowOrWhenFetched (uri, referringTerm, userCallback, options)  <-- old\n   *   nowOrWhenFetched (uri, referringTerm, userCallback) <-- old\n   *\n   *  Options include:\n   *   referringTerm    The document in which this link was found.\n   *                    this is valuable when finding the source of bad URIs\n   *   force            boolean.  Never mind whether you have tried before,\n   *                    load this from scratch.\n   *   forceContentType Override the incoming header to force the data to be\n   *                    treated as this content-type.\n   *\n   *  Callback function takes:\n   *\n   *    ok               True if the fetch worked, and got a 200 response.\n   *                     False if any error happened\n   *\n   *    errmessage       Text error message if not OK.\n   *\n   *    response         The fetch Response object (was: XHR) if there was was one\n   *                     includes response.status as the HTTP status if any.\n   */\n  nowOrWhenFetched (\n    uriIn: string | NamedNode,\n    p2?: UserCallback | Options,\n    userCallback?: UserCallback,\n    options: Options = {}\n  ): void {\n    const uri = termValue(uriIn)\n\n    if (typeof p2 === 'function') {\n      // nowOrWhenFetched (uri, userCallback)\n      userCallback = p2\n    } else if (typeof p2 === 'undefined') { // original calling signature\n      // referringTerm = undefined\n    } else if (isNamedNode(p2)) {\n      // referringTerm = p2\n      options.referringTerm = p2\n    } else {\n      // nowOrWhenFetched (uri, options, userCallback)\n      options = p2\n    }\n\n    (this.load(uri, options) as Promise<Response>)\n      .then((fetchResponse: ExtendedResponse) => {\n        if (userCallback) {\n          if (fetchResponse) {\n            if ((fetchResponse as Response).ok) {\n              userCallback(true, 'OK', fetchResponse)\n            } else {\n              // console.log('@@@ fetcher.js Should not take this path !!!!!!!!!!!!')\n              let oops = 'HTTP error: Status ' + fetchResponse.status + ' (' + fetchResponse.statusText + ')'\n              if (fetchResponse.responseText) {\n                oops += ' ' + fetchResponse.responseText // not in 404, dns error, nock failure\n              }\n              console.log(oops + ' fetching ' + uri)\n              userCallback(false, oops, fetchResponse)\n            }\n          } else {\n            let oops = ('@@ nowOrWhenFetched:  no response object!')\n            console.log(oops)\n            userCallback(false, oops)\n          }\n        }\n      }, function (err: FetchError) {\n        var message = err.message || err.statusText\n        message = 'Failed to load  <' + uri + '> ' + message\n        console.log(message)\n        if (err.response && err.response.status) {\n          message += ' status: ' + err.response.status\n        }\n        (userCallback as any)(false, message, err.response)\n      })\n  }\n\n  /**\n   * Records a status message (as a literal node) by appending it to the\n   * request's metadata status collection.\n   *\n   */\n  addStatus (req: BlankNode, statusMessage: string) {\n    // <Debug about=\"parsePerformance\">\n    let now = new Date()\n    statusMessage = '[' + now.getHours() + ':' + now.getMinutes() + ':' +\n      now.getSeconds() + '.' + now.getMilliseconds() + '] ' + statusMessage\n    // </Debug>\n    let kb = this.store\n\n    const statusNode = kb.the(req, this.ns.link('status'))\n    if (isCollection(statusNode)) {\n      statusNode.append(kb.rdfFactory.literal(statusMessage))\n    } else {\n      log.warn('web.js: No list to add to: ' + statusNode + ',' + statusMessage)\n    }\n  }\n\n  /**\n   * Records errors in the system on failure:\n   *\n   *  - Adds an entry to the request status collection\n   *  - Adds an error triple with the fail message to the metadata\n   *  - Fires the 'fail' callback\n   *  - Rejects with an error result object, which has a response object if any\n   */\n  failFetch (\n    options: {\n      req: BlankNode\n      original: Quad_Subject\n    } & Options,\n    errorMessage: string,\n    statusCode: StatusValues,\n    response?: ExtendedResponse\n  ): Promise<FetchError> {\n    this.addStatus(options.req, errorMessage)\n\n    if (!options.noMeta) {\n      this.store.add(\n        options.original,\n        this.ns.link('error'),\n        this.store.rdfFactory.literal(errorMessage)\n      )\n    }\n\n    let meth = (options.method || 'GET').toUpperCase()\n    let isGet = meth === 'GET' || meth === 'HEAD'\n\n    if (isGet) {  // only cache the status code on GET or HEAD\n      if (!(options as any).resource.equals(options.original)) {\n        // console.log('@@ Recording failure  ' + meth + '  original ' + options.original +option '( as ' + options.resource + ') : ' + statusCode)\n      } else {\n        // console.log('@@ Recording ' + meth + ' failure for ' + options.original + ': ' + statusCode)\n      }\n      this.requested[Uri.docpart(options.original.value)] = statusCode\n      this.fireCallbacks('fail', [options.original.value, errorMessage])\n    }\n\n    var err: FetchError = new Error('Fetcher: ' + errorMessage)\n\n    // err.ok = false // Is taken as a response, will work too @@ phase out?\n    err.status = statusCode\n    err.statusText = errorMessage\n    err.response = response\n\n    return Promise.reject(err)\n  }\n\n  // in the why part of the quad distinguish between HTML and HTTP header\n  // Reverse is set iif the link was rev= as opposed to rel=\n  linkData (\n    originalUri: NamedNode,\n    rel: string,\n    uri: string,\n    why: Quad_Graph,\n    reverse?: boolean\n  ) {\n    if (!uri) return\n    let kb = this.store\n    let predicate\n    // See http://www.w3.org/TR/powder-dr/#httplink for describedby 2008-12-10\n    let obj = kb.rdfFactory.namedNode(Uri.join(uri, originalUri.value))\n\n    if (rel === 'alternate' || rel === 'seeAlso' || rel === 'meta' ||\n        rel === 'describedby') {\n      if (obj.value === originalUri.value) { return }\n      predicate = this.ns.rdfs('seeAlso')\n    } else if (rel === 'type') {\n      predicate = kb.rdfFactory.namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type')\n    } else {\n      // See https://www.iana.org/assignments/link-relations/link-relations.xml\n      // Alas not yet in RDF yet for each predicate\n      // encode space in e.g. rel=\"shortcut icon\"\n      predicate = kb.rdfFactory.namedNode(\n        Uri.join(encodeURIComponent(rel),\n          'http://www.iana.org/assignments/link-relations/')\n      )\n    }\n    if (reverse) {\n      kb.add(obj, predicate, originalUri, why)\n    } else {\n      kb.add(originalUri, predicate, obj, why)\n    }\n  }\n\n  parseLinkHeader (\n    linkHeader: string,\n    originalUri: NamedNode,\n    reqNode: Quad_Graph\n  ): void {\n    if (!linkHeader) { return }\n\n    // const linkexp = /<[^>]*>\\s*(\\s*;\\s*[^()<>@,;:\"/[\\]?={} \\t]+=(([^()<>@,;:\"/[]?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g\n    // const paramexp = /[^()<>@,;:\"/[]?={} \\t]+=(([^()<>@,;:\"/[]?={} \\t]+)|(\"[^\"]*\"))/g\n\n    // From https://www.dcode.fr/regular-expression-simplificator:\n    // const linkexp = /<[^>]*>\\s*(\\s*;\\s*[^()<>@,;:\"/[\\]?={} t]+=[\"]))*[,$]/g\n    // const paramexp = /[^\\\\<>@,;:\"\\/\\[\\]?={} \\t]+=[\"])/g\n    // Original:\n    const linkexp = /<[^>]*>\\s*(\\s*;\\s*[^()<>@,;:\"/[\\]?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g\n    const paramexp = /[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\"))/g\n\n    const matches = linkHeader.match(linkexp)\n\n    if (matches == null) return;\n\n    for (let i = 0; i < matches.length; i++) {\n      let split = matches[i].split('>')\n      let href = split[0].substring(1)\n      let ps = split[1]\n      let s = ps.match(paramexp)\n      if (s == null) return\n      for (let j = 0; j < s.length; j++) {\n        let p = s[j]\n        let paramsplit = p.split('=')\n        // var name = paramsplit[0]\n        let rel = paramsplit[1].replace(/[\"']/g, '') // '\"\n        this.linkData(originalUri, rel, href, reqNode)\n      }\n    }\n  }\n\n  doneFetch (\n    options: {\n      req: Quad_Subject,\n      original: Quad_Subject\n    } & Options,\n    response: ExtendedResponse\n  ): Response {\n    this.addStatus(options.req, 'Done.')\n    this.requested[options.original.value] = 'done'\n\n    this.fireCallbacks('done', [options.original.value])\n\n    response.req = options.req  // Set the request meta blank node\n\n    return response\n  }\n\n  /**\n   * Note two nodes are now smushed\n   * If only one was flagged as looked up, then the new node is looked up again,\n   * which will make sure all the URIs are dereferenced\n   */\n  nowKnownAs (was: Quad_Subject, now: Quad_Subject): void {\n    if (this.lookedUp[was.value]) {\n      // Transfer userCallback\n      if (!this.lookedUp[now.value]) {\n        this.lookUpThing(now, was)\n      }\n    } else if (this.lookedUp[now.value]) {\n      if (!this.lookedUp[was.value]) {\n        this.lookUpThing(was, now)\n      }\n    }\n  }\n\n  /**\n   * Writes back to the web what we have in the store for this uri\n   */\n  putBack (\n    uri: NamedNode | string,\n    options: Options = {}\n  ): Promise<Response> {\n    const uriSting = termValue(uri)\n    let doc = new RDFlibNamedNode(uriSting).doc() // strip off #\n    options.contentType = options[\"content-type\"] || options[\"Content-Type\"] || options.contentType || TurtleContentType\n    if (options.contentType === 'application/ld+json') {\n      return new Promise((resolve, reject) => {\n        serialize(doc, this.store, doc.uri, options.contentType, (err, jsonString) => {\n          if (err) {\n            reject(err)\n          } else {\n            // @ts-ignore\n            options.data = jsonString\n            this.webOperation('PUT', uri, options)\n              .then((res) => resolve(res))\n              .catch((error) => reject(error))\n          }\n        })\n      })\n    }\n    options.data = serialize(doc, this.store, doc.value, options.contentType) as string\n    return this.webOperation('PUT', uriSting, options)\n  }\n\n  webCopy (here: string, there: string, contentType): Promise<ExtendedResponse> {\n    return this.webOperation('GET', here)\n      .then((result) => {\n        return this.webOperation(\n          'PUT', // change to binary from text\n          there, { data: result.responseText, contentType })\n      })\n  }\n\n  delete (uri: string, options?: Options): Promise<ExtendedResponse> {\n    return this.webOperation('DELETE', uri, options)\n      .then(response => {\n        this.requested[uri] = 404\n        this.nonexistent[uri] = true\n        this.unload(this.store.rdfFactory.namedNode(uri))\n\n        return response\n      })\n  }\n\n  /** Create an empty resource if it really does not exist\n   *  Be absolutely sure something does not exist before creating a new empty file\n   * as otherwise existing could  be deleted.\n   * @param doc - The resource\n  */\n  async createIfNotExists (\n    doc: RDFlibNamedNode,\n    contentType = TurtleContentType,\n    data = ''\n  ): Promise<ExtendedResponse> {\n    const fetcher = this\n    try {\n      var response = await fetcher.load(doc as NamedNode)\n    } catch (err) {\n      // @ts-ignore\n      if (err.response.status === 404) {\n        console.log('createIfNotExists: doc does NOT exist, will create... ' + doc)\n        try {\n          response = await fetcher.webOperation('PUT', doc.value, {data, contentType})\n        } catch (err) {\n          console.log('createIfNotExists doc FAILED: ' + doc + ': ' + err)\n          throw err\n        }\n        delete fetcher.requested[doc.value] // delete cached 404 error\n        // console.log('createIfNotExists doc created ok ' + doc)\n        return response\n      } else {\n        console.log('createIfNotExists doc load error NOT 404:  ' + doc + ': ' + err)\n        throw err\n      }\n    }\n    // console.log('createIfNotExists: doc exists, all good: ' + doc)\n    return response as Response\n  }\n\n  /**\n   * @param parentURI URI of parent container\n   * @param folderName - Optional folder name (slug)\n   * @param data - Optional folder metadata\n   */\n  createContainer (\n    parentURI: string,\n    folderName: string,\n    data: string\n  ): Promise<Response> {\n    let headers = {\n      // Force the right mime type for containers\n      'content-type': TurtleContentType,\n      'link': this.ns.ldp('BasicContainer') + '; rel=\"type\"'\n    }\n\n    if (folderName) {\n      headers['slug'] = folderName\n    }\n\n    // @ts-ignore These headers lack some of the required operators.\n    let options: Options = { headers }\n\n    if (data) {\n      options.body = data\n    }\n\n    return this.webOperation('POST', parentURI, options)\n  }\n\n  invalidateCache (iri: string | NamedNode): void {\n    const uri = termValue(iri)\n    const fetcher = this\n    // @ts-ignore\n    if (fetcher.fetchQueue && fetcher.fetchQueue[uri]) {\n      console.log('Internal error - fetchQueue exists ' + uri)\n      var promise = fetcher.fetchQueue[uri]\n      if (promise['PromiseStatus'] === 'resolved') {\n        delete fetcher.fetchQueue[uri]\n      } else { // pending\n        delete fetcher.fetchQueue[uri]\n        console.log('*** Fetcher: pending fetchQueue deleted ' + uri)\n      }\n    } if (fetcher.requested[uri] && fetcher.requested[uri] !== 'done' &&\n     fetcher.requested[uri] !== 'failed' && fetcher.requested[uri] !== 404) {\n       let msg = `Rdflib: fetcher: Destructive operation on <${fetcher.requested[uri]}> file being fetched! ` + uri\n      console.error(msg)\n      // alert(msg)\n    } else {\n      delete fetcher.requested[uri] // invalidate read cache -- @@ messes up logic if request in progress ??\n      delete fetcher.nonexistent[uri]\n    }\n  }\n\n  /**\n   * A generic web opeation, at the fetch() level.\n   * does not invole the quadstore.\n   *\n   *  Returns promise of Response\n   *  If data is returned, copies it to response.responseText before returning\n   */\n  webOperation (\n    method: HTTPMethods,\n    uriIn: string | NamedNode,\n    // Not sure about this type. Maybe this Options is different?\n    options: Options = {}\n  ): Promise<ExtendedResponse> {\n    const uri = termValue(uriIn)\n    options.method = method\n    options.body = options.data || options.body\n    options.force = true\n    const fetcher = this\n\n    if (options.body && !options.contentType) {\n      throw new Error('Web operation sending data must have a defined contentType.')\n    }\n    if (options.contentType) {\n      (options as any).headers = options.headers || {};\n      (options as any).headers['content-type'] = options.contentType\n    }\n    Fetcher.setCredentials(uri, options)\n\n    return new Promise(function (resolve, reject) {\n      fetcher._fetch(uri, options).then(response => {\n        if (response.ok) {\n          if (method === 'PUT' || method === 'PATCH' || method === 'POST' || method === 'DELETE') {\n            fetcher.invalidateCache (uri)\n          } // response.body with Chrome can't be relied on\n          if (response.text) { // Was: response.body https://github.com/linkeddata/rdflib.js/issues/506\n            response.text().then(data => {\n              response.responseText = data\n              resolve(response)\n            })\n          } else {\n            resolve(response)\n          }\n        } else {\n          let msg = 'Web error: ' + response.status\n          if (response.statusText) msg += ' (' + response.statusText + ')'\n          msg += ' on ' + method + ' of <' + uri + '>'\n          if (response.responseText) msg += ': ' + response.responseText\n          let e2: FetchError = new Error(msg)\n          e2.response = response\n          reject(e2)\n        }\n      }, (err: Error) => {\n        let msg = 'Fetch error for ' + method + ' of <' + uri + '>:' + err\n        reject(new Error(msg))\n      })\n    })\n  }\n\n  /**\n   * Looks up something.\n   * Looks up all the URIs a things has.\n   *\n   * @param term - canonical term for the thing whose URI is\n   *   to be dereferenced\n   * @param rterm - the resource which referred to this\n   *   (for tracking bad links)\n   */\n  lookUpThing (\n    term: Quad_Subject,\n    rterm: Quad_Subject\n  ): Promise<Response> | Promise<Response>[] {\n    let uris = this.store.uris(term)  // Get all URIs\n    uris = uris.map(u => Uri.docpart(u))  // Drop hash fragments\n\n    uris.forEach(u => {\n      this.lookedUp[u] = true\n    })\n\n    // @ts-ignore Recursive type\n    return this.load(uris, { referringTerm: rterm })\n  }\n\n  /**\n   * Looks up response header.\n   *\n   * @returns {Array|undefined} a list of header values found in a stored HTTP\n   *   response, or [] if response was found but no header found,\n   *   or undefined if no response is available.\n   * Looks for { [] link:requestedURI ?uri; link:response [ httph:header-name  ?value ] }\n   */\n  getHeader (\n    doc: NamedNode,\n    header: string\n  ): undefined | string[] {\n    const kb = this.store // look for the URI (AS A STRING NOT A NODE) for a stored request\n    const docuri: string = doc.value\n    const requests = kb.each(undefined, this.ns.link('requestedURI'), kb.rdfFactory.literal(docuri)) as Quad_Subject[]\n\n    for (let r = 0; r < requests.length; r++) {\n      let request = requests[r]\n      if (request !== undefined) {\n        let response = kb.any(request, this.ns.link('response')) as Quad_Subject\n        if (response !== undefined && kb.anyValue(response, this.ns.http('status')) && (kb.anyValue(response, this.ns.http('status')) as string).startsWith('2')) {\n          // Only look at success returns - not 401 error messagess etc\n          let results = kb.each(response, this.ns.httph(header.toLowerCase()))\n\n          if (results.length) {\n            return results.map(v => { return v.value })\n          }\n\n          return []\n        }\n      }\n    }\n    return undefined\n  }\n\n  saveRequestMetadata (\n    docuri: string,\n    options: AutoInitOptions\n  ) {\n    let req = options.req\n    let kb = this.store\n    let rterm = options.referringTerm\n\n    this.addStatus(options.req, 'Accept: ' + options.headers['accept'])\n\n    if (isNamedNode(rterm)) {\n      kb.add(kb.rdfFactory.namedNode(docuri), this.ns.link('requestedBy'), rterm, this.appNode)\n    }\n\n    if (options.original && options.original.value !== docuri) {\n      kb.add(req, this.ns.link('orginalURI'), kb.rdfFactory.literal(options.original.value),\n        this.appNode)\n    }\n\n    const now = new Date()\n    const timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' +\n      now.getSeconds() + '] '\n\n    kb.add(req, this.ns.rdfs('label'),\n      kb.rdfFactory.literal(timeNow + ' Request for ' + docuri), this.appNode)\n    // We store the docuri as a string, not as a node,\n    // see https://github.com/linkeddata/rdflib.js/pull/427#pullrequestreview-447910061\n    kb.add(req, this.ns.link('requestedURI'), kb.rdfFactory.literal(docuri), this.appNode)\n    kb.add(req, this.ns.link('status'), kb.collection(), this.appNode)\n  }\n\n  saveResponseMetadata (\n    response: Response,\n    options: {\n      req: BlankNode,\n      resource: Quad_Subject\n    } & Options\n  ): BlankNode {\n    const kb = this.store\n\n    let responseNode = kb.bnode()\n\n    kb.add(options.req, this.ns.link('response'), responseNode, responseNode)\n    kb.add(responseNode, this.ns.http('status'),\n    kb.rdfFactory.literal(response.status as any), responseNode)\n    kb.add(responseNode, this.ns.http('statusText'),\n    kb.rdfFactory.literal(response.statusText), responseNode)\n\n    // Save the response headers\n    response.headers.forEach((value, header) => {\n      kb.add(responseNode, this.ns.httph(header), this.store.rdfFactory.literal(value), responseNode)\n\n      if (header === 'content-type') {\n        kb.add(\n          options.resource,\n          this.ns.rdf('type'),\n          kb.rdfFactory.namedNode(Util.mediaTypeClass(value).value),\n          responseNode\n        )\n      }\n    })\n\n    return responseNode\n  }\n\n  objectRefresh (term: NamedNode): void {\n    let uris = this.store.uris(term) // Get all URIs\n    if (typeof uris !== 'undefined') {\n      for (let i = 0; i < uris.length; i++) {\n        this.refresh(this.store.rdfFactory.namedNode(Uri.docpart(uris[i])))\n        // what about rterm?\n      }\n    }\n  }\n\n  /* refresh  Reload data from a given document\n  **\n  ** @param term - An RDF Named Node for the eodcument in question\n  ** @param userCallback - A function userCallback(ok, message, response)\n  */\n  refresh (\n    term: NamedNode,\n    userCallback?: UserCallback\n  ): void { // sources_refresh\n    this.fireCallbacks('refresh', arguments)\n\n    this.nowOrWhenFetched(term, { force: true, clearPreviousData: true },\n      userCallback)\n  }\n\n /* refreshIfExpired   Conditional refresh if Expired\n **\n ** @param term - An RDF Named Node for the eodcument in question\n ** @param userCallback - A function userCallback(ok, message, response)\n */\n  refreshIfExpired (\n    term: NamedNode,\n    userCallback: UserCallback\n  ): void {\n    let exp = this.getHeader(term, 'Expires')\n    if (!exp || (new Date(exp[0]).getTime()) <= (new Date().getTime())) {\n      this.refresh(term, userCallback)\n    } else {\n      userCallback(true, 'Not expired', {})\n    }\n  }\n\n  retract (term: Quad_Graph) { // sources_retract\n    this.store.removeMany(undefined, undefined, undefined, term)\n    if (term.value) {\n      delete this.requested[Uri.docpart(term.value)]\n    }\n    this.fireCallbacks('retract', arguments)\n  }\n\n  getState (docuri: string) {\n    if (typeof this.requested[docuri] === 'undefined') {\n      return 'unrequested'\n    } else if (this.requested[docuri] === true) {\n      return 'requested'\n    } else if (this.requested[docuri] === 'done') {\n      return 'fetched'\n    } else if (this.requested[docuri] === 'redirected') {\n      return this.getState(this.redirectedTo[docuri])\n    } else { // An non-200 HTTP error status\n      return 'failed'\n    }\n  }\n\n  isPending (docuri: string) { // sources_pending\n    // doing anyStatementMatching is wasting time\n    // if it's not pending: false -> flailed\n    //   'done' -> done 'redirected' -> redirected\n    return this.requested[docuri] === true\n  }\n\n  unload (term: NamedNode) {\n    this.store.removeDocument(term)\n    delete this.requested[term.value] // So it can be load2ed again\n  }\n\n  addHandler (handler: typeof Handler) {\n    this.handlers.push(handler);\n    (handler as any).register(this)\n  }\n\n  retryNoCredentials (\n    docuri: string,\n    options\n  ): Promise<Result> {\n    console.log('Fetcher: CORS: RETRYING with NO CREDENTIALS for ' + options.resource)\n\n    options.retriedWithNoCredentials = true // protect against being called twice\n\n    delete this.requested[docuri] // forget the original request happened\n    delete this.fetchQueue[docuri]\n    // Note: XHR property was withCredentials, but fetch property is just credentials\n    let newOptions = Object.assign({}, options, { credentials: 'omit' })\n\n    this.addStatus(options.req,\n      'Abort: Will retry with credentials SUPPRESSED to see if that helps')\n\n    return this.load(docuri, newOptions) as Promise<Result>\n  }\n\n  /**\n   * Tests whether a request is being made to a cross-site URI (for purposes\n   * of retrying with a proxy)\n   */\n  isCrossSite (uri: string): boolean {\n    // Mashup situation, not node etc\n    if (typeof document === 'undefined' || !document.location) {\n      return false\n    }\n\n    const hostpart = Uri.hostpart\n    const here = '' + document.location\n    return (hostpart(here) && hostpart(uri) && hostpart(here)) !== hostpart(uri)\n  }\n\n  /**\n   * Called when there's a network error in fetch(), or a response\n   * with status of 0.\n   */\n  handleError (\n    response: ExtendedResponse | Error,\n    docuri: string,\n    options: AutoInitOptions\n  ): Promise<ExtendedResponse | FetchError> {\n    if (this.isCrossSite(docuri)) {\n      // Make sure we haven't retried already\n      if (options.credentials && options.credentials === 'include' && !options.retriedWithNoCredentials) {\n        return this.retryNoCredentials(docuri, options)\n      }\n\n      // Now attempt retry via proxy\n      let proxyUri = Fetcher.crossSiteProxy(docuri)\n\n      if (proxyUri && !options.proxyUsed) {\n        console.log('web: Direct failed so trying proxy ' + proxyUri)\n\n        return this.redirectToProxy(proxyUri, options)\n      }\n    }\n\n    var message\n    if (response instanceof Error) {\n      message = 'Fetch error: ' + response.message\n    } else {\n      message = response.statusText\n      if (response.responseText) {\n        message += ` ${response.responseText}`\n      }\n    }\n\n    // This is either not a CORS error, or retries have been made\n    return this.failFetch(options, message, (response as Response).status || 998, (response as Response))\n  }\n\n  // deduce some things from the HTTP transaction\n  addType (\n    rdfType: NamedNode,\n    req: Quad_Subject,\n    kb: IndexedFormula,\n    locURI: string\n  ): void { // add type to all redirected resources too\n    let prev = req\n    if (locURI) {\n      var reqURI = kb.any(prev, this.ns.link('requestedURI'))\n      if (reqURI && reqURI.value !== locURI) {\n        kb.add(kb.rdfFactory.namedNode(locURI), this.ns.rdf('type'), rdfType, this.appNode)\n      }\n    }\n    for (;;) {\n      const doc = kb.any(prev, this.ns.link('requestedURI'))\n      if (doc && doc.value) {\n        kb.add(kb.rdfFactory.namedNode(doc.value), this.ns.rdf('type'), rdfType, this.appNode)\n      } // convert Literal\n      prev = kb.any(undefined, kb.rdfFactory.namedNode('http://www.w3.org/2007/ont/link#redirectedRequest'), prev) as Quad_Subject\n      if (!prev) { break }\n      var response = kb.any(prev, kb.rdfFactory.namedNode('http://www.w3.org/2007/ont/link#response'))\n      if (!response) { break }\n      var redirection = kb.any((response as NamedNode), kb.rdfFactory.namedNode('http://www.w3.org/2007/ont/http#status'))\n      if (!redirection) { break }\n      // @ts-ignore always true?\n      if ((redirection !== '301') && (redirection !== '302')) { break }\n    }\n  }\n\n  /**\n   * Handle fetch() response\n   */\n  handleResponse (\n    response: ExtendedResponse,\n    docuri: string,\n    options: AutoInitOptions\n  ): Promise<FetchError | ExtendedResponse> | ExtendedResponse {\n\n    const kb = this.store\n    const headers = (response as Response).headers\n\n    const reqNode = options.req\n\n    const responseNode = this.saveResponseMetadata(response, options)\n\n    const contentType = this.normalizedContentType(options, headers) || ''\n    let contentLocation = headers.get('content-location')\n\n    // this.fireCallbacks('recv', xhr.args)\n    // this.fireCallbacks('headers', [{uri: docuri, headers: xhr.headers}])\n\n    // Check for masked errors (CORS, etc)\n    if (response.status === 0) {\n      console.log('Masked error - status 0 for ' + docuri)\n      return this.handleError(response, docuri, options)\n    }\n\n    if (response.status >= 400) {\n      if (response.status === 404) {\n        this.nonexistent[options.original.value] = true\n        this.nonexistent[docuri] = true\n      }\n\n      return this.saveErrorResponse(response, responseNode)\n        .then(() => {\n          let errorMessage = options.resource + ' ' + response.statusText\n\n          return this.failFetch(options, errorMessage, response.status, response)\n        })\n    }\n\n    var diffLocation: null | string = null\n    var absContentLocation: null | string = null\n    if (contentLocation) {\n      absContentLocation = Uri.join(contentLocation, docuri)\n      if (absContentLocation !== docuri) {\n        diffLocation = absContentLocation\n      }\n    }\n    if (response.status === 200) {\n      this.addType(this.ns.link('Document') as NamedNode, reqNode, kb, docuri)\n      if (diffLocation) {\n        this.addType(this.ns.link('Document') as NamedNode, reqNode, kb,\n          diffLocation)\n      }\n\n      // Before we parse new data clear old but only on 200\n      if (options.clearPreviousData) {\n        kb.removeDocument(options.resource)\n      }\n\n      let isImage = contentType.includes('image/') ||\n        contentType.includes('application/pdf')\n\n      if (contentType && isImage) {\n        this.addType(kb.rdfFactory.namedNode('http://purl.org/dc/terms/Image'), reqNode, kb,\n          docuri)\n        if (diffLocation) {\n          this.addType(kb.rdfFactory.namedNode('http://purl.org/dc/terms/Image'), reqNode, kb,\n            diffLocation)\n        }\n      }\n    }\n\n    // If we have already got the thing at this location, abort\n    if (contentLocation) {\n      if (!options.force && diffLocation && this.requested[absContentLocation as string] === 'done') {\n        // we have already fetched this\n        // should we smush too?\n        // log.info(\"HTTP headers indicate we have already\" + \" retrieved \" +\n        // xhr.resource + \" as \" + absContentLocation + \". Aborting.\")\n        return this.doneFetch(options, response)\n      }\n\n      this.requested[absContentLocation as string] = true\n    }\n\n    this.parseLinkHeader(headers.get('link') as string, options.original, reqNode)\n\n    let handler = this.handlerForContentType(contentType, response) as Handler\n\n    if (!handler) {\n      //  Not a problem, we just don't extract data\n      this.addStatus(reqNode, 'Fetch over. No data handled.')\n      return this.doneFetch(options, response)\n    }\n\n    return response\n      .text()\n      // @ts-ignore Types seem right\n      .then(responseText => {\n        response.responseText = responseText\n        return (handler as N3Handler).parse(this, responseText, options, response)\n      })\n  }\n\n  saveErrorResponse (\n    response: ExtendedResponse,\n    responseNode: Quad_Subject\n  ): Promise<void> {\n    let kb = this.store\n\n    return response.text()\n      .then(content => {\n        if (content.length > 10) {\n          kb.add(responseNode, this.ns.http('content'), kb.rdfFactory.literal(content), responseNode)\n        }\n      })\n  }\n\n  handlerForContentType (contentType: string, response: ExtendedResponse): Handler | null {\n    if (!contentType) {\n      return null\n    }\n\n    let Handler = this.handlers.find(handler => {\n      return contentType.match(handler.pattern)\n    })\n\n    // @ts-ignore in practice all Handlers have constructors.\n    return Handler ? new Handler(response) : null\n  }\n\n  guessContentType (uri: string): ContentType | undefined {\n    return CONTENT_TYPE_BY_EXT[uri.split('.').pop() as string]\n  }\n\n  normalizedContentType (\n    options: AutoInitOptions,\n    headers: Headers\n  ): ContentType | string | null {\n    if (options.forceContentType) {\n      return options.forceContentType\n    }\n\n    let contentType = headers.get('content-type')\n    if (!contentType || contentType.includes('application/octet-stream')) {\n      let guess = this.guessContentType(options.resource.value)\n\n      if (guess) {\n        return guess\n      }\n    }\n\n    let protocol = Uri.protocol(options.resource.value) as string\n\n    if (!contentType && ['file', 'chrome'].includes(protocol)) {\n      return 'text/xml'\n    }\n\n    return contentType\n  }\n\n  /**\n   * Sends a new request to the specified uri. (Extracted from `onerrorFactory()`)\n   */\n  redirectToProxy (\n    newURI: string,\n    options: AutoInitOptions\n  ): Promise<ExtendedResponse | FetchError> {\n    this.addStatus(options.req, 'BLOCKED -> Cross-site Proxy to <' + newURI + '>')\n\n    options.proxyUsed = true\n\n    const kb = this.store\n    const oldReq = options.req  // request metadata blank node\n\n    if (!options.noMeta) {\n      kb.add(oldReq, this.ns.link('redirectedTo'), kb.rdfFactory.namedNode(newURI), oldReq)\n      this.addStatus(oldReq, 'redirected to new request') // why\n    }\n\n    this.requested[options.resource.value] = 'redirected'\n    this.redirectedTo[options.resource.value] = newURI\n\n    let newOptions = Object.assign({}, options)\n    newOptions.baseURI = options.resource.value\n\n    return this.fetchUri(newURI, newOptions)\n      .then(response => {\n        if (!newOptions.noMeta) {\n          kb.add(oldReq, this.ns.link('redirectedRequest'), newOptions.req, this.appNode)\n        }\n\n        return response\n      })\n  }\n\n  setRequestTimeout (\n    uri: string,\n    options: {\n      req: Quad_Subject\n      original: Quad_Subject\n    } & Options\n  ): Promise<number | FetchError> {\n    return new Promise((resolve) => {\n      this.timeouts[uri] = (this.timeouts[uri] || []).concat(setTimeout(() => {\n        if (this.isPending(uri) &&\n            !options.retriedWithNoCredentials &&\n            !options.proxyUsed) {\n          resolve(this.failFetch(options, `Request to ${uri} timed out`, 'timeout'))\n        }\n      }, this.timeout) as unknown as number)\n    })\n  }\n\n  addFetchCallback (\n    uri: string,\n    callback: UserCallback\n  ): void {\n    if (!this.fetchCallbacks[uri]) {\n      this.fetchCallbacks[uri] = [callback]\n    } else {\n      this.fetchCallbacks[uri].push(callback)\n    }\n  }\n\n  acceptString () {\n    let acceptstring = ''\n\n    for (let mediaType in this.mediatypes) {\n      if (acceptstring !== '') {\n        acceptstring += ', '\n      }\n\n      acceptstring += mediaType\n\n      for (let property in this.mediatypes[mediaType]) {\n        acceptstring += ';' + property + '=' + this.mediatypes[mediaType][property]\n      }\n    }\n\n    return acceptstring\n  }\n  // var updatesVia = new $rdf.UpdatesVia(this) // Subscribe to headers\n// @@@@@@@@ This is turned off because it causes a websocket to be set up for ANY fetch\n// whether we want to track it ot not. including ontologies loaed though the XSSproxy\n}\n\nFetcher.HANDLERS = defaultHandlers\nFetcher.CONTENT_TYPE_BY_EXT = CONTENT_TYPE_BY_EXT\n","//  RDFa Parser for rdflib.js\n\n// Originally by: Alex Milowski\n// From https://github.com/alexmilowski/green-turtle\n// Converted: timbl 2015-08-25 not yet working\n// Added wrapper: csarven 2016-05-09 working\n\n// RDFaProcessor.prototype = new Object() // Was URIResolver\n\n// RDFaProcessor.prototype.constructor=RDFaProcessor\n\n// options.base = base URI    not really an option, shopuld always be set.\n//\n\nimport BlankNode from './blank-node'\nimport Literal from './literal'\nimport NamedNode from './named-node'\nimport * as Uri from './uri'\nimport * as Util from './utils-js'\nimport rdf from './factories/canonical-data-factory'\n\nif (typeof Node === 'undefined') { //  @@@@@@ Global. Interface to xmldom.\n  var Node = {\n    ELEMENT_NODE: 1,\n    ATTRIBUTE_NODE: 2,\n    TEXT_NODE: 3,\n    CDATA_SECTION_NODE: 4,\n    ENTITY_REFERENCE_NODE: 5,\n    ENTITY_NODE: 6,\n    PROCESSING_INSTRUCTION_NODE: 7,\n    COMMENT_NODE: 8,\n    DOCUMENT_NODE: 9,\n    DOCUMENT_TYPE_NODE: 10,\n    DOCUMENT_FRAGMENT_NODE: 11,\n    NOTATION_NODE: 12\n  }\n}\n\nexport default class RDFaProcessor {\n  constructor (kb, options) {\n    this.options = options || {}\n    this.kb = kb\n    this.target = options.target || {\n      graph: {\n        subjects: {},\n        prefixes: {},\n        terms: {}\n      }\n    }\n    // XXX: Added to track bnodes\n    this.blankNodes = []\n    // XXX: Added for normalisation\n    this.htmlOptions = {\n      'selfClosing': 'br img input area base basefont col colgroup source wbr isindex link meta param hr'\n    }\n    this.theOne = '_:' + (new Date()).getTime()\n    this.language = null\n    this.vocabulary = null\n    this.blankCounter = 0\n    this.langAttributes = [ { namespaceURI: 'http://www.w3.org/XML/1998/namespace', localName: 'lang' } ]\n    this.inXHTMLMode = false\n    this.absURIRE = /[\\w\\_\\-]+:\\S+/\n    this.finishedHandlers = []\n    this.init()\n  }\n\n  addTriple (origin, subject, predicate, object) {\n    var su, ob, pr, or\n    if (typeof subject === 'undefined') {\n      su = rdf.namedNode(this.options.base)\n    } else {\n      su = this.toRDFNodeObject(subject)\n    }\n    pr = this.toRDFNodeObject(predicate)\n    ob = this.toRDFNodeObject(object)\n    or = rdf.namedNode(this.options.base)\n    // console.log('Adding { ' + su + ' ' + pr + ' ' + ob + ' ' + or + ' }')\n    this.kb.add(su, pr, ob, or)\n  }\n\n  ancestorPath (node) {\n    var path = ''\n    while (node && node.nodeType !== Node.DOCUMENT_NODE) {\n      path = '/' + node.localName + path\n      node = node.parentNode\n    }\n    return path\n  }\n\n  copyMappings (mappings) {\n    var newMappings = {}\n    for (var k in mappings) {\n      newMappings[k] = mappings[k]\n    }\n    return newMappings\n  }\n\n  copyProperties () {\n  }\n\n  deriveDateTimeType (value) {\n    for (var i = 0; i < RDFaProcessor.dateTimeTypes.length; i++) {\n      // console.log(\"Checking \"+value+\" against \"+RDFaProcessor.dateTimeTypes[i].type)\n      var matched = RDFaProcessor.dateTimeTypes[i].pattern.exec(value)\n      if (matched && matched[0].length === value.length) {\n        // console.log(\"Matched!\")\n        return RDFaProcessor.dateTimeTypes[i].type\n      }\n    }\n    return null\n  }\n\n  init () {\n  }\n\n  newBlankNode () {\n    this.blankCounter++\n    return '_:' + this.blankCounter\n  }\n\n  newSubjectOrigin (origin, subject) {\n  }\n\n  parseCURIE (value, prefixes, base) {\n    var colon = value.indexOf(':')\n    var uri\n    if (colon >= 0) {\n      var prefix = value.substring(0, colon)\n      if (prefix === '') {\n        // default prefix\n        uri = prefixes['']\n        return uri ? uri + value.substring(colon + 1) : null\n      } else if (prefix === '_') {\n        // blank node\n        return '_:' + value.substring(colon + 1)\n      } else if (RDFaProcessor.NCNAME.test(prefix)) {\n        uri = prefixes[prefix]\n        if (uri) {\n          return uri + value.substring(colon + 1)\n        }\n      }\n    }\n    return null\n  }\n\n  parseCURIEOrURI (value, prefixes, base) {\n    var curie = this.parseCURIE(value, prefixes, base)\n    if (curie) {\n      return curie\n    }\n    return this.resolveAndNormalize(base, value)\n  }\n\n  parsePredicate (value, defaultVocabulary, terms, prefixes, base,\n                  ignoreTerms) {\n    if (value === '') {\n      return null\n    }\n    var predicate = this.parseTermOrCURIEOrAbsURI(value, defaultVocabulary, ignoreTerms ? null : terms, prefixes, base)\n    if (predicate && predicate.indexOf('_:') === 0) {\n      return null\n    }\n    return predicate\n  }\n\n  parsePrefixMappings (str, target) {\n    var values = this.tokenize(str)\n    var prefix = null\n    // var uri = null\n    for (var i = 0; i < values.length; i++) {\n      if (values[i][values[i].length - 1] === ':') {\n        prefix = values[i].substring(0, values[i].length - 1)\n      } else if (prefix) {\n        target[prefix] = this.options.base ? Uri.join(values[i], this.options.base) : values[i]\n        prefix = null\n      }\n    }\n  }\n\n  static parseRDFaDOM (dom, kb, base) {\n    var p = new RDFaProcessor(kb, { 'base': base })\n    //  Cannot assign to read only property 'baseURI' of object '#<XMLDocument>':\n    if (!dom.baseURI) { // Note this became a read-only attribute some time before 2018\n      dom.baseURI = base // oinly set if not already set\n    }\n    p.process(dom, { baseURI: base})\n  }\n\n  parseSafeCURIEOrCURIEOrURI (value, prefixes, base) {\n    value = this.trim(value)\n    if (value.charAt(0) === '[' && value.charAt(value.length - 1) === ']') {\n      value = value.substring(1, value.length - 1)\n      value = value.trim(value)\n      if (value.length === 0) {\n        return null\n      }\n      if (value === '_:') {\n        // the one node\n        return this.theOne\n      }\n      return this.parseCURIE(value, prefixes, base)\n    } else {\n      return this.parseCURIEOrURI(value, prefixes, base)\n    }\n  }\n\n  parseTermOrCURIEOrAbsURI (value, defaultVocabulary, terms, prefixes, base) {\n    // alert(\"Parsing \"+value+\" with default vocab \"+defaultVocabulary)\n    value = this.trim(value)\n    var curie = this.parseCURIE(value, prefixes, base)\n    if (curie) {\n      return curie\n    } else if (terms) {\n      if (defaultVocabulary && !this.absURIRE.exec(value)) {\n        return defaultVocabulary + value\n      }\n      var term = terms[value]\n      if (term) {\n        return term\n      }\n      var lcvalue = value.toLowerCase()\n      term = terms[lcvalue]\n      if (term) {\n        return term\n      }\n    }\n    if (this.absURIRE.exec(value)) {\n      return this.resolveAndNormalize(base, value)\n    }\n    return null\n  }\n\n  parseTermOrCURIEOrURI (value, defaultVocabulary, terms, prefixes, base) {\n    // alert(\"Parsing \"+value+\" with default vocab \"+defaultVocabulary)\n    value = this.trim(value)\n    var curie = this.parseCURIE(value, prefixes, base)\n    if (curie) {\n      return curie\n    } else {\n      var term = terms[value]\n      if (term) {\n        return term\n      }\n      var lcvalue = value.toLowerCase()\n      term = terms[lcvalue]\n      if (term) {\n        return term\n      }\n      if (defaultVocabulary && !this.absURIRE.exec(value)) {\n        return defaultVocabulary + value\n      }\n    }\n    return this.resolveAndNormalize(base, value)\n  }\n\n  parseURI (uri) {\n    return uri // We just use strings as URIs, not objects now.\n  }\n\n  process (node, options) {\n    /*\n    if (!window.console) {\n       window.console = { log: function() {} }\n    } */\n    options = options || {}\n    var base\n    if (node.nodeType === Node.DOCUMENT_NODE) {\n      if (node.baseURI && !options.baseURI) {\n        options.baseURI = node.baseURI  // be defensive as DOM implementations vary\n      }\n      base = node.baseURI\n      node = node.documentElement\n      if (!node.baseURI) {\n        node.baseURI = base\n      }\n      this.setContext(node)\n    } else if (node.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      this.setContext(node)\n    }\n    var queue = []\n    // Fix for Firefox that includes the hash in the base URI\n    var removeHash = function (baseURI) {\n      // Fix for undefined baseURI property\n      if (!baseURI && options && options.baseURI) {\n        return options.baseURI\n      }\n\n      var hash = baseURI.indexOf('#')\n      if (hash >= 0) {\n        baseURI = baseURI.substring(0, hash)\n      }\n      if (options && options.baseURIMap) {\n        baseURI = options.baseURIMap(baseURI)\n      }\n      return baseURI\n    }\n    queue.push({ current: node,\n      context: this.push(null, removeHash(node.baseURI))\n    })\n    while (queue.length > 0) {\n      var item = queue.shift()\n      if (item.parent) {\n        // Sequence Step 14: list triple generation\n        if (item.context.parent && item.context.parent.listMapping === item.listMapping) {\n          // Skip a child context with exactly the same mapping\n          continue\n        }\n        // console.log(\"Generating lists for \"+item.subject+\", tag \"+item.parent.localName)\n        for (let predicate in item.listMapping) {\n          var list = item.listMapping[predicate]\n          if (list.length === 0) {\n            this.addTriple(item.parent, item.subject, predicate, { type: RDFaProcessor.objectURI, value: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil' })\n            continue\n          }\n          var bnodes = []\n          for (let i = 0; i < list.length; i++) {\n            bnodes.push(this.newBlankNode())\n          // this.newSubject(item.parent,bnodes[i])\n          }\n          for (let i = 0; i < bnodes.length; i++) {\n            this.addTriple(item.parent, bnodes[i], 'http://www.w3.org/1999/02/22-rdf-syntax-ns#first', list[i])\n            this.addTriple(item.parent, bnodes[i], 'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest', { type: RDFaProcessor.objectURI, value: (i + 1) < bnodes.length ? bnodes[i + 1] : 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil' })\n          }\n          this.addTriple(item.parent, item.subject, predicate, { type: RDFaProcessor.objectURI, value: bnodes[0] })\n        }\n        continue\n      }\n      var current = item.current\n      var context = item.context\n      // console.log(\"Tag: \"+current.localName+\", listMapping=\"+JSON.stringify(context.listMapping))\n      // Sequence Step 1\n      var skip = false\n      var newSubject = null\n      var currentObjectResource = null\n      var typedResource = null\n      var prefixes = context.prefixes\n      var prefixesCopied = false\n      var incomplete = []\n      var listMapping = context.listMapping\n      var listMappingDifferent = !context.parent\n      var language = context.language\n      var vocabulary = context.vocabulary\n      // TODO: the \"base\" element may be used for HTML+RDFa 1.1\n      base = this.parseURI(removeHash(current.baseURI))\n      current.item = null\n      // Sequence Step 2: set the default vocabulary\n      var vocabAtt = current.getAttributeNode('vocab')\n      if (vocabAtt) {\n        let value = this.trim(vocabAtt.value)\n        if (value.length > 0) {\n          vocabulary = value\n          var baseSubject = base.spec\n          // this.newSubject(current,baseSubject)\n          this.addTriple(current, baseSubject, 'http://www.w3.org/ns/rdfa#usesVocabulary', { type: RDFaProcessor.objectURI, value: vocabulary })\n        } else {\n          vocabulary = this.vocabulary\n        }\n      }\n      // Sequence Step 3: IRI mappings\n      // handle xmlns attributes\n      for (var i = 0; i < current.attributes.length; i++) {\n        var att = current.attributes[i]\n        // if (att.namespaceURI==\"http://www.w3.org/2000/xmlns/\") {\n        if (att.nodeName.charAt(0) === 'x' && att.nodeName.indexOf('xmlns:') === 0) {\n          if (!prefixesCopied) {\n            prefixes = this.copyMappings(prefixes)\n            prefixesCopied = true\n          }\n          var prefix = att.nodeName.substring(6)\n          // TODO: resolve relative?\n          var ref = RDFaProcessor.trim(att.value)\n          prefixes[prefix] = this.options.base ? Uri.join(ref, this.options.base) : ref\n        }\n      }\n      // Handle prefix mappings (@prefix)\n      var prefixAtt = current.getAttributeNode('prefix')\n      if (prefixAtt) {\n        if (!prefixesCopied) {\n          prefixes = this.copyMappings(prefixes)\n          prefixesCopied = true\n        }\n        this.parsePrefixMappings(prefixAtt.value, prefixes)\n      }\n      // Sequence Step 4: language\n      var xmlLangAtt = null\n      for (let i = 0; !xmlLangAtt && i < this.langAttributes.length; i++) {\n        xmlLangAtt = current.getAttributeNodeNS(this.langAttributes[i].namespaceURI, this.langAttributes[i].localName)\n      }\n      if (xmlLangAtt) {\n        let value = RDFaProcessor.trim(xmlLangAtt.value)\n        if (value.length > 0) {\n          language = value\n        } else {\n          language = null\n        }\n      }\n      var relAtt = current.getAttributeNode('rel')\n      var revAtt = current.getAttributeNode('rev')\n      var typeofAtt = current.getAttributeNode('typeof')\n      var propertyAtt = current.getAttributeNode('property')\n      var datatypeAtt = current.getAttributeNode('datatype')\n      var datetimeAtt = this.inHTMLMode\n        ? current.getAttributeNode('datetime')\n        : null\n      var contentAtt = current.getAttributeNode('content')\n      var aboutAtt = current.getAttributeNode('about')\n      var srcAtt = current.getAttributeNode('src')\n      var resourceAtt = current.getAttributeNode('resource')\n      var hrefAtt = current.getAttributeNode('href')\n      var inlistAtt = current.getAttributeNode('inlist')\n      var relAttPredicates = []\n      var predicate, values\n      if (relAtt) {\n        values = this.tokenize(relAtt.value)\n        for (let i = 0; i < values.length; i++) {\n          predicate = this.parsePredicate(values[i], vocabulary, context.terms, prefixes, base, this.inHTMLMode && propertyAtt !== null)\n          if (predicate) {\n            relAttPredicates.push(predicate)\n          }\n        }\n      }\n      var revAttPredicates = []\n      if (revAtt) {\n        values = this.tokenize(revAtt.value)\n        for (let i = 0; i < values.length; i++) {\n          predicate = this.parsePredicate(values[i], vocabulary, context.terms, prefixes, base, this.inHTMLMode && propertyAtt)\n          if (predicate) {\n            revAttPredicates.push(predicate)\n          }\n        }\n      }\n      // Section 3.1, bullet 7\n      if (this.inHTMLMode && (relAtt || revAtt) && propertyAtt) {\n        if (relAttPredicates.length === 0) {\n          relAtt = null\n        }\n        if (revAttPredicates.length === 0) {\n          revAtt = null\n        }\n      }\n      if (relAtt || revAtt) {\n        // Sequence Step 6: establish new subject and value\n        if (aboutAtt) {\n          newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base)\n        }\n        if (typeofAtt) {\n          typedResource = newSubject\n        }\n        if (!newSubject) {\n          if (current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n            newSubject = removeHash(current.baseURI)\n          } else if (context.parentObject) {\n            // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n            newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject\n          }\n        }\n        if (resourceAtt) {\n          currentObjectResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base)\n        }\n        if (!currentObjectResource) {\n          if (hrefAtt) {\n            currentObjectResource = this.resolveAndNormalize(base, encodeURI(hrefAtt.value))\n          } else if (srcAtt) {\n            currentObjectResource = this.resolveAndNormalize(base, encodeURI(srcAtt.value))\n          } else if (typeofAtt && !aboutAtt && !(this.inXHTMLMode && (current.localName === 'head' || current.localName === 'body'))) {\n            currentObjectResource = this.newBlankNode()\n          }\n        }\n        if (typeofAtt && !aboutAtt && this.inXHTMLMode && (current.localName === 'head' || current.localName === 'body')) {\n          typedResource = newSubject\n        } else if (typeofAtt && !aboutAtt) {\n          typedResource = currentObjectResource\n        }\n      } else if (propertyAtt && !contentAtt && !datatypeAtt) {\n        // Sequence Step 5.1: establish a new subject\n        if (aboutAtt) {\n          newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base)\n          if (typeofAtt) {\n            typedResource = newSubject\n          }\n        }\n        if (!newSubject && current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n          newSubject = removeHash(current.baseURI)\n          if (typeofAtt) {\n            typedResource = newSubject\n          }\n        } else if (!newSubject && context.parentObject) {\n          // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n          newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject\n        }\n        if (typeofAtt && !typedResource) {\n          if (resourceAtt) {\n            typedResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base)\n          }\n          if (!typedResource && hrefAtt) {\n            typedResource = this.resolveAndNormalize(base, encodeURI(hrefAtt.value))\n          }\n          if (!typedResource && srcAtt) {\n            typedResource = this.resolveAndNormalize(base, encodeURI(srcAtt.value))\n          }\n          if (!typedResource && (this.inXHTMLMode || this.inHTMLMode) && (current.localName === 'head' || current.localName === 'body')) {\n            typedResource = newSubject\n          }\n          if (!typedResource) {\n            typedResource = this.newBlankNode()\n          }\n          currentObjectResource = typedResource\n        }\n      // console.log(current.localName+\", newSubject=\"+newSubject+\", typedResource=\"+typedResource+\", currentObjectResource=\"+currentObjectResource)\n      } else {\n        // Sequence Step 5.2: establish a new subject\n        if (aboutAtt) {\n          newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base)\n        }\n        if (!newSubject && resourceAtt) {\n          newSubject = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base)\n        }\n        if (!newSubject && hrefAtt) {\n          newSubject = this.resolveAndNormalize(base, encodeURI(hrefAtt.value))\n        }\n        if (!newSubject && srcAtt) {\n          newSubject = this.resolveAndNormalize(base, encodeURI(srcAtt.value))\n        }\n        if (!newSubject) {\n          if (current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n            newSubject = removeHash(current.baseURI)\n          } else if ((this.inXHTMLMode || this.inHTMLMode) && (current.localName === 'head' || current.localName === 'body')) {\n            newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject\n          } else if (typeofAtt) {\n            newSubject = this.newBlankNode()\n          } else if (context.parentObject) {\n            // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n            newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject\n            if (!propertyAtt) {\n              skip = true\n            }\n          }\n        }\n        if (typeofAtt) {\n          typedResource = newSubject\n        }\n      }\n      // console.log(current.tagName+\": newSubject=\"+newSubject+\", currentObjectResource=\"+currentObjectResource+\", typedResource=\"+typedResource+\", skip=\"+skip)\n      // var rdfaData = null\n      if (newSubject) {\n        // this.newSubject(current,newSubject)\n        if (aboutAtt || resourceAtt || typedResource) {\n          var id = newSubject\n          if (typeofAtt && !aboutAtt && !resourceAtt && currentObjectResource) {\n            id = currentObjectResource\n          }\n          // console.log(\"Setting data attribute for \"+current.localName+\" for subject \"+id)\n          this.newSubjectOrigin(current, id)\n        }\n      }\n      // Sequence Step 7: generate type triple\n      if (typedResource) {\n        values = this.tokenize(typeofAtt.value)\n        for (let i = 0; i < values.length; i++) {\n          var object = this.parseTermOrCURIEOrAbsURI(values[i], vocabulary, context.terms, prefixes, base)\n          if (object) {\n            this.addTriple(current, typedResource, RDFaProcessor.typeURI, { type: RDFaProcessor.objectURI, value: object })\n          }\n        }\n      }\n      // Sequence Step 8: new list mappings if there is a new subject\n      // console.log(\"Step 8: newSubject=\"+newSubject+\", context.parentObject=\"+context.parentObject)\n      if (newSubject && newSubject !== context.parentObject) {\n        // console.log(\"Generating new list mapping for \"+newSubject)\n        listMapping = {}\n        listMappingDifferent = true\n      }\n      // Sequence Step 9: generate object triple\n      if (currentObjectResource) {\n        if (relAtt && inlistAtt) {\n          for (let i = 0; i < relAttPredicates.length; i++) {\n            let list = listMapping[relAttPredicates[i]]\n            if (!list) {\n              list = []\n              listMapping[relAttPredicates[i]] = list\n            }\n            list.push({ type: RDFaProcessor.objectURI, value: currentObjectResource })\n          }\n        } else if (relAtt) {\n          for (let i = 0; i < relAttPredicates.length; i++) {\n            this.addTriple(current, newSubject, relAttPredicates[i], { type: RDFaProcessor.objectURI, value: currentObjectResource })\n          }\n        }\n        if (revAtt) {\n          for (let i = 0; i < revAttPredicates.length; i++) {\n            this.addTriple(current, currentObjectResource, revAttPredicates[i], { type: RDFaProcessor.objectURI, value: newSubject })\n          }\n        }\n      } else {\n        // Sequence Step 10: incomplete triples\n        if (newSubject && !currentObjectResource && (relAtt || revAtt)) {\n          currentObjectResource = this.newBlankNode()\n        // alert(current.tagName+\": generated blank node, newSubject=\"+newSubject+\" currentObjectResource=\"+currentObjectResource)\n        }\n        if (relAtt && inlistAtt) {\n          for (let i = 0; i < relAttPredicates.length; i++) {\n            let list = listMapping[relAttPredicates[i]]\n            if (!list) {\n              list = []\n              listMapping[predicate] = list\n            }\n            // console.log(\"Adding incomplete list for \"+predicate)\n            incomplete.push({ predicate: relAttPredicates[i], list: list })\n          }\n        } else if (relAtt) {\n          for (let i = 0; i < relAttPredicates.length; i++) {\n            incomplete.push({ predicate: relAttPredicates[i], forward: true })\n          }\n        }\n        if (revAtt) {\n          for (let i = 0; i < revAttPredicates.length; i++) {\n            incomplete.push({ predicate: revAttPredicates[i], forward: false })\n          }\n        }\n      }\n      // Step 11: Current property values\n      if (propertyAtt) {\n        var datatype = null\n        var content = null\n        if (datatypeAtt) {\n          datatype = datatypeAtt.value === '' ? RDFaProcessor.PlainLiteralURI : this.parseTermOrCURIEOrAbsURI(datatypeAtt.value, vocabulary, context.terms, prefixes, base)\n          if (datetimeAtt && !contentAtt) {\n            content = datetimeAtt.value\n          } else {\n            content = datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI ? null : (contentAtt ? contentAtt.value : current.textContent)\n          }\n        } else if (contentAtt) {\n          datatype = RDFaProcessor.PlainLiteralURI\n          content = contentAtt.value\n        } else if (datetimeAtt) {\n          content = datetimeAtt.value\n          datatype = RDFaProcessor.deriveDateTimeType(content)\n          if (!datatype) {\n            datatype = RDFaProcessor.PlainLiteralURI\n          }\n        } else if (!relAtt && !revAtt) {\n          if (resourceAtt) {\n            content = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base)\n          }\n          if (!content && hrefAtt) {\n            content = this.resolveAndNormalize(base, encodeURI(hrefAtt.value))\n          } else if (!content && srcAtt) {\n            content = this.resolveAndNormalize(base, encodeURI(srcAtt.value))\n          }\n          if (content) {\n            datatype = RDFaProcessor.objectURI\n          }\n        }\n        if (!datatype) {\n          if (typeofAtt && !aboutAtt) {\n            datatype = RDFaProcessor.objectURI\n            content = typedResource\n          } else {\n            content = current.textContent\n            if (this.inHTMLMode && current.localName === 'time') {\n              datatype = RDFaProcessor.deriveDateTimeType(content)\n            }\n            if (!datatype) {\n              datatype = RDFaProcessor.PlainLiteralURI\n            }\n          }\n        }\n        values = this.tokenize(propertyAtt.value)\n        for (let i = 0; i < values.length; i++) {\n          let predicate = this.parsePredicate(values[i], vocabulary, context.terms, prefixes, base)\n          if (predicate) {\n            if (inlistAtt) {\n              let list = listMapping[predicate]\n              if (!list) {\n                list = []\n                listMapping[predicate] = list\n              }\n              list.push((datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI) ? { type: datatype, value: current.childNodes } : { type: datatype || RDFaProcessor.PlainLiteralURI, value: content, language: language })\n            } else {\n              if (datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI) {\n                this.addTriple(current, newSubject, predicate, { type: datatype, value: current.childNodes })\n              } else {\n                this.addTriple(current, newSubject, predicate, { type: datatype || RDFaProcessor.PlainLiteralURI, value: content, language: language })\n              // console.log(newSubject+\" \"+predicate+\"=\"+content)\n              }\n            }\n          }\n        }\n      }\n      // Sequence Step 12: complete incomplete triples with new subject\n      if (newSubject && !skip) {\n        for (let i = 0; i < context.incomplete.length; i++) {\n          if (context.incomplete[i].list) {\n            // console.log(\"Adding subject \"+newSubject+\" to list for \"+context.incomplete[i].predicate)\n            // TODO: it is unclear what to do here\n            context.incomplete[i].list.push({ type: RDFaProcessor.objectURI, value: newSubject })\n          } else if (context.incomplete[i].forward) {\n            // console.log(current.tagName+\": completing forward triple \"+context.incomplete[i].predicate+\" with object=\"+newSubject)\n            this.addTriple(current, context.subject, context.incomplete[i].predicate, { type: RDFaProcessor.objectURI, value: newSubject })\n          } else {\n            // console.log(current.tagName+\": completing reverse triple with object=\"+context.subject)\n            this.addTriple(current, newSubject, context.incomplete[i].predicate, { type: RDFaProcessor.objectURI, value: context.subject })\n          }\n        }\n      }\n      var childContext = null\n      var listSubject = newSubject\n      if (skip) {\n        // TODO: should subject be null?\n        childContext = this.push(context, context.subject)\n        // TODO: should the entObject be passed along?  If not, then intermediary children will keep properties from being associated with incomplete triples.\n        // TODO: Verify: if the current baseURI has changed and the parentObject is the parent's base URI, then the baseURI should change\n        childContext.parentObject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject\n        childContext.incomplete = context.incomplete\n        childContext.language = language\n        childContext.prefixes = prefixes\n        childContext.vocabulary = vocabulary\n      } else {\n        childContext = this.push(context, newSubject)\n        childContext.parentObject = currentObjectResource || (newSubject || context.subject)\n        childContext.prefixes = prefixes\n        childContext.incomplete = incomplete\n        if (currentObjectResource) {\n          // console.log(\"Generating new list mapping for \"+currentObjectResource)\n          listSubject = currentObjectResource\n          listMapping = {}\n          listMappingDifferent = true\n        }\n        childContext.listMapping = listMapping\n        childContext.language = language\n        childContext.vocabulary = vocabulary\n      }\n      if (listMappingDifferent) {\n        // console.log(\"Pushing list parent \"+current.localName)\n        queue.unshift({ parent: current, context: context, subject: listSubject, listMapping: listMapping })\n      }\n      for (var child = current.lastChild; child; child = child.previousSibling) {\n        if (child.nodeType === Node.ELEMENT_NODE) {\n          // console.log(\"Pushing child \"+child.localName)\n          // child.baseURI = current.baseURI\n          queue.unshift({ current: child, context: childContext })\n        }\n      }\n    }\n    if (this.inHTMLMode) {\n      this.copyProperties()\n    }\n    for (let i = 0; i < this.finishedHandlers.length; i++) {\n      this.finishedHandlers[i](node)\n    }\n  }\n\n  push (parent, subject) {\n    return {\n      parent: parent,\n      subject: subject || (parent ? parent.subject : null),\n      parentObject: null,\n      incomplete: [],\n      listMapping: parent ? parent.listMapping : {},\n      language: parent ? parent.language : this.language,\n      prefixes: parent ? parent.prefixes : this.target.graph.prefixes,\n      terms: parent ? parent.terms : this.target.graph.terms,\n      vocabulary: parent ? parent.vocabulary : this.vocabulary\n    }\n  }\n\n  resolveAndNormalize (base, uri) {\n    // console.log(\"Joining \" + uri + \" to \" + base + \" making \" +  Uri.join(uri, base))\n    return Uri.join(uri, base) // @@ normalize?\n  }\n\n  setContext (node) {\n    // We only recognized XHTML+RDFa 1.1 if the version is set propertyly\n    if (node.localName === 'html' && node.getAttribute('version') === 'XHTML+RDFa 1.1') {\n      this.setXHTMLContext()\n    } else if (node.localName === 'html' || node.namespaceURI === 'http://www.w3.org/1999/xhtml') {\n      if (typeof document !== 'undefined' && document.doctype) {\n        if (document.doctype.publicId === '-//W3C//DTD XHTML+RDFa 1.0//EN' && document.doctype.systemId === 'http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd') {\n          console.log('WARNING: RDF 1.0 is not supported.  Defaulting to HTML5 mode.')\n          this.setHTMLContext()\n        } else if (document.doctype.publicId === '-//W3C//DTD XHTML+RDFa 1.1//EN' && document.doctype.systemId === 'http://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd') {\n          this.setXHTMLContext()\n        } else {\n          this.setHTMLContext()\n        }\n      } else {\n        this.setHTMLContext()\n      }\n    } else {\n      this.setXMLContext()\n    }\n  }\n\n  setHTMLContext () {\n    this.setInitialContext()\n    this.langAttributes = [\n      {\n        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n        localName: 'lang'\n      },\n      { namespaceURI: null, localName: 'lang' }\n    ]\n    this.inXHTMLMode = false\n    this.inHTMLMode = true\n  }\n\n  setInitialContext () {\n    this.vocabulary = null\n    // By default, the prefixes are terms are loaded to the RDFa 1.1. standard within the graph constructor\n    this.langAttributes = [\n      {\n        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n        localName: 'lang'\n      }\n    ]\n  }\n\n  setXHTMLContext () {\n    this.setInitialContext()\n    this.inXHTMLMode = true\n    this.inHTMLMode = false\n    this.langAttributes = [\n      {\n        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n        localName: 'lang' },\n      { namespaceURI: null, localName: 'lang' }\n    ]\n    // From http://www.w3.org/2011/rdfa-context/xhtml-rdfa-1.1\n    this.target.graph.terms['alternate'] = 'http://www.w3.org/1999/xhtml/vocab#alternate'\n    this.target.graph.terms['appendix'] = 'http://www.w3.org/1999/xhtml/vocab#appendix'\n    this.target.graph.terms['bookmark'] = 'http://www.w3.org/1999/xhtml/vocab#bookmark'\n    this.target.graph.terms['cite'] = 'http://www.w3.org/1999/xhtml/vocab#cite'\n    this.target.graph.terms['chapter'] = 'http://www.w3.org/1999/xhtml/vocab#chapter'\n    this.target.graph.terms['contents'] = 'http://www.w3.org/1999/xhtml/vocab#contents'\n    this.target.graph.terms['copyright'] = 'http://www.w3.org/1999/xhtml/vocab#copyright'\n    this.target.graph.terms['first'] = 'http://www.w3.org/1999/xhtml/vocab#first'\n    this.target.graph.terms['glossary'] = 'http://www.w3.org/1999/xhtml/vocab#glossary'\n    this.target.graph.terms['help'] = 'http://www.w3.org/1999/xhtml/vocab#help'\n    this.target.graph.terms['icon'] = 'http://www.w3.org/1999/xhtml/vocab#icon'\n    this.target.graph.terms['index'] = 'http://www.w3.org/1999/xhtml/vocab#index'\n    this.target.graph.terms['last'] = 'http://www.w3.org/1999/xhtml/vocab#last'\n    this.target.graph.terms['license'] = 'http://www.w3.org/1999/xhtml/vocab#license'\n    this.target.graph.terms['meta'] = 'http://www.w3.org/1999/xhtml/vocab#meta'\n    this.target.graph.terms['next'] = 'http://www.w3.org/1999/xhtml/vocab#next'\n    this.target.graph.terms['prev'] = 'http://www.w3.org/1999/xhtml/vocab#prev'\n    this.target.graph.terms['previous'] = 'http://www.w3.org/1999/xhtml/vocab#previous'\n    this.target.graph.terms['section'] = 'http://www.w3.org/1999/xhtml/vocab#section'\n    this.target.graph.terms['stylesheet'] = 'http://www.w3.org/1999/xhtml/vocab#stylesheet'\n    this.target.graph.terms['subsection'] = 'http://www.w3.org/1999/xhtml/vocab#subsection'\n    this.target.graph.terms['start'] = 'http://www.w3.org/1999/xhtml/vocab#start'\n    this.target.graph.terms['top'] = 'http://www.w3.org/1999/xhtml/vocab#top'\n    this.target.graph.terms['up'] = 'http://www.w3.org/1999/xhtml/vocab#up'\n    this.target.graph.terms['p3pv1'] = 'http://www.w3.org/1999/xhtml/vocab#p3pv1'\n    // other\n    this.target.graph.terms['related'] = 'http://www.w3.org/1999/xhtml/vocab#related'\n    this.target.graph.terms['role'] = 'http://www.w3.org/1999/xhtml/vocab#role'\n    this.target.graph.terms['transformation'] = 'http://www.w3.org/1999/xhtml/vocab#transformation'\n  }\n\n  setXMLContext () {\n    this.setInitialContext()\n    this.inXHTMLMode = false\n    this.inHTMLMode = false\n  }\n\n  tokenize (str) {\n    return this.trim(str).split(/\\s+/)\n  }\n  static tokenize (str) {\n    return this.trim(str).split(/\\s+/)\n  }\n\n  toRDFNodeObject (x) {\n    if (typeof x === 'undefined') return undefined\n    if (typeof x === 'string') {\n      if (x.substring(0, 2) === '_:') {\n        if (typeof this.blankNodes[x.substring(2)] === 'undefined') {\n          this.blankNodes[x.substring(2)] = new BlankNode(x.substring(2))\n        }\n        return this.blankNodes[x.substring(2)]\n      }\n      return rdf.namedNode(x)\n    }\n    switch (x.type) {\n      case RDFaProcessor.objectURI:\n        if (x.value.substring(0, 2) === '_:') {\n          if (typeof this.blankNodes[x.value.substring(2)] === 'undefined') {\n            this.blankNodes[x.value.substring(2)] = new BlankNode(x.value.substring(2))\n          }\n          return this.blankNodes[x.value.substring(2)]\n        }\n        return rdf.namedNode(x.value)\n      case RDFaProcessor.PlainLiteralURI:\n        return new Literal(x.value, x.language || '')\n      case RDFaProcessor.XMLLiteralURI:\n      case RDFaProcessor.HTMLLiteralURI:\n        var string = ''\n        Object.keys(x.value).forEach(i => {\n          string += Util.domToString(x.value[i], this.htmlOptions)\n        })\n        return new Literal(string, '', new NamedNode(x.type))\n      default:\n        return new Literal(x.value, '', new NamedNode(x.type))\n    }\n  }\n\n  trim (str) {\n    return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '')\n  }\n  static trim (str) {\n    return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '')\n  }\n}\n\nRDFaProcessor.XMLLiteralURI =\n  'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral'\nRDFaProcessor.HTMLLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML'\nRDFaProcessor.PlainLiteralURI =\n  'http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral'\nRDFaProcessor.objectURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#object'\nRDFaProcessor.typeURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'\nRDFaProcessor.nameChar =\n  '[-A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u10000-\\uEFFFF\\.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]'\nRDFaProcessor.nameStartChar =\n  '[\\u0041-\\u005A\\u0061-\\u007A\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF\\u0100-\\u0131\\u0134-\\u013E\\u0141-\\u0148\\u014A-\\u017E\\u0180-\\u01C3\\u01CD-\\u01F0\\u01F4-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02BB-\\u02C1\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7-\\u04C8\\u04CB-\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8-\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0586\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0641-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5-\\u06E6\\u0905-\\u0939\\u093D\\u0958-\\u0961\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AE0\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60-\\u0D61\\u0E01-\\u0E2E\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EAE\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0F40-\\u0F47\\u0F49-\\u0F69\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100\\u1102-\\u1103\\u1105-\\u1107\\u1109\\u110B-\\u110C\\u110E-\\u1112\\u113C\\u113E\\u1140\\u114C\\u114E\\u1150\\u1154-\\u1155\\u1159\\u115F-\\u1161\\u1163\\u1165\\u1167\\u1169\\u116D-\\u116E\\u1172-\\u1173\\u1175\\u119E\\u11A8\\u11AB\\u11AE-\\u11AF\\u11B7-\\u11B8\\u11BA\\u11BC-\\u11C2\\u11EB\\u11F0\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A-\\u212B\\u212E\\u2180-\\u2182\\u3041-\\u3094\\u30A1-\\u30FA\\u3105-\\u312C\\uAC00-\\uD7A3\\u4E00-\\u9FA5\\u3007\\u3021-\\u3029_]'\nRDFaProcessor.NCNAME = new RegExp('^' + RDFaProcessor.nameStartChar +\n  RDFaProcessor.nameChar + '*$')\n\n/*\nRDFaProcessor.prototype.resolveAndNormalize = function(base,href) {\n   var u = base.resolve(href)\n   var parsed = this.parseURI(u)\n   parsed.normalize()\n   return parsed.spec\n}\n*/\n\nRDFaProcessor.dateTimeTypes = [\n  { pattern: /-?P(?:[0-9]+Y)?(?:[0-9]+M)?(?:[0-9]+D)?(?:T(?:[0-9]+H)?(?:[0-9]+M)?(?:[0-9]+(?:\\.[0-9]+)?S)?)?/,\n    type: 'http://www.w3.org/2001/XMLSchema#duration' },\n  { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]-[0-9][0-9]T(?:[0-1][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9](?:\\.[0-9]+)?(?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n    type: 'http://www.w3.org/2001/XMLSchema#dateTime' },\n  { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]-[0-9][0-9](?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n    type: 'http://www.w3.org/2001/XMLSchema#date' },\n  { pattern: /(?:[0-1][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9](?:\\.[0-9]+)?(?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n    type: 'http://www.w3.org/2001/XMLSchema#time' },\n  { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]/,\n    type: 'http://www.w3.org/2001/XMLSchema#gYearMonth' },\n  { pattern: /-?[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9]/,\n    type: 'http://www.w3.org/2001/XMLSchema#gYear' }\n]\n\nconst parseRDFaDOM = RDFaProcessor.parseRDFaDOM\nexport { parseRDFaDOM }\n","// Matching a formula against another formula\n// Assync as well as Synchronously\n//\n// W3C open source licence 2005.\n//\n// This builds on term.js, match.js (and identity.js?)\n// to allow a query of a formula.\n//\n// Here we introduce for the first time a subclass of term: variable.\n//\n// SVN ID: $Id: query.js 25116 2008-11-15 16:13:48Z timbl $\n\n//  Variable\n//\n// Compare with BlankNode.  They are similar, but a variable\n// stands for something whose value is to be returned.\n// Also, users name variables and want the same name back when stuff is printed\n/* jsl:option explicit */ // Turn on JavaScriptLint variable declaration checking\n\nimport IndexedFormula  from './store'\nimport { defaultGraphURI as defaultDocumentURI } from './utils/default-graph-uri'\nimport log from './log'\nimport { docpart } from './uri'\n\n/**\n * Query class, for tracking queries the user has in the UI.\n */\nexport class Query {\n  constructor (name, id) {\n    this.pat = new IndexedFormula() // The pattern to search for\n    this.vars = [] // Used by UI code but not in query.js\n    //    this.orderBy = [] // Not used yet\n    this.name = name\n    this.id = id\n  }\n}\n\n/**\n * This function will match a pattern to the current Store\n *\n * The callback function is called whenever a match is found\n * When fetcher is supplied this will be called to load from the web\n * any new nodes as they are discovered.  This will cause the query to traverse the\n * graph of linked data, sometimes called \"Link Following Query\"\n *\n * @param myQuery - a knowledgebase containing a pattern to use as query\n * @param callback - whenever the pattern in myQuery is met this is called with\n *  the new bindings as parameter\n * @param fetcher? - If and only if,  you want link following, give a fetcher\n *                which has been created for the quadstore being queried.\n * @param onDone -  callback when query finished\n */\nexport function indexedFormulaQuery (myQuery, callback, fetcher, onDone) {\n  /** Debug strings\n  */\n  function bindingDebug (b) {\n    var str = ''\n    var v\n    for (v in b) {\n      if (b.hasOwnProperty(v)) {\n        str += '    ' + v + ' -> ' + b[v]\n      }\n    }\n    return str\n  }\n\n  function bindingsDebug (nbs) {\n    var str = 'Bindings: '\n    var i\n    var n = nbs.length\n    for (i = 0; i < n; i++) {\n      str += bindingDebug(nbs[i][0]) + ';\\n\\t'\n    }\n    return str\n  } // bindingsDebug\n\n  /** Unification\n   *\n   * Unification finds all bindings such that when the binding is applied\n   * to one term it is equal to the other.\n   * @returns {Arrray}-  a list of bindings, where a binding is an associative array\n   *  mapping variuable to value.\n   */\n  function unifyTerm (self, other, bindings, formula) {\n    var actual = bindings[self]\n    if (actual === undefined) { // Not mapped\n      if (self.isVar) {\n        var b = []\n        b[self] = other\n        return [[ b, null ]] // Match\n      }\n      actual = self\n    }\n    if (!actual.complexType) {\n      if (formula.redirections[actual]) {\n        actual = formula.redirections[actual]\n      }\n      if (formula.redirections[other]) {\n        other = formula.redirections[other]\n      }\n      if (actual.equals(other) || (actual.uri && actual.uri === defaultDocumentURI)) { // Used to mean 'any graph' in a query\n        return [[ [], null ]]\n      }\n      return []\n    }\n    if (self instanceof Array) {\n      if (!(other instanceof Array)) {\n        return []\n      }\n      return unifyContents(self, other, bindings)\n    }\n    throw new Error('query.js: oops - code not written yet')\n  // return undefined;  // for lint - no jslint objects to unreachables\n  //    return actual.unifyContents(other, bindings)\n  } // unifyTerm\n\n  function unifyContents (self, other, bindings, formula) {\n    var nbs2\n    if (self.length !== other.length) {\n      return [] // no way\n    }\n    if (!self.length) {\n      return [[ [], null ]] // Success\n    }\n    var nbs = unifyTerm(self[0], other[0], bindings, formula)\n    if (nbs.length === 0) {\n      return nbs\n    }\n    var res = []\n    var i\n    var n = nbs.length\n    var nb\n    var j\n    var m\n    var v\n    var nb2\n    var bindings2\n    for (i = 0; i < n; i++) { // for each possibility from the first term\n      nb = nbs[i][0] // new bindings\n      bindings2 = []\n      for (v in nb) {\n        if (nb.hasOwnProperty(v)) {\n          bindings2[v] = nb[v] // copy\n        }\n      }\n      for (v in bindings) {\n        if (bindings.hasOwnProperty(v)) {\n          bindings2[v] = bindings[v] // copy\n        }\n      }\n      nbs2 = unifyContents(self.slice(1), other.slice(1), bindings2, formula)\n      m = nbs2.length\n      for (j = 0; j < m; j++) {\n        nb2 = nbs2[j][0] // @@@@ no idea whether this is used or right\n        for (v in nb) {\n          if (nb.hasOwnProperty(v)) {\n            nb2[v] = nb[v]\n          }\n        }\n        res.push([nb2, null])\n      }\n    }\n    return res\n  } // unifyContents\n\n  //  Matching\n  //\n  // Matching finds all bindings such that when the binding is applied\n  // to one term it is equal to the other term.  We only match formulae.\n\n  /** if x is not in the bindings array, return the var; otherwise, return the bindings **/\n  function bind (x, binding) {\n    var y = binding[x]\n    if (y === undefined) {\n      return x\n    }\n    return y\n  }\n\n  // When there are OPTIONAL clauses, we must return bindings without them if none of them\n  // succeed. However, if any of them do succeed, we should not.  (This is what branchCount()\n  // tracked. The problem currently is (2011/7) that when several optionals exist, and they\n  // all match, multiple sets of bindings are returned, each with one optional filled in.)\n\n  function union (a, b) {\n    var c = {}\n    var x\n    for (x in a) {\n      if (a.hasOwnProperty(x)) {\n        c[x] = a[x]\n      }\n    }\n    for (x in b) {\n      if (b.hasOwnProperty(x)) {\n        c[x] = b[x]\n      }\n    }\n    return c\n  }\n\n  function OptionalBranchJunction (originalCallback, trunkBindings) {\n    this.trunkBindings = trunkBindings\n    this.originalCallback = originalCallback\n    this.branches = []\n    // this.results = []; // result[i] is an array of bindings for branch i\n    // this.done = {};  // done[i] means all/any results are in for branch i\n    // this.count = {}\n    return this\n  }\n\n  OptionalBranchJunction.prototype.checkAllDone = function () {\n    var i\n    for (i = 0; i < this.branches.length; i++) {\n      if (!this.branches[i].done) {\n        return\n      }\n    }\n    log.debug('OPTIONAL BIDNINGS ALL DONE:')\n    this.doCallBacks(this.branches.length - 1, this.trunkBindings)\n  }\n  // Recrursively generate the cross product of the bindings\n  OptionalBranchJunction.prototype.doCallBacks = function (b, bindings) {\n    var j\n    if (b < 0) {\n      return this.originalCallback(bindings)\n    }\n    for (j = 0; j < this.branches[b].results.length; j++) {\n      this.doCallBacks(b - 1, union(bindings, this.branches[b].results[j]))\n    }\n  }\n\n  // A mandatory branch is the normal one, where callbacks\n  // are made immediately and no junction is needed.\n  // Might be useful for onFinsihed callback for query API.\n  function MandatoryBranch (callback, onDone) {\n    this.count = 0\n    this.success = false\n    this.done = false\n    // this.results = []\n    this.callback = callback\n    this.onDone = onDone\n    // this.junction = junction\n    // junction.branches.push(this)\n    return this\n  }\n\n  MandatoryBranch.prototype.reportMatch = function (bindings) {\n    // log.error(\"@@@@ query.js 1\"); // @@\n    this.callback(bindings)\n    this.success = true\n  }\n\n  MandatoryBranch.prototype.reportDone = function () {\n    this.done = true\n    log.info('Mandatory query branch finished.***')\n    if (this.onDone !== undefined) {\n      this.onDone()\n    }\n  }\n\n  // An optional branch hoards its results.\n  var OptionalBranch = function (junction) {\n    this.count = 0\n    this.done = false\n    this.results = []\n    this.junction = junction\n    junction.branches.push(this)\n    return this\n  }\n\n  OptionalBranch.prototype.reportMatch = function (bindings) {\n    this.results.push(bindings)\n  }\n\n  OptionalBranch.prototype.reportDone = function () {\n    log.debug('Optional branch finished - results.length = ' + this.results.length)\n    if (this.results.length === 0) { // This is what optional means: if no hits,\n      this.results.push({}) // mimic success, but with no bindings\n      log.debug(\"Optional branch FAILED - that's OK.\")\n    }\n    this.done = true\n    this.junction.checkAllDone()\n  }\n\n  /** prepare -- sets the index of the item to the possible matches\n   * @param f - formula\n   * @param item - an Statement, possibly w/ vars in it\n   * @param bindings - Bindings so far\n   * @returns false if the query fails -- there are no items that match\n  */\n  function prepare (f, item, bindings) {\n    var terms, termIndex, i, ind\n    item.nvars = 0\n    item.index = null\n    // if (!f.statements) log.warn(\"@@@ prepare: f is \"+f)\n    //    log.debug(\"Prepare: f has \"+ f.statements.length)\n    // log.debug(\"Prepare: Kb size \"+f.statements.length+\" Preparing \"+item)\n\n    terms = [item.subject, item.predicate, item.object, item.why]\n    ind = [f.subjectIndex, f.predicateIndex, f.objectIndex, f.whyIndex]\n    for (i = 0; i < 4; i++) {\n      let t = terms[i]\n      // console.log(\"  Prepare (\" + t + \") \"+(t in bindings))\n      if (t.uri && t.uri === defaultDocumentURI) { // chrome:session\n        // console.log('     query: Ignoring slot ' + i)\n      } else if (t.isVar && !(bindings[t] !== undefined)) {\n        item.nvars++\n      } else {\n        t = bind(terms[i], bindings) // returns the RDF binding if bound, otherwise itself\n        // if (terms[i]!=bind(terms[i],bindings) alert(\"Term: \"+terms[i]+\"Binding: \"+bind(terms[i], bindings))\n        if (f.redirections[f.id(t)]) {\n          t = f.redirections[f.id(t)] // redirect\n        }\n        termIndex = ind[i][f.id(t)]\n\n        if (!termIndex) {\n          item.index = []\n          return false // Query line cannot match\n        }\n        if ((item.index === null) || (item.index.length > termIndex.length)) { // Find smallest index\n          item.index = termIndex\n        }\n      }\n    }\n\n    if (item.index === null) { // All 4 are variables?\n      item.index = f.statements\n    }\n    return true\n  } // prepare\n\n  /** sorting function -- negative if self is easier **/\n  // We always prefer to start with a URI to be able to browse a graph\n  // this is why we put off items with more variables till later.\n  function easiestQuery (self, other) {\n    if (self.nvars !== other.nvars) {\n      return self.nvars - other.nvars\n    }\n    return self.index.length - other.index.length\n  }\n\n  var matchIndex = 0 // index\n  /** matches a pattern formula against the knowledge base, e.g. to find matches for table-view\n  *\n  * @param f - knowledge base formula\n  * @param g - pattern formula (may have vars)\n  * @param bindingsSoFar  - bindings accumulated in matching to date\n  * @param level - spaces to indent stuff also lets you know what level of recursion you're at\n  * @param fetcher - function (term, requestedBy) If you want link following\n  * @param localCallback - function(bindings, pattern, branch) called on sucess\n  * @returns nothing\n  *\n  * Will fetch linked data from the web iff the knowledge base an associated source fetcher (f.fetcher)\n  ***/\n  var match = function (f, g, bindingsSoFar, level, fetcher, localCallback, branch) {\n    log.debug('Match begins, Branch count now: ' + branch.count + ' for ' + branch.pattern_debug)\n\n    // log.debug(\"match: f has \"+f.statements.length+\", g has \"+g.statements.length)\n    var pattern = g.statements\n    if (pattern.length === 0) { // when it's satisfied all the pattern triples\n      log.debug('FOUND MATCH WITH BINDINGS:' + bindingDebug(bindingsSoFar))\n      if (g.optional.length === 0) {\n        branch.reportMatch(bindingsSoFar)\n      } else {\n        log.debug('OPTIONAL: ' + g.optional)\n        var junction = new OptionalBranchJunction(callback, bindingsSoFar) // @@ won't work with nested optionals? nest callbacks\n        var br = []\n        var b\n        for (b = 0; b < g.optional.length; b++) {\n          br[b] = new OptionalBranch(junction) // Allocate branches to prevent premature ending\n          br[b].pattern_debug = g.optional[b] // for diagnotics only\n        }\n        for (b = 0; b < g.optional.length; b++) {\n          br[b].count = br[b].count + 1 // Count how many matches we have yet to complete\n          match(f, g.optional[b], bindingsSoFar, '', fetcher, callback, br[b])\n        }\n      }\n      branch.count--\n      log.debug('Match ends -- success , Branch count now: ' + branch.count + ' for ' + branch.pattern_debug)\n      return // Success\n    }\n\n    var item\n    var i\n    var n = pattern.length\n    // log.debug(level + \"Match \"+n+\" left, bs so far:\"+bindingDebug(bindingsSoFar))\n\n    // Follow links from variables in query\n    if (fetcher) { // Fetcher is used to fetch URIs, function first term is a URI term, second is the requester\n      var id = 'match' + matchIndex++\n      var fetchResource = function (requestedTerm, id) {\n        var docuri = requestedTerm.uri.split('#')[0]\n        fetcher.nowOrWhenFetched(docuri, undefined, function (ok, body, xhr) {\n          if (!ok) {\n            console.log('Error following link to <' + requestedTerm.uri + '> in query: ' + body)\n          }\n          match(f, g, bindingsSoFar, level, fetcher, // match not match2 to look up any others necessary.\n            localCallback, branch)\n        })\n      }\n      for (i = 0; i < n; i++) {\n        item = pattern[i] // for each of the triples in the query\n        if (bindingsSoFar[item.subject] !== undefined &&\n            bindingsSoFar[item.subject].uri && fetcher &&\n            fetcher.getState(docpart(bindingsSoFar[item.subject].uri)) === 'unrequested') {\n          // fetch the subject info and return to id\n          fetchResource(bindingsSoFar[item.subject], id)\n          return // only look up one per line this time, but we will come back again though match\n        }\n        if (bindingsSoFar[item.object] !== undefined &&\n            bindingsSoFar[item.object].uri && fetcher &&\n            fetcher.getState(docpart(bindingsSoFar[item.object].uri)) === 'unrequested') {\n          fetchResource(bindingsSoFar[item.object], id)\n          return\n        }\n      }\n    } // if fetcher\n    match2(f, g, bindingsSoFar, level, fetcher, localCallback, branch)\n  } // match\n\n  var constraintsSatisfied = function (bindings, constraints) {\n    var res = true\n    var x\n    var test\n    for (x in bindings) {\n      if (bindings.hasOwnProperty(x)) {\n        if (constraints[x]) {\n          test = constraints[x].test\n          if (test && !test(bindings[x])) {\n            res = false\n          }\n        }\n      }\n    }\n    return res\n  }\n\n  /** match2 -- stuff after the fetch **/\n  var match2 = function (f, g, bindingsSoFar, level, fetcher, callback, branch) { // post fetch\n    var pattern = g.statements\n    var n = pattern.length\n    var i\n    var k\n    var nk\n    var v\n    var bindings2\n    var newBindings1\n    var item\n    for (i = 0; i < n; i++) { // For each statement left in the query, run prepare\n      item = pattern[i]\n      // log.info('match2: item=' + item + ', bindingsSoFar=' + bindingDebug(bindingsSoFar))\n      prepare(f, item, bindingsSoFar)\n      // if (item.index) console.log('     item.index.length ' + item.index.length)\n    }\n    pattern.sort(easiestQuery)\n    item = pattern[0]\n    // log.debug(\"Sorted pattern:\\n\"+pattern)\n    var rest = f.formula()\n    rest.optional = g.optional\n    rest.constraints = g.constraints\n    rest.statements = pattern.slice(1) // No indexes: we will not query g.\n    log.debug(level + 'match2 searching ' + item.index.length + ' for ' + item +\n      '; bindings so far=' + bindingDebug(bindingsSoFar))\n    // var results = []\n    var c\n    var nc = item.index.length\n    var nbs1\n    var st\n    var onward = 0\n    // var x\n    for (c = 0; c < nc; c++) { // For each candidate statement\n      st = item.index[c] // for each statement in the item's index, spawn a new match with that binding\n      nbs1 = unifyContents(\n        [item.subject, item.predicate, item.object, item.why],\n        [st.subject, st.predicate, st.object, st.why], bindingsSoFar, f)\n      log.info(level + ' From first: ' + nbs1.length + ': ' + bindingsDebug(nbs1))\n      nk = nbs1.length\n      // branch.count += nk\n      // log.debug(\"Branch count bumped \"+nk+\" to: \"+branch.count)\n      for (k = 0; k < nk; k++) { // For each way that statement binds\n        bindings2 = []\n        newBindings1 = nbs1[k][0]\n        if (!constraintsSatisfied(newBindings1, g.constraints)) {\n          // branch.count--\n          log.debug('Branch count CS: ' + branch.count)\n        } else {\n          for (v in newBindings1) {\n            if (newBindings1.hasOwnProperty(v)) {\n              bindings2[v] = newBindings1[v] // copy\n            }\n          }\n          for (v in bindingsSoFar) {\n            if (bindingsSoFar.hasOwnProperty(v)) {\n              bindings2[v] = bindingsSoFar[v] // copy\n            }\n          }\n\n          branch.count++ // Count how many matches we have yet to complete\n          onward++\n          match(f, rest, bindings2, level + '  ', fetcher, callback, branch) // call match\n        }\n      }\n    }\n    branch.count--\n    if (onward === 0) {\n      log.debug('Match2 fails completely on ' + item)\n    }\n    log.debug('Match2 ends, Branch count: ' + branch.count + ' for ' + branch.pattern_debug)\n    if (branch.count === 0) {\n      log.debug('Branch finished.')\n      branch.reportDone()\n    }\n  } // match2\n  // ////////////////////////// Body of query()  ///////////////////////\n  var f = this\n  log.debug('Query on ' + this.statements.length)\n  var trunck = new MandatoryBranch(callback, onDone)\n  trunck.count++ // count one branch to complete at the moment\n  if (myQuery.sync) {\n    match(f, myQuery.pat, myQuery.pat.initBindings, '', fetcher, callback, trunck)\n  } else { // Give up thread: Allow other activities to run\n    setTimeout(function () {\n      match(f, myQuery.pat, myQuery.pat.initBindings, '', fetcher, callback, trunck)\n    }, 0)\n  }\n\n   // returns nothing; callback does the work\n} // query\n","import Node from './node-internal'\nimport { DefaultGraphTermType } from './types'\nimport { DefaultGraph as TFDefaultGraph } from './tf-types'\nimport { defaultGraphURI } from './utils/default-graph-uri'\n\n/** The RDF default graph */\nexport default class DefaultGraph extends Node implements TFDefaultGraph {\n  value: '' = '';\n  termType: typeof DefaultGraphTermType = DefaultGraphTermType;\n  uri = defaultGraphURI\n\n  constructor () {\n    super('')\n  }\n\n  toCanonical () {\n    return this.value\n  }\n\n  toString () {\n    return 'DefaultGraph';\n  }\n}\n\nexport function isDefaultGraph(object: any): object is DefaultGraph {\n  return !!object && object.termType === DefaultGraphTermType;\n}\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isAbsolute: _isAbsoluteIri,\n  isRelative: _isRelativeIri,\n  prependBase\n} = require('./url');\n\nconst {\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst INITIAL_CONTEXT_CACHE = new Map();\nconst INITIAL_CONTEXT_CACHE_MAX_SIZE = 10000;\nconst KEYWORD_PATTERN = /^@[a-zA-Z]+$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n * @param propagate `true` if `false`, retains any previously defined term,\n *   which can be rolled back when the descending into a new node object.\n * @param overrideProtected `false` allows protected terms to be modified.\n *\n * @return a Promise that resolves to the new active context.\n */\napi.process = async ({\n  activeCtx, localCtx, options,\n  propagate = true,\n  overrideProtected = false,\n  cycles = new Set()\n}) => {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  const ctxs = _asArray(localCtx);\n\n  // no contexts in array, return current active context w/o changes\n  if(ctxs.length === 0) {\n    return activeCtx;\n  }\n\n  // resolve contexts\n  const resolved = await options.contextResolver.resolve({\n    activeCtx,\n    context: localCtx,\n    documentLoader: options.documentLoader,\n    base: options.base\n  });\n\n  // override propagate if first resolved context has `@propagate`\n  if(_isObject(resolved[0].document) &&\n    typeof resolved[0].document['@propagate'] === 'boolean') {\n    // retrieve early, error checking done later\n    propagate = resolved[0].document['@propagate'];\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  let rval = activeCtx;\n\n  // track the previous context\n  // if not propagating, make sure rval has a previous context\n  if(!propagate && !rval.previousContext) {\n    // clone `rval` context before updating\n    rval = rval.clone();\n    rval.previousContext = activeCtx;\n  }\n\n  for(const resolvedContext of resolved) {\n    let {document: ctx} = resolvedContext;\n\n    // update active context to one computed from last iteration\n    activeCtx = rval;\n\n    // reset to initial context\n    if(ctx === null) {\n      // We can't nullify if there are protected terms and we're\n      // not allowing overrides (e.g. processing a property term scoped context)\n      if(!overrideProtected &&\n        Object.keys(activeCtx.protected).length !== 0) {\n        const protectedMode = (options && options.protectedMode) || 'error';\n        if(protectedMode === 'error') {\n          throw new JsonLdError(\n            'Tried to nullify a context with protected terms outside of ' +\n            'a term definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context nullification'});\n        } else if(protectedMode === 'warn') {\n          // FIXME: remove logging and use a handler\n          console.warn('WARNING: invalid context nullification');\n\n          // get processed context from cache if available\n          const processed = resolvedContext.getProcessed(activeCtx);\n          if(processed) {\n            rval = activeCtx = processed;\n            continue;\n          }\n\n          const oldActiveCtx = activeCtx;\n          // copy all protected term definitions to fresh initial context\n          rval = activeCtx = api.getInitialContext(options).clone();\n          for(const [term, _protected] of\n            Object.entries(oldActiveCtx.protected)) {\n            if(_protected) {\n              activeCtx.mappings[term] =\n                util.clone(oldActiveCtx.mappings[term]);\n            }\n          }\n          activeCtx.protected = util.clone(oldActiveCtx.protected);\n\n          // cache processed result\n          resolvedContext.setProcessed(oldActiveCtx, rval);\n          continue;\n        }\n        throw new JsonLdError(\n          'Invalid protectedMode.',\n          'jsonld.SyntaxError',\n          {code: 'invalid protected mode', context: localCtx, protectedMode});\n      }\n      rval = activeCtx = api.getInitialContext(options).clone();\n      continue;\n    }\n\n    // get processed context from cache if available\n    const processed = resolvedContext.getProcessed(activeCtx);\n    if(processed) {\n      rval = activeCtx = processed;\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // TODO: there is likely a `previousContext` cloning optimization that\n    // could be applied here (no need to copy it under certain conditions)\n\n    // clone context before updating it\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    const defined = new Map();\n\n    // handle @version\n    if('@version' in ctx) {\n      if(ctx['@version'] !== 1.1) {\n        throw new JsonLdError(\n          'Unsupported JSON-LD version: ' + ctx['@version'],\n          'jsonld.UnsupportedVersion',\n          {code: 'invalid @version value', context: ctx});\n      }\n      if(activeCtx.processingMode &&\n        activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          '@version: ' + ctx['@version'] + ' not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.ProcessingModeConflict',\n          {code: 'processing mode conflict', context: ctx});\n      }\n      rval.processingMode = 'json-ld-1.1';\n      rval['@version'] = ctx['@version'];\n      defined.set('@version', true);\n    }\n\n    // if not set explicitly, set processingMode to \"json-ld-1.1\"\n    rval.processingMode =\n      rval.processingMode || activeCtx.processingMode;\n\n    // handle @base\n    if('@base' in ctx) {\n      let base = ctx['@base'];\n\n      if(base === null || _isAbsoluteIri(base)) {\n        // no action\n      } else if(_isRelativeIri(base)) {\n        base = prependBase(rval['@base'], base);\n      } else {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI, a relative IRI, or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      rval['@base'] = base;\n      defined.set('@base', true);\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      const value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value) && api.processingMode(rval, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = _expandIri(rval, value, {vocab: true, base: true},\n          undefined, undefined, options);\n      }\n      defined.set('@vocab', true);\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      const value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined.set('@language', true);\n    }\n\n    // handle @direction\n    if('@direction' in ctx) {\n      const value = ctx['@direction'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @direction not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context member', context: ctx});\n      }\n      if(value === null) {\n        delete rval['@direction'];\n      } else if(value !== 'ltr' && value !== 'rtl') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@direction\" in a ' +\n          '@context must be null, \"ltr\", or \"rtl\".',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', context: ctx});\n      } else {\n        rval['@direction'] = value;\n      }\n      defined.set('@direction', true);\n    }\n\n    // handle @propagate\n    // note: we've already extracted it, here we just do error checking\n    if('@propagate' in ctx) {\n      const value = ctx['@propagate'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(typeof value !== 'boolean') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate value must be a boolean.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @propagate value', context: localCtx});\n      }\n      defined.set('@propagate', true);\n    }\n\n    // handle @import\n    if('@import' in ctx) {\n      const value = ctx['@import'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @import value', context: localCtx});\n      }\n\n      // resolve contexts\n      const resolvedImport = await options.contextResolver.resolve({\n        activeCtx,\n        context: value,\n        documentLoader: options.documentLoader,\n        base: options.base\n      });\n      if(resolvedImport.length !== 1) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must reference a single context.',\n          'jsonld.SyntaxError',\n          {code: 'invalid remote context', context: localCtx});\n      }\n      const processedImport = resolvedImport[0].getProcessed(activeCtx);\n      if(processedImport) {\n        // Note: if the same context were used in this active context\n        // as a reference context, then processed_input might not\n        // be a dict.\n        ctx = processedImport;\n      } else {\n        const importCtx = resolvedImport[0].document;\n        if('@import' in importCtx) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax: ' +\n            'imported context must not include @import.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context entry', context: localCtx});\n        }\n\n        // merge ctx into importCtx and replace rval with the result\n        for(const key in importCtx) {\n          if(!ctx.hasOwnProperty(key)) {\n            ctx[key] = importCtx[key];\n          }\n        }\n\n        // Note: this could potenially conflict if the import\n        // were used in the same active context as a referenced\n        // context and an import. In this case, we\n        // could override the cached result, but seems unlikely.\n        resolvedImport[0].setProcessed(activeCtx, ctx);\n      }\n\n      defined.set('@import', true);\n    }\n\n    // handle @protected; determine whether this sub-context is declaring\n    // all its terms to be \"protected\" (exceptions can be made on a\n    // per-definition basis)\n    defined.set('@protected', ctx['@protected'] || false);\n\n    // process all other keys\n    for(const key in ctx) {\n      api.createTermDefinition({\n        activeCtx: rval,\n        localCtx: ctx,\n        term: key,\n        defined,\n        options,\n        overrideProtected\n      });\n\n      if(_isObject(ctx[key]) && '@context' in ctx[key]) {\n        const keyCtx = ctx[key]['@context'];\n        let process = true;\n        if(_isString(keyCtx)) {\n          const url = prependBase(options.base, keyCtx);\n          // track processed contexts to avoid scoped context recursion\n          if(cycles.has(url)) {\n            process = false;\n          } else {\n            cycles.add(url);\n          }\n        }\n        // parse context to validate\n        if(process) {\n          try {\n            await api.process({\n              activeCtx: rval.clone(),\n              localCtx: ctx[key]['@context'],\n              overrideProtected: true,\n              options,\n              cycles\n            });\n          } catch(e) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; invalid scoped context.',\n              'jsonld.SyntaxError',\n              {\n                code: 'invalid scoped context',\n                context: ctx[key]['@context'],\n                term: key\n              });\n          }\n        }\n      }\n    }\n\n    // cache processed result\n    resolvedContext.setProcessed(activeCtx, rval);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n * @param {Object} [options] - creation options.\n * @param {string} [options.protectedMode=\"error\"] - \"error\" to throw error\n *   on `@protected` constraint violation, \"warn\" to allow violations and\n *   signal a warning.\n * @param overrideProtected `false` allows protected terms to be modified.\n */\napi.createTermDefinition = ({\n  activeCtx,\n  localCtx,\n  term,\n  defined,\n  options,\n  overrideProtected = false,\n}) => {\n  if(defined.has(term)) {\n    // term already defined\n    if(defined.get(term)) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term});\n  }\n\n  // now defining term\n  defined.set(term, false);\n\n  // get context term value\n  let value;\n  if(localCtx.hasOwnProperty(term)) {\n    value = localCtx[term];\n  }\n\n  if(term === '@type' &&\n     _isObject(value) &&\n     (value['@container'] || '@set') === '@set' &&\n     api.processingMode(activeCtx, 1.1)) {\n\n    const validKeys = ['@container', '@id', '@protected'];\n    const keys = Object.keys(value);\n    if(keys.length === 0 || keys.some(k => !validKeys.includes(k))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords cannot be overridden.',\n        'jsonld.SyntaxError',\n        {code: 'keyword redefinition', context: localCtx, term});\n    }\n  } else if(api.isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term});\n  } else if(term.match(KEYWORD_PATTERN)) {\n    // FIXME: remove logging and use a handler\n    console.warn('WARNING: terms beginning with \"@\" are reserved' +\n      ' for future use and ignored', {term});\n    return;\n  } else if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // keep reference to previous mapping for potential `@protected` check\n  const previousMapping = activeCtx.mappings.get(term);\n\n  // remove old mapping\n  if(activeCtx.mappings.has(term)) {\n    activeCtx.mappings.delete(term);\n  }\n\n  // convert short-hand value to object w/@id\n  let simpleTerm = false;\n  if(_isString(value) || value === null) {\n    simpleTerm = true;\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context term values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  const mapping = {};\n  activeCtx.mappings.set(term, mapping);\n  mapping.reverse = false;\n\n  // make sure term definition only has expected keywords\n  const validKeys = ['@container', '@id', '@language', '@reverse', '@type'];\n\n  // JSON-LD 1.1 support\n  if(api.processingMode(activeCtx, 1.1)) {\n    validKeys.push(\n      '@context', '@direction', '@index', '@nest', '@prefix', '@protected');\n  }\n\n  for(const kw in value) {\n    if(!validKeys.includes(kw)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a term definition must not contain ' + kw,\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  const colon = term.indexOf(':');\n  mapping._termHasColon = (colon > 0);\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    if('@nest' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @nest.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    const reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    if(!api.isKeyword(reverse) && reverse.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {reverse});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    }\n\n    // expand and add @id mapping\n    const id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined,\n      options);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    let id = value['@id'];\n    if(id && !_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id === null) {\n      // reserve a null term, which may be protected\n      mapping['@id'] = null;\n    } else if(!api.isKeyword(id) && id.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {id});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    } else if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined, options);\n      if(!_isAbsoluteIri(id) && !api.isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n\n      // if term has the form of an IRI it must map the same\n      if(term.match(/(?::[^:])|\\//)) {\n        const termDefined = new Map(defined).set(term, true);\n        const termIri = _expandIri(\n          activeCtx, term, {vocab: true, base: false},\n          localCtx, termDefined, options);\n        if(termIri !== id) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; term in form of IRI must ' +\n            'expand to definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid IRI mapping', context: localCtx});\n        }\n      }\n\n      mapping['@id'] = id;\n      // indicate if this term may be used as a compact IRI prefix\n      mapping._prefix = (simpleTerm &&\n        !mapping._termHasColon &&\n        id.match(/[:\\/\\?#\\[\\]@]$/));\n    }\n  }\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      const prefix = term.substr(0, colon);\n      if(localCtx.hasOwnProperty(prefix)) {\n        // define parent prefix\n        api.createTermDefinition({\n          activeCtx, localCtx, term: prefix, defined, options\n        });\n      }\n\n      if(activeCtx.mappings.has(prefix)) {\n        // set @id based on prefix parent\n        const suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings.get(prefix)['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else if(term === '@type') {\n      // Special case, were we've previously determined that container is @set\n      mapping['@id'] = term;\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // Handle term protection\n  if(value['@protected'] === true ||\n    (defined.get('@protected') === true && value['@protected'] !== false)) {\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n  }\n\n  // IRI mapping now defined\n  defined.set(term, true);\n\n  if('@type' in value) {\n    let type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type value must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if((type === '@json' || type === '@none')) {\n      if(api.processingMode(activeCtx, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must not be ' +\n          `\"${type}\" in JSON-LD 1.0 mode.`,\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    } else if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined,\n        options);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    // normalize container to an array form\n    const container = _isString(value['@container']) ?\n      [value['@container']] : (value['@container'] || []);\n    const validContainers = ['@list', '@set', '@index', '@language'];\n    let isValid = true;\n    const hasSet = container.includes('@set');\n\n    // JSON-LD 1.1 support\n    if(api.processingMode(activeCtx, 1.1)) {\n      validContainers.push('@graph', '@id', '@type');\n\n      // check container length\n      if(container.includes('@list')) {\n        if(container.length !== 1) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @list must ' +\n            'have no other values',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else if(container.includes('@graph')) {\n        if(container.some(key =>\n          key !== '@graph' && key !== '@id' && key !== '@index' &&\n          key !== '@set')) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @graph must ' +\n            'have no other values other than @id, @index, and @set',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else {\n        // otherwise, container may also include @set\n        isValid &= container.length <= (hasSet ? 2 : 1);\n      }\n\n      if(container.includes('@type')) {\n        // If mapping does not have an @type,\n        // set it to @id\n        mapping['@type'] = mapping['@type'] || '@id';\n\n        // type mapping must be either @id or @vocab\n        if(!['@id', '@vocab'].includes(mapping['@type'])) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; container: @type requires @type to be ' +\n            '@id or @vocab.',\n            'jsonld.SyntaxError',\n            {code: 'invalid type mapping', context: localCtx});\n        }\n      }\n    } else {\n      // in JSON-LD 1.0, container must not be an array (it must be a string,\n      // which is one of the validContainers)\n      isValid &= !_isArray(value['@container']);\n\n      // check container length\n      isValid &= container.length <= 1;\n    }\n\n    // check against valid containers\n    isValid &= container.every(c => validContainers.includes(c));\n\n    // @set not allowed with @list\n    isValid &= !(hasSet && container.includes('@list'));\n\n    if(!isValid) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: ' + validContainers.join(', '),\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n\n    if(mapping.reverse &&\n      !container.every(c => ['@index', '@set'].includes(c))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  // property indexing\n  if('@index' in value) {\n    if(!('@container' in value) || !mapping['@container'].includes('@index')) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index without @index in @container: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(!_isString(value['@index']) || value['@index'].indexOf('@') === 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index must expand to an IRI: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    mapping['@index'] = value['@index'];\n  }\n\n  // scoped contexts\n  if('@context' in value) {\n    mapping['@context'] = value['@context'];\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    let language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // term may be used as a prefix\n  if('@prefix' in value) {\n    if(term.match(/:|\\//)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @prefix used on a compact IRI term',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(api.isKeyword(mapping['@id'])) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords may not be used as prefixes',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(typeof value['@prefix'] === 'boolean') {\n      mapping._prefix = value['@prefix'] === true;\n    } else {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context value for @prefix must be boolean',\n        'jsonld.SyntaxError',\n        {code: 'invalid @prefix value', context: localCtx});\n    }\n  }\n\n  if('@direction' in value) {\n    const direction = value['@direction'];\n    if(direction !== null && direction !== 'ltr' && direction !== 'rtl') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @direction value must be ' +\n        'null, \"ltr\", or \"rtl\".',\n        'jsonld.SyntaxError',\n        {code: 'invalid base direction', context: localCtx});\n    }\n    mapping['@direction'] = direction;\n  }\n\n  if('@nest' in value) {\n    const nest = value['@nest'];\n    if(!_isString(nest) || (nest !== '@nest' && nest.indexOf('@') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @nest value must be ' +\n        'a string which is not a keyword other than @nest.',\n        'jsonld.SyntaxError',\n        {code: 'invalid @nest value', context: localCtx});\n    }\n    mapping['@nest'] = nest;\n  }\n\n  // disallow aliasing @context and @preserve\n  const id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n\n  // Check for overriding protected terms\n  if(previousMapping && previousMapping.protected && !overrideProtected) {\n    // force new term to continue to be protected and see if the mappings would\n    // be equal\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n    if(!_deepCompare(previousMapping, mapping)) {\n      const protectedMode = (options && options.protectedMode) || 'error';\n      if(protectedMode === 'error') {\n        throw new JsonLdError(\n          `Invalid JSON-LD syntax; tried to redefine \"${term}\" which is a ` +\n          'protected term.',\n          'jsonld.SyntaxError',\n          {code: 'protected term redefinition', context: localCtx, term});\n      } else if(protectedMode === 'warn') {\n        // FIXME: remove logging and use a handler\n        console.warn('WARNING: protected term redefinition', {term});\n        return;\n      }\n      throw new JsonLdError(\n        'Invalid protectedMode.',\n        'jsonld.SyntaxError',\n        {code: 'invalid protected mode', context: localCtx, term,\n          protectedMode});\n    }\n  }\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\napi.expandIri = (activeCtx, value, relativeTo, options) => {\n  return _expandIri(activeCtx, value, relativeTo, undefined, undefined,\n    options);\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined, options) {\n  // already expanded\n  if(value === null || !_isString(value) || api.isKeyword(value)) {\n    return value;\n  }\n\n  // ignore non-keyword things that look like a keyword\n  if(value.match(KEYWORD_PATTERN)) {\n    return null;\n  }\n\n  // define term dependency if not defined\n  if(localCtx && localCtx.hasOwnProperty(value) &&\n    defined.get(value) !== true) {\n    api.createTermDefinition({\n      activeCtx, localCtx, term: value, defined, options\n    });\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    const mapping = activeCtx.mappings.get(value);\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(_isObject(mapping) && '@id' in mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  const colon = value.indexOf(':');\n  if(colon > 0) {\n    const prefix = value.substr(0, colon);\n    const suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && localCtx.hasOwnProperty(prefix)) {\n      api.createTermDefinition({\n        activeCtx, localCtx, term: prefix, defined, options\n      });\n    }\n\n    // use mapping if prefix is defined\n    const mapping = activeCtx.mappings.get(prefix);\n    if(mapping && mapping._prefix) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    if(_isAbsoluteIri(value)) {\n      return value;\n    }\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  if(relativeTo.base && '@base' in activeCtx) {\n    if(activeCtx['@base']) {\n      // The null case preserves value as potentially relative\n      return prependBase(prependBase(options.base, activeCtx['@base']), value);\n    }\n  } else if(relativeTo.base) {\n    return prependBase(options.base, value);\n  }\n\n  return value;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\napi.getInitialContext = options => {\n  const key = JSON.stringify({processingMode: options.processingMode});\n  const cached = INITIAL_CONTEXT_CACHE.get(key);\n  if(cached) {\n    return cached;\n  }\n\n  const initialContext = {\n    processingMode: options.processingMode,\n    mappings: new Map(),\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext,\n    revertToPreviousContext: _revertToPreviousContext,\n    protected: {}\n  };\n  // TODO: consider using LRU cache instead\n  if(INITIAL_CONTEXT_CACHE.size === INITIAL_CONTEXT_CACHE_MAX_SIZE) {\n    // clear whole cache -- assumes scenario where the cache fills means\n    // the cache isn't being used very efficiently anyway\n    INITIAL_CONTEXT_CACHE.clear();\n  }\n  INITIAL_CONTEXT_CACHE.set(key, initialContext);\n  return initialContext;\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    const activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    const inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    const fastCurieMap = activeCtx.fastCurieMap = {};\n    const irisToTerms = {};\n\n    // handle default language\n    const defaultLanguage = (activeCtx['@language'] || '@none').toLowerCase();\n\n    // handle default direction\n    const defaultDirection = activeCtx['@direction'];\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    const mappings = activeCtx.mappings;\n    const terms = [...mappings.keys()].sort(_compareShortestLeast);\n    for(const term of terms) {\n      const mapping = mappings.get(term);\n      if(mapping === null) {\n        continue;\n      }\n\n      let container = mapping['@container'] || '@none';\n      container = [].concat(container).sort().join('');\n\n      if(mapping['@id'] === null) {\n        continue;\n      }\n      // iterate over every IRI in the mapping\n      const ids = _asArray(mapping['@id']);\n      for(const iri of ids) {\n        let entry = inverse[iri];\n        const isKeyword = api.isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            const fastCurieEntry = {iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {},\n            '@any': {}\n          };\n        }\n        entry = entry[container];\n        _addPreferredTerm(term, entry['@any'], '@none');\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(term, entry['@type'], '@reverse');\n        } else if(mapping['@type'] === '@none') {\n          _addPreferredTerm(term, entry['@any'], '@none');\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping && '@direction' in mapping) {\n          // term is preferred for values using specific language and direction\n          const language = mapping['@language'];\n          const direction = mapping['@direction'];\n          if(language && direction) {\n            _addPreferredTerm(term, entry['@language'],\n              `${language}_${direction}`.toLowerCase());\n          } else if(language) {\n            _addPreferredTerm(term, entry['@language'], language.toLowerCase());\n          } else if(direction) {\n            _addPreferredTerm(term, entry['@language'], `_${direction}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@null');\n          }\n        } else if('@language' in mapping) {\n          _addPreferredTerm(term, entry['@language'],\n            (mapping['@language'] || '@null').toLowerCase());\n        } else if('@direction' in mapping) {\n          if(mapping['@direction']) {\n            _addPreferredTerm(term, entry['@language'],\n              `_${mapping['@direction']}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@none');\n          }\n        } else if(defaultDirection) {\n          _addPreferredTerm(term, entry['@language'], `_${defaultDirection}`);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else {\n          // add entries for no type and no language\n          _addPreferredTerm(term, entry['@language'], defaultLanguage);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(const key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    const entries = iriMap[key];\n    const next = iriMap[key] = {};\n\n    let iri;\n    let letter;\n    for(const entry of entries) {\n      iri = entry.iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entry);\n      } else {\n        next[letter] = [entry];\n      }\n    }\n\n    for(const key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(term, entry, typeOrLanguageValue) {\n    if(!entry.hasOwnProperty(typeOrLanguageValue)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    const child = {};\n    child.mappings = util.clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    child.protected = util.clone(this.protected);\n    if(this.previousContext) {\n      child.previousContext = this.previousContext.clone();\n    }\n    child.revertToPreviousContext = this.revertToPreviousContext;\n    if('@base' in this) {\n      child['@base'] = this['@base'];\n    }\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n\n  /**\n   * Reverts any type-scoped context in this active context to the previous\n   * context.\n   */\n  function _revertToPreviousContext() {\n    if(!this.previousContext) {\n      return this;\n    }\n    return this.previousContext.clone();\n  }\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set or undefined if none is set and type is '@context'.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value, null, or undefined.\n */\napi.getContextValue = (ctx, key, type) => {\n  // invalid key\n  if(key === null) {\n    if(type === '@context') {\n      return undefined;\n    }\n    return null;\n  }\n\n  // get specific entry information\n  if(ctx.mappings.has(key)) {\n    const entry = ctx.mappings.get(key);\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      return entry;\n    }\n    if(entry.hasOwnProperty(type)) {\n      // return entry value for type\n      return entry[type];\n    }\n  }\n\n  // get default language\n  if(type === '@language' && type in ctx) {\n    return ctx[type];\n  }\n\n  // get default direction\n  if(type === '@direction' && type in ctx) {\n    return ctx[type];\n  }\n\n  if(type === '@context') {\n    return undefined;\n  }\n  return null;\n};\n\n/**\n * Processing Mode check.\n *\n * @param activeCtx the current active context.\n * @param version the string or numeric version to check.\n *\n * @return boolean.\n */\napi.processingMode = (activeCtx, version) => {\n  if(version.toString() >= '1.1') {\n    return !activeCtx.processingMode ||\n      activeCtx.processingMode >= 'json-ld-' + version.toString();\n  } else {\n    return activeCtx.processingMode === 'json-ld-1.0';\n  }\n};\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\napi.isKeyword = v => {\n  if(!_isString(v) || v[0] !== '@') {\n    return false;\n  }\n  switch(v) {\n    case '@base':\n    case '@container':\n    case '@context':\n    case '@default':\n    case '@direction':\n    case '@embed':\n    case '@explicit':\n    case '@graph':\n    case '@id':\n    case '@included':\n    case '@index':\n    case '@json':\n    case '@language':\n    case '@list':\n    case '@nest':\n    case '@none':\n    case '@omitDefault':\n    case '@prefix':\n    case '@preserve':\n    case '@protected':\n    case '@requireAll':\n    case '@reverse':\n    case '@set':\n    case '@type':\n    case '@value':\n    case '@version':\n    case '@vocab':\n      return true;\n  }\n  return false;\n};\n\nfunction _deepCompare(x1, x2) {\n  // compare `null` or primitive types directly\n  if((!(x1 && typeof x1 === 'object')) ||\n     (!(x2 && typeof x2 === 'object'))) {\n    return x1 === x2;\n  }\n  // x1 and x2 are objects (also potentially arrays)\n  const x1Array = Array.isArray(x1);\n  if(x1Array !== Array.isArray(x2)) {\n    return false;\n  }\n  if(x1Array) {\n    if(x1.length !== x2.length) {\n      return false;\n    }\n    for(let i = 0; i < x1.length; ++i) {\n      if(!_deepCompare(x1[i], x2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // x1 and x2 are non-array objects\n  const k1s = Object.keys(x1);\n  const k2s = Object.keys(x2);\n  if(k1s.length !== k2s.length) {\n    return false;\n  }\n  for(const k1 in x1) {\n    let v1 = x1[k1];\n    let v2 = x2[k1];\n    // special case: `@container` can be in any order\n    if(k1 === '@container') {\n      if(Array.isArray(v1) && Array.isArray(v2)) {\n        v1 = v1.slice().sort();\n        v2 = v2.slice().sort();\n      }\n    }\n    if(!_deepCompare(v1, v2)) {\n      return false;\n    }\n  }\n  return true;\n}\n","import * as convert from './convert'\nimport Formula from './formula'\nimport Serializer from './serializer'\nimport {\n  ContentType,\n  JSONLDContentType,\n  N3ContentType,\n  N3LegacyContentType,\n  NQuadsAltContentType,\n  NQuadsContentType,\n  NTriplesContentType,\n  RDFXMLContentType,\n  TurtleContentType,\n  TurtleLegacyContentType,\n} from './types'\nimport IndexedFormula from './store'\nimport { BlankNode, NamedNode } from './tf-types'\n\n/**\n * Serialize to the appropriate format\n */\nexport default function serialize (\n  /** The graph or nodes that should be serialized */\n  target: Formula | NamedNode | BlankNode,\n  /** The store */\n  kb?: IndexedFormula,\n  base?: unknown,\n  /**\n   * The mime type.\n   * Defaults to Turtle.\n   */\n  contentType?: string | ContentType,\n  callback?: (err: Error | undefined | null, result?: string) => any,\n  options?: {\n    /**\n     * A string of letters, each of which set an options\n     * e.g. `deinprstux`\n     */\n    flags: string\n  }\n): string | undefined {\n  base = base || target.value\n  const opts = options || {}\n  contentType = contentType || TurtleContentType // text/n3 if complex?\n  var documentString: string | undefined = undefined\n  try {\n    var sz = Serializer(kb)\n    if ((opts as any).flags) sz.setFlags((opts as any).flags)\n    var newSts = kb!.statementsMatching(undefined, undefined, undefined, target as NamedNode)\n    var n3String: string\n    sz.suggestNamespaces(kb!.namespaces)\n    sz.setBase(base)\n    switch (contentType) {\n      case RDFXMLContentType:\n        documentString = sz.statementsToXML(newSts)\n        return executeCallback(null, documentString)\n      case N3ContentType:\n      case N3LegacyContentType:\n        documentString = sz.statementsToN3(newSts)\n        return executeCallback(null, documentString)\n      case TurtleContentType:\n      case TurtleLegacyContentType:\n        sz.setFlags('si') // Suppress = for sameAs and => for implies\n        documentString = sz.statementsToN3(newSts)\n        return executeCallback(null, documentString)\n      case NTriplesContentType:\n        sz.setFlags('deinprstux') // Suppress nice parts of N3 to make ntriples\n        documentString = sz.statementsToNTriples(newSts)\n        return executeCallback(null, documentString)\n      case JSONLDContentType:\n        sz.setFlags('deinprstux') // Use adapters to connect to incmpatible parser\n        n3String = sz.statementsToNTriples(newSts)\n        // n3String = sz.statementsToN3(newSts)\n        convert.convertToJson(n3String, callback)\n        break\n      case NQuadsContentType:\n      case NQuadsAltContentType: // @@@ just outpout the quads? Does not work for collections\n        sz.setFlags('deinprstux q') // Suppress nice parts of N3 to make ntriples\n        documentString = sz.statementsToNTriples(newSts) // q in flag means actually quads\n        return executeCallback(null, documentString)\n        // n3String = sz.statementsToN3(newSts)\n        // documentString = convert.convertToNQuads(n3String, callback)\n        // break\n      default:\n        throw new Error('Serialize: Content-type ' + contentType + ' not supported for data write.')\n    }\n  } catch (err) {\n    if (callback) {\n      // @ts-ignore\n      return callback(err, undefined)\n    }\n    throw err // Don't hide problems from caller in sync mode\n  }\n\n  function executeCallback (err: Error | null | undefined, result: string | undefined): string | undefined {\n    if (callback) {\n      callback(err, result)\n      return\n    } else {\n      return result as string\n    }\n  }\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Implement hashCode for Immutable.js, since we implement `equals`\n  // https://immutable-js.com/docs/v4.0.0/ValueObject/#hashCode()\n  get hashCode() {\n    return 0;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","/**\n *  RDF/XML PARSER\n *\n *  Parser believed to be in full positive RDF/XML parsing compliance\n *  with the possible exception of handling deprecated RDF attributes\n *  appropriately. Parser is believed to comply fully with other W3C\n *  and industry standards where appropriate (DOM, ECMAScript, &c.)\n *\n *  Author: David Sheets <dsheets@mit.edu>\n *\n * W3C® SOFTWARE NOTICE AND LICENSE\n * http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231\n * This work (and included software, documentation such as READMEs, or\n * other related items) is being provided by the copyright holders under\n * the following license. By obtaining, using and/or copying this work,\n * you (the licensee) agree that you have read, understood, and will\n * comply with the following terms and conditions.\n *\n * Permission to copy, modify, and distribute this software and its\n * documentation, with or without modification, for any purpose and\n * without fee or royalty is hereby granted, provided that you include\n * the following on ALL copies of the software and documentation or\n * portions thereof, including modifications:\n *\n * 1. The full text of this NOTICE in a location viewable to users of\n * the redistributed or derivative work.\n * 2. Any pre-existing intellectual property disclaimers, notices, or terms and\n * conditions. If none exist, the W3C Software Short Notice should be\n * included (hypertext is preferred, text is permitted) within the body\n * of any redistributed or derivative code.\n * 3. Notice of any changes or modifications to the files, including the\n * date changes were made. (We recommend you provide URIs to the location\n * from which the code is derived.)\n *\n * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED \"AS IS,\" AND COPYRIGHT\n * HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS\n * FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR\n * DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,\n * TRADEMARKS OR OTHER RIGHTS.\n *\n * COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL\n * OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR\n * DOCUMENTATION.\n *\n * The name and trademarks of copyright holders may NOT be used in\n * advertising or publicity pertaining to the software without specific,\n * written prior permission. Title to copyright in this software and any\n * associated documentation will at all times remain with copyright\n * holders.\n */\n/**\n * @class RDFParser resource object tied to an RDFStore\n *\n * @author David Sheets <dsheets@mit.edu>\n *\n*/\nimport * as uriUtil from './uri'\n\n\nexport default class RDFParser {\n\n  /*\n   * @constructor\n   * @param {RDFStore} store An RDFStore object\n   */\n  constructor(store) {\n    /** Our triple store reference @private */\n\n    this.store = store /** Our identified blank nodes @private */\n    this.bnodes = {} /** A context for context-aware stores @private */\n    this.why = null /** Reification flag */\n    this.reify = false\n  }\n\n  /** Standard namespaces that we know how to handle @final\n   *  @member RDFParser\n   */\n  static ns = {'RDF': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'RDFS': 'http://www.w3.org/2000/01/rdf-schema#'}\n\n  /** DOM Level 2 node type magic numbers @final\n   *  @member RDFParser\n   */\n  static nodeType = {'ELEMENT': 1, 'ATTRIBUTE': 2, 'TEXT': 3,\n    'CDATA_SECTION': 4, 'ENTITY_REFERENCE': 5,\n    'ENTITY': 6, 'PROCESSING_INSTRUCTION': 7,\n    'COMMENT': 8, 'DOCUMENT': 9, 'DOCUMENT_TYPE': 10,\n  'DOCUMENT_FRAGMENT': 11, 'NOTATION': 12}\n\n  /**\n   * Frame class for namespace and base URI lookups\n   * Base lookups will always resolve because the parser knows\n   * the default base.\n   *\n   * @private\n   */\n\n  frameFactory(parser, parent, element) {\n    return {'NODE': 1, 'ARC': 2, 'parent': parent, 'parser': parser, 'store': parser.store, 'element': element,\n      'lastChild': 0, 'base': null, 'lang': null, 'node': null, 'nodeType': null, 'listIndex': 1, 'rdfid': null, 'datatype': null, 'collection': false, /** Terminate the frame and notify the store that we're done */\n      'terminateFrame': function () {\n        if (this.collection) {\n          this.node.close()\n        }\n      },         /** Add a symbol of a certain type to the this frame */'addSymbol': function (type, uri) {\n        uri = uriUtil.join(uri, this.base)\n        this.node = this.store.sym(uri)\n\n        this.nodeType = type\n      },         /** Load any constructed triples into the store */'loadTriple': function () {\n        if (this.parent.parent.collection) {\n          this.parent.parent.node.append(this.node)\n        } else {\n          this.store.add(this.parent.parent.node, this.parent.node, this.node, this.parser.why)\n        }\n        if (this.parent.rdfid != null) {\n          // reify\n          var triple = this.store.sym(uriUtil.join('#' + this.parent.rdfid, this.base))\n          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'type'), this.store.sym(RDFParser.ns.RDF + 'Statement'), this.parser.why)\n          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'subject'), this.parent.parent.node, this.parser.why)\n          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'predicate'), this.parent.node, this.parser.why)\n\n          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'object'), this.node, this.parser.why)\n        }\n      },         /** Check if it's OK to load a triple */'isTripleToLoad': function () {\n        return (this.parent != null && this.parent.parent != null && this.nodeType === this.NODE && this.parent.nodeType ===\n        this.ARC && this.parent.parent.nodeType === this.NODE)\n      },         /** Add a symbolic node to this frame */'addNode': function (uri) {\n        this.addSymbol(this.NODE, uri)\n        if (this.isTripleToLoad()) {\n          this.loadTriple()\n        }\n      },         /** Add a collection node to this frame */'addCollection': function () {\n        this.nodeType = this.NODE\n        this.node = this.store.collection()\n        this.collection = true\n        if (this.isTripleToLoad()) {\n          this.loadTriple()\n        }\n      },         /** Add a collection arc to this frame */'addCollectionArc': function () {\n        this.nodeType = this.ARC\n      },         /** Add a bnode to this frame */'addBNode': function (id) {\n        if (id != null) {\n          if (this.parser.bnodes[id] != null) {\n            this.node = this.parser.bnodes[id]\n          } else {\n            this.node = this.parser.bnodes[id] = this.store.bnode()\n          }\n        } else {\n          this.node = this.store.bnode()\n        }\n        this.nodeType = this.NODE\n        if (this.isTripleToLoad()) {\n          this.loadTriple()\n        }\n      },         /** Add an arc or property to this frame */'addArc': function (uri) {\n        if (uri === RDFParser.ns.RDF + 'li') {\n          uri = RDFParser.ns.RDF + '_' + this.parent.listIndex\n          this.parent.listIndex++\n        }\n\n        this.addSymbol(this.ARC, uri)\n      },         /** Add a literal to this frame */'addLiteral': function (value) {\n        if (this.parent.datatype && this.parent.datatype !== RDFParser.ns.RDF +'langString') {\n          this.node = this.store.literal(value, this.store.sym(this.parent.datatype))\n        } else {\n          this.node = this.store.literal(value, this.lang)\n        }\n        this.nodeType = this.NODE\n        if (this.isTripleToLoad()) {\n          this.loadTriple()\n        }\n      }\n    }\n  }\n\n  // from the OpenLayers source .. needed to get around IE problems.\n  getAttributeNodeNS(node, uri, name) {\n    var attributeNode = null\n    if (node.getAttributeNodeNS) {\n      attributeNode = node.getAttributeNodeNS(uri, name)\n    } else {\n      var attributes = node.attributes\n      var potentialNode, fullName\n      for (var i = 0;i < attributes.length; ++i) {\n        potentialNode = attributes[i]\n        if (potentialNode.namespaceURI === uri) {\n          fullName = (potentialNode.prefix) ? (potentialNode.prefix + ':' + name) : name\n          if (fullName === potentialNode.nodeName) {\n            attributeNode = potentialNode\n            break\n          }\n        }\n      }\n    }\n    return attributeNode\n  }\n\n  /**\n   * Build our initial scope frame and parse the DOM into triples\n   * @param {DOMTree} document The DOM to parse\n   * @param {String} base The base URL to use\n   * @param {Object} why The context to which this resource belongs\n   */\n\n  parse(document, base, why) {\n    var children = document.childNodes // clean up for the next run\n    this.cleanParser() // figure out the root element\n    var root\n    if (document.nodeType === RDFParser.nodeType.DOCUMENT) {\n      for (var c = 0;c < children.length;c++) {\n        if (children[c].nodeType === RDFParser.nodeType.ELEMENT) {\n          root = children[c]\n          break\n        }\n      }\n    } else if (document.nodeType === RDFParser.nodeType.ELEMENT) {\n      root = document\n    } else {\n      throw new Error(\"RDFParser: can't find root in \" + base + '. Halting. ')\n    // return false\n    }\n    this.why = why // our topmost frame\n    var f = this.frameFactory(this)\n    this.base = base\n    f.base = base\n    f.lang = null // was '' but can't have langs like that 2015 (!)\n    this.parseDOM(this.buildFrame(f, root))\n    return true\n  }\n\n  parseDOM(frame) {\n    // a DOM utility function used in parsing\n    var rdfid\n    var elementURI = function (el) {\n      var result = ''\n      if (el.namespaceURI == null) {\n        throw new Error('RDF/XML syntax error: No namespace for ' + el.localName + ' in ' + this.base)\n      }\n      if (el.namespaceURI) {\n        result = result + el.namespaceURI\n      }\n      if (el.localName) {\n        result = result + el.localName\n      } else if (el.nodeName) {\n        if (el.nodeName.indexOf(':') >= 0)result = result + el.nodeName.split(':')[1]\n        else result = result + el.nodeName\n      }\n      return result\n    }.bind(this)\n    var dig = true // if we'll dig down in the tree on the next iter\n    while (frame.parent) {\n      var dom = frame.element\n      var attrs = dom.attributes\n      if (dom.nodeType === RDFParser.nodeType.TEXT || dom.nodeType === RDFParser.nodeType.CDATA_SECTION) {\n        // we have a literal\n        if (frame.parent.nodeType === frame.NODE) {\n          // must have had attributes, store as rdf:value\n          frame.addArc(RDFParser.ns.RDF + 'value')\n          frame = this.buildFrame(frame)\n        }\n        frame.addLiteral(dom.nodeValue)\n      } else if (elementURI(dom) !== RDFParser.ns.RDF + 'RDF') {\n        // not root\n        if (frame.parent && frame.parent.collection) {\n          // we're a collection element\n          frame.addCollectionArc()\n          frame = this.buildFrame(frame, frame.element)\n          frame.parent.element = null\n        }\n        if (!frame.parent || !frame.parent.nodeType || frame.parent.nodeType === frame.ARC) {\n          // we need a node\n          var about = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'about')\n          rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'ID')\n          if (about && rdfid) {\n            throw new Error('RDFParser: ' + dom.nodeName + ' has both rdf:id and rdf:about.' +\n              ' Halting. Only one of these' + ' properties may be specified on a' + ' node.')\n          }\n          if (!about && rdfid) {\n            frame.addNode('#' + rdfid.nodeValue)\n            dom.removeAttributeNode(rdfid)\n          } else if (about == null && rdfid == null) {\n            var bnid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'nodeID')\n            if (bnid) {\n              frame.addBNode(bnid.nodeValue)\n              dom.removeAttributeNode(bnid)\n            } else {\n              frame.addBNode()\n            }\n          } else {\n            frame.addNode(about.nodeValue)\n            dom.removeAttributeNode(about)\n          }\n          // Typed nodes\n          var rdftype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'type')\n          if (RDFParser.ns.RDF + 'Description' !== elementURI(dom)) {\n            rdftype = {'nodeValue': elementURI(dom)}\n          }\n          if (rdftype != null) {\n            this.store.add(frame.node, this.store.sym(RDFParser.ns.RDF + 'type'), this.store.sym(uriUtil.join(rdftype.nodeValue,\n              frame.base)), this.why)\n            if (rdftype.nodeName) {\n              dom.removeAttributeNode(rdftype)\n            }\n          }\n          // Property Attributes\n          for (var x = attrs.length - 1; x >= 0; x--) {\n            this.store.add(frame.node, this.store.sym(elementURI(attrs[x])), this.store.literal(attrs[x].nodeValue,\n              frame.lang), this.why)\n          }\n        } else {\n          // we should add an arc (or implicit bnode+arc)\n          frame.addArc(elementURI(dom)) // save the arc's rdf:ID if it has one\n          if (this.reify) {\n            rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'ID')\n            if (rdfid) {\n              frame.rdfid = rdfid.nodeValue\n              dom.removeAttributeNode(rdfid)\n            }\n          }\n          var parsetype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'parseType')\n          var datatype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'datatype')\n          if (datatype) {\n            frame.datatype = datatype.nodeValue\n            dom.removeAttributeNode(datatype)\n          }\n          if (parsetype) {\n            var nv = parsetype.nodeValue\n            if (nv === 'Literal') {\n              frame.datatype = RDFParser.ns.RDF + 'XMLLiteral'\n              frame = this.buildFrame(frame)\n              // Don't include the literal node, only its children\n              frame.addLiteral(dom.childNodes)\n              dig = false\n            } else if (nv === 'Resource') {\n              frame = this.buildFrame(frame, frame.element)\n              frame.parent.element = null\n              frame.addBNode()\n            } else if (nv === 'Collection') {\n              frame = this.buildFrame(frame, frame.element)\n              frame.parent.element = null\n              frame.addCollection()\n            }\n            dom.removeAttributeNode(parsetype)\n          }\n          if (attrs.length !== 0) {\n            var resource = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'resource')\n            var bnid2 = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'nodeID')\n            frame = this.buildFrame(frame)\n            if (resource) {\n              frame.addNode(resource.nodeValue)\n              dom.removeAttributeNode(resource)\n            } else {\n              if (bnid2) {\n                frame.addBNode(bnid2.nodeValue)\n                dom.removeAttributeNode(bnid2)\n              } else {\n                frame.addBNode()\n              }\n            }\n            for (var x1 = attrs.length - 1; x1 >= 0; x1--) {\n              var f = this.buildFrame(frame)\n              f.addArc(elementURI(attrs[x1]))\n              if (elementURI(attrs[x1]) === RDFParser.ns.RDF + 'type') {\n                (this.buildFrame(f)).addNode(attrs[x1].nodeValue)\n              } else {\n                (this.buildFrame(f)).addLiteral(attrs[x1].nodeValue)\n              }\n            }\n          } else if (dom.childNodes.length === 0) {\n            (this.buildFrame(frame)).addLiteral('')\n          }\n        }\n      } // rdf:RDF\n      // dig dug\n      dom = frame.element\n      while (frame.parent) {\n        var pframe = frame\n        while (dom == null) {\n          frame = frame.parent\n          dom = frame.element\n        }\n        var candidate = dom.childNodes && dom.childNodes[frame.lastChild]\n        if (!candidate || !dig) {\n          frame.terminateFrame()\n          if (!(frame = frame.parent)) {\n            break\n          } // done\n          dom = frame.element\n          dig = true\n        } else if ((candidate.nodeType !== RDFParser.nodeType.ELEMENT &&\n          candidate.nodeType !== RDFParser.nodeType.TEXT &&\n          candidate.nodeType !== RDFParser.nodeType.CDATA_SECTION) ||\n          ((candidate.nodeType === RDFParser.nodeType.TEXT ||\n          candidate.nodeType === RDFParser.nodeType.CDATA_SECTION) &&\n          dom.childNodes.length !== 1)) {\n          frame.lastChild++\n        } else {\n          // not a leaf\n          frame.lastChild++\n          frame = this.buildFrame(pframe, dom.childNodes[frame.lastChild - 1])\n          break\n        }\n      }\n    } // while\n  }\n\n  /**\n   * Cleans out state from a previous parse run\n   * @private\n   */\n  cleanParser() {\n    this.bnodes = {}\n    this.why = null\n  }\n\n  /**\n   * Builds scope frame\n   * @private\n   */\n  buildFrame(parent, element) {\n    var frame = this.frameFactory(this, parent, element)\n    if (parent) {\n      frame.base = parent.base\n      frame.lang = parent.lang\n    }\n    if (!element || element.nodeType === RDFParser.nodeType.TEXT ||\n      element.nodeType === RDFParser.nodeType.CDATA_SECTION) {\n      return frame\n    }\n    var attrs = element.attributes\n    var base = element.getAttributeNode('xml:base')\n    if (base != null) {\n      frame.base = base.nodeValue\n      element.removeAttribute('xml:base')\n    }\n    var lang = element.getAttributeNode('xml:lang')\n    if (lang != null) {\n      frame.lang = lang.nodeValue\n      element.removeAttribute('xml:lang')\n    }\n    // remove all extraneous xml and xmlns attributes\n    for (var x = attrs.length - 1;x >= 0;x--) {\n      if (attrs[x].nodeName.substr(0, 3) === 'xml') {\n        if (attrs[x].name.slice(0, 6) === 'xmlns:') {\n          var uri = attrs[x].nodeValue // alert('base for namespac attr:'+this.base)\n          if (this.base) uri = uriUtil.join(uri, this.base)\n          this.store.setPrefixForURI(attrs[x].name.slice(6), uri)\n        }\n        //\t\talert('rdfparser: xml atribute: '+attrs[x].name) //@@\n        element.removeAttributeNode(attrs[x])\n      }\n    }\n    return frame\n  }\n}\n","import CanonicalDataFactory from \"./factories/canonical-data-factory\";\n\nexport function createXSD(localFactory = CanonicalDataFactory) {\n  return {\n    boolean: localFactory.namedNode(\"http://www.w3.org/2001/XMLSchema#boolean\"),\n    dateTime: localFactory.namedNode(\n      \"http://www.w3.org/2001/XMLSchema#dateTime\"\n    ),\n    decimal: localFactory.namedNode(\"http://www.w3.org/2001/XMLSchema#decimal\"),\n    double: localFactory.namedNode(\"http://www.w3.org/2001/XMLSchema#double\"),\n    integer: localFactory.namedNode(\"http://www.w3.org/2001/XMLSchema#integer\"),\n    langString: localFactory.namedNode(\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\"\n    ),\n    string: localFactory.namedNode(\"http://www.w3.org/2001/XMLSchema#string\"),\n  };\n}\n\nconst defaultXSD = createXSD(CanonicalDataFactory);\n\nexport default defaultXSD;\n","/*      Serialization of RDF Graphs\n**\n** Tim Berners-Lee 2006\n** This is was http://dig.csail.mit.edu/2005/ajar/ajaw/js/rdf/serialize.js\n** This is or was https://github.com/linkeddata/rdflib.js/blob/main/src/serializer.js\n** Licence: MIT\n*/\nimport NamedNode from './named-node'\nimport BlankNode from './blank-node'\nimport * as Uri from './uri'\nimport * as Util from './utils-js'\nimport CanonicalDataFactory from './factories/canonical-data-factory'\nimport { createXSD } from './xsd'\nimport solidNs from 'solid-namespace'\n\n\nexport default function createSerializer(store) {\n  return new Serializer(store);\n};\n\nexport class Serializer {\n  constructor(store) {\n    this.flags = ''\n    this.base = null\n\n    this.prefixes = [] // suggested prefixes\n    this.namespaces = [] // complementary\n    const nsKeys = Object.keys(solidNs())\n    for (const i in nsKeys) {\n      const uri = solidNs()[nsKeys[i]]('')\n      const prefix = nsKeys[i]\n      this.prefixes[uri] = prefix\n      this.namespaces[prefix] = uri\n    }\n\n    this.suggestPrefix('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#') // XML code assumes this!\n    this.suggestPrefix('xml', 'reserved:reservedForFutureUse') // XML reserves xml: in the spec.\n\n    this.namespacesUsed = [] // Count actually used and so needed in @prefixes\n    this.keywords = ['a'] // The only one we generate at the moment\n    this.prefixchars = 'abcdefghijklmnopqustuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    this.incoming = null // Array not calculated yet\n    this.formulas = [] // remebering original formulae from hashes\n    this.store = store\n    this.rdfFactory = store.rdfFactory || CanonicalDataFactory\n    this.xsd = createXSD(this.rdfFactory)\n  }\n\n  setBase(base) {\n    this.base = base;\n    return this\n  }\n\n  setFlags(flags) {\n    this.flags = flags || '';\n    return this\n  }\n\n  toStr(x) {\n    var s = x.toNT()\n    if (x.termType === 'Graph') {\n      this.formulas[s] = x // remember as reverse does not work\n    }\n    return s\n  }\n\n  fromStr(s) {\n    if (s[0] === '{') {\n      var x = this.formulas[s]\n      if (!x) console.log('No formula object for ' + s)\n      return x\n    }\n    return this.store.fromNT(s)\n  }\n\n  /* Accumulate Namespaces\n  **\n  ** These are only hints.  If two overlap, only one gets used\n  ** There is therefore no guarantee in general.\n  */\n  suggestPrefix(prefix, uri) {\n    if (prefix.slice(0, 7) === 'default') return // Try to weed these out\n    if (prefix.slice(0, 2) === 'ns') return //  From others inferior algos\n    if (!prefix || !uri) return // empty strings not suitable\n    if (prefix in this.namespaces || uri in this.prefixes) return // already used\n    this.prefixes[uri] = prefix\n    this.namespaces[prefix] = uri\n  }\n\n  // Takes a namespace -> prefix map\n  suggestNamespaces(namespaces) {\n    for (var px in namespaces) {\n      this.suggestPrefix(px, namespaces[px])\n    }\n    return this\n  }\n\n  checkIntegrity() {\n    var p, ns\n    for (p in this.namespaces) {\n      if (this.prefixes[this.namespaces[p]] !== p) {\n        throw new Error('Serializer integity error 1: ' + p + ', ' +\n          this.namespaces[p] + ', ' + this.prefixes[this.namespaces[p]] + '!')\n      }\n    }\n    for (ns in this.prefixes) {\n      if (this.namespaces[this.prefixes[ns]] !== ns) {\n        throw new Error('Serializer integity error 2: ' + ns + ', ' +\n          this.prefixs[ns] + ', ' + this.namespaces[this.prefixes[ns]] + '!')\n      }\n    }\n  }\n\n  // Make up an unused prefix for a random namespace\n  makeUpPrefix(uri) {\n    var p = uri\n    function canUseMethod (pp) {\n      if (!this.validPrefix.test(pp)) return false // bad format\n      if (pp === 'ns') return false // boring\n      if (pp in this.namespaces) return false // already used\n      this.prefixes[uri] = pp\n      this.namespaces[pp] = uri\n      return pp\n    }\n    var canUse = canUseMethod.bind(this)\n\n    if ('#/'.indexOf(p[p.length - 1]) >= 0) p = p.slice(0, -1)\n    var slash = p.lastIndexOf('/')\n    if (slash >= 0) p = p.slice(slash + 1)\n    var i = 0\n    while (i < p.length) {\n      if (this.prefixchars.indexOf(p[i])) {\n        i++\n      } else {\n        break\n      }\n    }\n    p = p.slice(0, i)\n\n    if (p.length < 6 && (canUse(p))) return p // exact is best\n    if (canUse(p.slice(0, 3))) return p.slice(0, 3)\n    if (canUse(p.slice(0, 2))) return p.slice(0, 2)\n    if (canUse(p.slice(0, 4))) return p.slice(0, 4)\n    if (canUse(p.slice(0, 1))) return p.slice(0, 1)\n    if (canUse(p.slice(0, 5))) return p.slice(0, 5)\n    if (!this.validPrefix.test(p)) {\n      p = 'n' // Otherwise the loop below may never termimnate\n    }\n    for (var j = 0; ; j++) if (canUse(p.slice(0, 3) + j)) return p.slice(0, 3) + j\n  }\n\n  rootSubjects(sts) {\n    var incoming = {}\n    var subjects = {}\n    var allBnodes = {}\n\n    /* This scan is to find out which nodes will have to be the roots of trees\n    ** in the serialized form. This will be any symbols, and any bnodes\n    ** which hve more or less than one incoming arc, and any bnodes which have\n    ** one incoming arc but it is an uninterrupted loop of such nodes back to itself.\n    ** This should be kept linear time with repect to the number of statements.\n    ** Note it does not use any indexing of the store.\n    */\n    for (var i = 0; i < sts.length; i++) {\n      var st = sts[i]\n      var checkMentions = function (x) {\n        if (!incoming.hasOwnProperty(x)) incoming[x] = []\n        incoming[x].push(st.subject) // List of things which will cause this to be printed\n      }\n      var st2 = [st.subject, st.predicate, st.object]\n      st2.map(function (y) {\n        if (y.termType === 'BlankNode') {\n          allBnodes[y.toNT()] = true\n        } else if (y.termType === 'Collection') {\n          y.elements.forEach(function (z) {\n            checkMentions(z) // bnodes in collections important\n          })\n        }\n      })\n      checkMentions(sts[i].object)\n      var ss = subjects[this.toStr(st.subject)] // Statements with this as subject\n      if (!ss) ss = []\n      ss.push(st)\n      subjects[this.toStr(st.subject)] = ss // Make hash. @@ too slow for formula?\n    }\n\n    var roots = []\n    for (var xNT in subjects) {\n      if (!subjects.hasOwnProperty(xNT)) continue\n      var y = this.fromStr(xNT)\n      if ((y.termType !== 'BlankNode') || !incoming[y] || (incoming[y].length !== 1)) {\n        roots.push(y)\n        continue\n      }\n    }\n    this.incoming = incoming // Keep for serializing @@ Bug for nested formulas\n\n    // Now do the scan using existing roots\n    var rootsHash = {}\n    for (var k = 0; k < roots.length; k++) {\n      rootsHash[roots[k].toNT()] = true\n    }\n    return {'roots': roots, 'subjects': subjects,\n    'rootsHash': rootsHash, 'incoming': incoming}\n  }\n\n  // //////////////////////////////////////////////////////\n\n  toN3(f) {\n    return this.statementsToN3(f.statements)\n  }\n\n  _notQNameChars = '\\t\\r\\n !\"#$%&\\'()*.,+/;<=>?@[\\\\]^`{|}~'\n  _notNameChars =\n    (this._notQNameChars + ':')\n\n  explicitURI(uri) {\n    if (this.flags.indexOf('r') < 0 && this.base) {\n      uri = Uri.refTo(this.base, uri)\n    } else if (this.flags.indexOf('u') >= 0) { // Unicode encoding NTriples style\n      uri = backslashUify(uri)\n    } else {\n      uri = hexify(uri)\n    }\n    return '<' + uri + '>'\n  }\n\n  statementsToNTriples(sts) {\n    var sorted = sts.slice()\n    sorted.sort()\n    var str = ''\n    var rdfns = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'\n    var self = this\n    var kb = this.store\n    var factory = this.rdfFactory\n    var termToNT = function (x) {\n      if (x.termType !== 'Collection') {\n        return self.atomicTermToN3(x)\n      }\n      var list = x.elements\n      var rest = kb.sym(rdfns + 'nill')\n      for (var i = list.length - 1; i >= 0; i--) {\n        var bnode = factory.blankNode()\n        str += termToNT(bnode) + ' ' + termToNT(kb.sym(rdfns + 'first')) + ' ' + termToNT(list[i]) + '.\\n'\n        str += termToNT(bnode) + ' ' + termToNT(kb.sym(rdfns + 'rest')) + ' ' + termToNT(rest) + '.\\n'\n        rest = bnode\n      }\n      return self.atomicTermToN3(rest)\n    }\n    for (var i = 0; i < sorted.length; i++) {\n      var st = sorted[i]\n      var s = ''\n      s += termToNT(st.subject) + ' '\n      s += termToNT(st.predicate) + ' '\n      s += termToNT(st.object) + ' '\n      if (this.flags.indexOf('q') >= 0) { // Do quads not nrtiples\n        s += termToNT(st.why) + ' '\n      }\n      s += '.\\n'\n      str += s\n    }\n    return str\n  }\n\n  statementsToN3(sts) {\n    var indent = 4\n    var width = 80\n    var kb = this.store\n    // A URI Map alows us to put the type statemnts at the top.\n    var uriMap = {'http://www.w3.org/1999/02/22-rdf-syntax-ns#type': 'aaa:00'}\n    var SPO = function (x, y) { // Do limited canonicalization of bnodes\n      return Util.heavyCompareSPO(x, y, kb, uriMap)\n    }\n    sts.sort(SPO)\n\n    if (this.base && !this.defaultNamespace){\n      this.defaultNamespace = this.base + '#'\n    }\n\n    var predMap = {}\n    if (this.flags.indexOf('s') < 0) {\n      predMap['http://www.w3.org/2002/07/owl#sameAs'] = '='\n    }\n    if (this.flags.indexOf('t') < 0) {\n      predMap['http://www.w3.org/1999/02/22-rdf-syntax-ns#type'] = 'a'\n    }\n    if (this.flags.indexOf('i') < 0) {\n      predMap['http://www.w3.org/2000/10/swap/log#implies'] = '=>'\n    }\n    // //////////////////////// Arrange the bits of text\n\n    var spaces = function (n) {\n      var s = ''\n      for (var i = 0; i < n; i++) s += ' '\n      return s\n    }\n\n    var treeToLine = function (tree) {\n      var str = ''\n      for (var i = 0; i < tree.length; i++) {\n        var branch = tree[i]\n        var s2 = (typeof branch === 'string') ? branch : treeToLine(branch)\n        // Note the space before the dot in case statement ends 123. which is in fact allowed but be conservative.\n        if (i !== 0) {\n          var ch = str.slice(-1) || ' '\n          if (s2 === ',' || s2 === ';') {\n            // no gap\n          } else if (s2 === '.' && !('0123456789.'.includes(ch))) { // no gap except after number\n            // no gap\n          } else {\n            str += ' ' // separate from previous token\n          }\n        }\n        str += s2\n      }\n      return str\n    }\n\n    // Convert a nested tree of lists and strings to a string\n    var treeToString = function (tree, level) {\n      var str = ''\n      var lastLength = 100000\n      if (level === undefined) level = -1\n      for (var i = 0; i < tree.length; i++) {\n        var branch = tree[i]\n        if (typeof branch !== 'string') {\n          var substr = treeToString(branch, level + 1)\n          if (\n            substr.length < 10 * (width - indent * level) &&\n              substr.indexOf('\"\"\"') < 0) { // Don't mess up multiline strings\n            var line = treeToLine(branch)\n            if (line.length < (width - indent * level)) {\n              branch = line //   Note! treat as string below\n              substr = ''\n            }\n          }\n          if (substr) lastLength = 10000\n          str += substr\n        }\n        if (typeof branch === 'string') {\n          if (branch.length === 1 && str.slice(-1) === '\\n') {\n            if (',.;'.indexOf(branch) >= 0) {\n              str = str.slice(0, -1) + branch + '\\n' //  slip punct'n on end\n              lastLength += 1\n              continue\n            }\n          }\n          if (lastLength < (indent * level + 4) ||  // if new line not necessary\n            lastLength + branch.length + 1 < width && ';.'.indexOf(str[str.length - 2]) < 0) { // or the string fits on last line\n            str = str.slice(0, -1) + ' ' + branch + '\\n' // then continue on this line\n            lastLength += branch.length + 1\n          } else {\n            let line = spaces(indent * level) + branch\n            str += line + '\\n'\n            lastLength = line.length\n            if (level < 0) {\n              str += '\\n' // extra blank line\n              lastLength = 100000 // don't touch\n            }\n          }\n        }\n      }\n      return str\n    }\n\n    // //////////////////////////////////////////// Structure for N3\n    // Convert a set of statements into a nested tree of lists and strings\n    function statementListToTreeMethod (statements) {\n      var stats = this.rootSubjects(statements)\n      var roots = stats.roots\n      var results = []\n      for (var i = 0; i < roots.length; i++) {\n        var root = roots[i]\n        results.push(subjectTree(root, stats))\n      }\n      return results\n    }\n    var statementListToTree = statementListToTreeMethod.bind(this)\n\n    // The tree for a subject\n    function subjectTree (subject, stats) {\n      if (subject.termType === 'BlankNode' && !stats.incoming[subject]) {\n        return objectTree(subject, stats, true).concat(['.']) // Anonymous bnode subject\n      }\n      return [ termToN3(subject, stats) ].concat([propertyTree(subject, stats)]).concat(['.'])\n    }\n    // The property tree for a single subject or anonymous node\n    function propertyTreeMethod (subject, stats) {\n      var results = []\n      var lastPred = null\n      var sts = stats.subjects[this.toStr(subject)] || [] // relevant statements\n      if (typeof sts === 'undefined') {\n        throw new Error('Cant find statements for ' + subject)\n      }\n\n      var objects = []\n      for (var i = 0; i < sts.length; i++) {\n        var st = sts[i]\n        if (st.predicate.uri === lastPred) {\n          objects.push(',')\n        } else {\n          if (lastPred) {\n            results = results.concat([objects]).concat([';'])\n            objects = []\n          }\n          results.push(predMap[st.predicate.uri]\n            ? predMap[st.predicate.uri] : termToN3(st.predicate, stats))\n        }\n        lastPred = st.predicate.uri\n        objects.push(objectTree(st.object, stats))\n      }\n      results = results.concat([objects])\n      return results\n    }\n\n    var propertyTree = propertyTreeMethod.bind(this)\n\n    function objectTreeMethod(obj, stats, force) {\n      if (obj.termType === 'BlankNode' &&\n        (force || stats.rootsHash[obj.toNT()] === undefined)) {// if not a root\n        if (stats.subjects[this.toStr(obj)]) {\n          return ['[', propertyTree(obj, stats), ']']\n        } else {\n          return '[]'\n        }\n      }\n      return termToN3(obj, stats)\n    }\n\n    var objectTree = objectTreeMethod.bind(this)\n\n    function termToN3Method(expr, stats) { //\n      var i, res\n      switch (expr.termType) {\n        case 'Graph':\n          res = ['{']\n          res = res.concat(statementListToTree(expr.statements))\n          return res.concat(['}'])\n\n        case 'Collection':\n          res = ['(']\n          for (i = 0; i < expr.elements.length; i++) {\n            res.push([ objectTree(expr.elements[i], stats) ])\n          }\n          res.push(')')\n          return res\n\n        default:\n          return this.atomicTermToN3(expr)\n      }\n    }\n    Serializer.prototype.termToN3 = termToN3\n    var termToN3 = termToN3Method.bind(this)\n\n    function prefixDirectivesMethod () {\n      var str = ''\n      if (this.defaultNamespace) {\n        str += '@prefix : ' + this.explicitURI(this.defaultNamespace) + '.\\n'\n      }\n      for (var ns in this.prefixes) {\n        if (!this.prefixes.hasOwnProperty(ns)) continue\n        if (!this.namespacesUsed[ns]) continue\n        str += '@prefix ' + this.prefixes[ns] + ': ' + this.explicitURI(ns) +\n          '.\\n'\n      }\n      return str + '\\n'\n    }\n    var prefixDirectives = prefixDirectivesMethod.bind(this)\n    // Body of statementsToN3:\n    var tree = statementListToTree(sts)\n    return prefixDirectives() + treeToString(tree)\n  }\n  // //////////////////////////////////////////// Atomic Terms\n\n  //  Deal with term level things and nesting with no bnode structure\n  atomicTermToN3 (expr, stats) {\n    switch (expr.termType) {\n      case 'BlankNode':\n      case 'Variable':\n        return expr.toNT()\n      case 'Literal':\n        var val = expr.value\n        if (typeof val !== 'string') {\n          throw new TypeError('Value of RDF literal node must be a string')\n        }\n        // var val = expr.value.toString() // should be a string already\n        if (expr.datatype && this.flags.indexOf('x') < 0) { // Supress native numbers\n          switch (expr.datatype.uri) {\n\n            case 'http://www.w3.org/2001/XMLSchema#integer':\n              return val\n\n            case 'http://www.w3.org/2001/XMLSchema#decimal': // In urtle must have dot\n              if (val.indexOf('.') < 0) val += '.0'\n              return val\n\n            case 'http://www.w3.org/2001/XMLSchema#double': {\n              // Must force use of 'e'\n              const eNotation = val.toLowerCase().indexOf('e') > 0;\n              if (val.indexOf('.') < 0 && !eNotation) val += '.0'\n              if (!eNotation) val += 'e0'\n              return val\n            }\n\n            case 'http://www.w3.org/2001/XMLSchema#boolean':\n              return expr.value === '1' ? 'true' : 'false'\n          }\n        }\n        var str = this.stringToN3(expr.value)\n        if (expr.language) {\n          str += '@' + expr.language\n        } else if (!expr.datatype.equals(this.xsd.string)) {\n          str += '^^' + this.atomicTermToN3(expr.datatype, stats)\n        }\n        return str\n      case 'NamedNode':\n        return this.symbolToN3(expr)\n      default:\n        throw new Error('Internal: atomicTermToN3 cannot handle ' + expr + ' of termType: ' + expr.termType)\n    }\n  }\n\n  //  stringToN3:  String escaping for N3\n\n  validPrefix = new RegExp(/^[a-zA-Z][a-zA-Z0-9]*$/)\n\n  forbidden1 = new RegExp(/[\\\\\"\\b\\f\\r\\v\\t\\n\\u0080-\\uffff]/gm)\n  forbidden3 = new RegExp(/[\\\\\"\\b\\f\\r\\v\\u0080-\\uffff]/gm)\n  stringToN3(str, flags) {\n    if (!flags) flags = 'e'\n    var res = ''\n    var i, j, k\n    var delim\n    var forbidden\n    if (str.length > 20 && // Long enough to make sense\n        str.slice(-1) !== '\"' && // corner case'\n        flags.indexOf('n') < 0 && // Force single line\n        (str.indexOf('\\n') > 0 || str.indexOf('\"') > 0)) {\n      delim = '\"\"\"'\n      forbidden = this.forbidden3\n    } else {\n      delim = '\"'\n      forbidden = this.forbidden1\n    }\n    for (i = 0; i < str.length;) {\n      forbidden.lastIndex = 0\n      var m = forbidden.exec(str.slice(i))\n      if (m == null) break\n      j = i + forbidden.lastIndex - 1\n      res += str.slice(i, j)\n      var ch = str[j]\n      if (ch === '\"' && delim === '\"\"\"' && str.slice(j, j + 3) !== '\"\"\"') {\n        res += ch\n      } else {\n        k = '\\b\\f\\r\\t\\v\\n\\\\\"'.indexOf(ch) // No escaping of bell (7)?\n        if (k >= 0) {\n          res += '\\\\' + 'bfrtvn\\\\\"'[k]\n        } else {\n          if (flags.indexOf('e') >= 0) { // Unicode escaping in strings not unix style\n            res += '\\\\u' + ('000' +\n              ch.charCodeAt(0).toString(16).toLowerCase()).slice(-4)\n          } else { // no 'e' flag\n            res += ch\n          }\n        }\n      }\n      i = j + 1\n    }\n    return delim + res + str.slice(i) + delim\n  }\n  //  A single symbol, either in  <> or namespace notation\n\n  symbolToN3 (x) { // c.f. symbolString() in notation3.py\n    var uri = x.uri\n    var j = uri.indexOf('#')\n    if (j < 0 && this.flags.indexOf('/') < 0) {\n      j = uri.lastIndexOf('/')\n    }\n    if (j >= 0 && this.flags.indexOf('p') < 0 &&\n      // Can split at namespace but only if http[s]: URI or file: or ws[s] (why not others?)\n      (uri.indexOf('http') === 0 || uri.indexOf('ws') === 0 || uri.indexOf('file') === 0)) {\n      var canSplit = true\n      for (var k = j + 1; k < uri.length; k++) {\n        if (this._notNameChars.indexOf(uri[k]) >= 0) {\n          canSplit = false\n          break\n        }\n      }\n/*\n      if (uri.slice(0, j + 1) === this.base + '#') { // base-relative\n        if (canSplit) {\n          return ':' + uri.slice(j + 1) // assume deafult ns is local\n        } else {\n          return '<#' + uri.slice(j + 1) + '>'\n        }\n      }\n*/\n      if (canSplit) {\n        var localid = uri.slice(j + 1)\n        var namesp = uri.slice(0, j + 1)\n        if (this.defaultNamespace && this.defaultNamespace === namesp &&\n            this.flags.indexOf('d') < 0) { // d -> suppress default\n          if (this.flags.indexOf('k') >= 0 &&\n            this.keyords.indexOf(localid) < 0) {\n            return localid\n          }\n          return ':' + localid\n        }\n        // this.checkIntegrity() //  @@@ Remove when not testing\n        var prefix = this.prefixes[namesp]\n        if (!prefix) prefix = this.makeUpPrefix(namesp)\n        if (prefix) {\n          this.namespacesUsed[namesp] = true\n          return prefix + ':' + localid\n        }\n      // Fall though if can't do qname\n      }\n    }\n    return this.explicitURI(uri)\n  }\n\n  // /////////////////////////// Quad store serialization\n\n  // @para. write  - a function taking a single string to be output\n  //\n  writeStore(write) {\n    var kb = this.store\n    var fetcher = kb.fetcher\n    var session = fetcher && fetcher.appNode\n\n    // The core data\n\n    var sources = this.store.index[3]\n    for (var s in sources) { // -> assume we can use -> as short for log:semantics\n      var source = kb.fromNT(s)\n      if (session && source.equals(session)) continue\n      write('\\n' + this.atomicTermToN3(source) + ' ' +\n        this.atomicTermToN3(kb.sym('http://www.w3.org/2000/10/swap/log#semantics')) +\n          ' { ' + this.statementsToN3(kb.statementsMatching(\n          undefined, undefined, undefined, source)) + ' }.\\n')\n    }\n\n    // The metadata from HTTP interactions:\n\n    kb.statementsMatching(undefined,\n      kb.sym('http://www.w3.org/2007/ont/link#requestedURI')).map(\n      function (st) {\n        write('\\n<' + st.object.value + '> log:metadata {\\n')\n        var sts = kb.statementsMatching(undefined, undefined, undefined, st.subject)\n        write(this.statementsToN3(this.statementsToN3(sts)))\n        write('}.\\n')\n      })\n\n    // Inferences we have made ourselves not attributable to anyone else\n\n    var metaSources = []\n    if (session) metaSources.push(session)\n    var metadata = []\n    metaSources.map(function (source) {\n      metadata = metadata.concat(kb.statementsMatching(undefined, undefined, undefined, source))\n    })\n    write(this.statementsToN3(metadata))\n  }\n\n  // ////////////////////////////////////////////// XML serialization\n\n  statementsToXML(sts) {\n    var indent = 4\n    var width = 80\n\n    var namespaceCounts = [] // which have been used\n    namespaceCounts['http://www.w3.org/1999/02/22-rdf-syntax-ns#'] = true\n\n    var liPrefix = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#_' // prefix for ordered list items\n\n    // //////////////////////// Arrange the bits of XML text\n\n    var spaces = function (n) {\n      var s = ''\n      for (var i = 0; i < n; i++) s += ' '\n      return s\n    }\n\n    var XMLtreeToLine = function (tree) {\n      var str = ''\n      for (var i = 0; i < tree.length; i++) {\n        var branch = tree[i]\n        var s2 = (typeof branch === 'string') ? branch : XMLtreeToLine(branch)\n        str += s2\n      }\n      return str\n    }\n\n    // Convert a nested tree of lists and strings to a string\n    var XMLtreeToString = function (tree, level) {\n      var str = ''\n      var line\n      var lastLength = 100000\n      if (!level) level = 0\n      for (var i = 0; i < tree.length; i++) {\n        var branch = tree[i]\n        if (typeof branch !== 'string') {\n          var substr = XMLtreeToString(branch, level + 1)\n          if (\n            substr.length < 10 * (width - indent * level) &&\n            substr.indexOf('\"\"\"') < 0) { // Don't mess up multiline strings\n            line = XMLtreeToLine(branch)\n            if (line.length < (width - indent * level)) {\n              branch = '   ' + line //   @@ Hack: treat as string below\n              substr = ''\n            }\n          }\n          if (substr) lastLength = 10000\n          str += substr\n        }\n        if (typeof branch === 'string') {\n          if (lastLength < (indent * level + 4)) { // continue\n            str = str.slice(0, -1) + ' ' + branch + '\\n'\n            lastLength += branch.length + 1\n          } else {\n            line = spaces(indent * level) + branch\n            str += line + '\\n'\n            lastLength = line.length\n          }\n        } else { // not string\n        }\n      }\n      return str\n    }\n\n    function statementListToXMLTreeMethod (statements) {\n      this.suggestPrefix('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#')\n      var stats = this.rootSubjects(statements)\n      var roots = stats.roots\n      var results = []\n      for (var i = 0; i < roots.length; i++) {\n        var root = roots[i]\n        results.push(subjectXMLTree(root, stats))\n      }\n      return results\n    }\n    var statementListToXMLTree = statementListToXMLTreeMethod.bind(this)\n\n    function escapeForXML (str) {\n      if (typeof str === 'undefined') return '@@@undefined@@@@'\n      return str.replace(/[&<\"]/g, function (m) {\n        switch (m[0]) {\n          case '&':\n            return '&amp;'\n          case '<':\n            return '&lt;'\n          case '\"':\n            return '&quot;' // '\n        }\n      })\n    }\n\n    function relURIMethod (term) {\n      return escapeForXML((this.base) ? Util.uri.refTo(this.base, term.uri) : term.uri)\n    }\n    var relURI = relURIMethod.bind(this)\n\n    // The tree for a subject\n    function subjectXMLTreeMethod (subject, stats) {\n      var results = []\n      var type, t, st, pred\n      var sts = stats.subjects[this.toStr(subject)] // relevant statements\n      if (typeof sts === 'undefined') { // empty bnode\n        return propertyXMLTree(subject, stats)\n      }\n\n      // Sort only on the predicate, leave the order at object\n      // level undisturbed.  This leaves multilingual content in\n      // the order of entry (for partner literals), which helps\n      // readability.\n      //\n      // For the predicate sort, we attempt to split the uri\n      // as a hint to the sequence\n      sts.sort(function (a, b) {\n        var ap = a.predicate.uri\n        var bp = b.predicate.uri\n        if (ap.substring(0, liPrefix.length) === liPrefix || bp.substring(0, liPrefix.length) === liPrefix) { // we're only interested in sorting list items\n          return ap.localeCompare(bp)\n        }\n\n        var as = ap.substring(liPrefix.length)\n        var bs = bp.substring(liPrefix.length)\n        var an = parseInt(as, 10)\n        var bn = parseInt(bs, 10)\n        if (isNaN(an) || isNaN(bn) ||\n          an !== as || bn !== bs) { // we only care about integers\n          return ap.localeCompare(bp)\n        }\n\n        return an - bn\n      })\n\n      for (var i = 0; i < sts.length; i++) {\n        st = sts[i]\n        // look for a type\n        if (st.predicate.uri === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' && !type && st.object.termType === 'NamedNode') {\n          type = st.object\n          continue // don't include it as a child element\n        }\n\n        // see whether predicate can be replaced with \"li\"\n        pred = st.predicate\n        if (pred.uri.substr(0, liPrefix.length) === liPrefix) {\n          var number = pred.uri.substr(liPrefix.length)\n          // make sure these are actually numeric list items\n          var intNumber = parseInt(number, 10)\n          if (number === intNumber.toString()) {\n            // was numeric; don't need to worry about ordering since we've already\n            // sorted the statements\n            pred = this.rdfFactory.namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#li')\n          }\n        }\n\n        t = qname(pred)\n        switch (st.object.termType) {\n          case 'BlankNode':\n            if (stats.incoming[st.object].length === 1) { // there should always be something in the incoming array for a bnode\n              results = results.concat(['<' + t + ' rdf:parseType=\"Resource\">',\n                subjectXMLTree(st.object, stats),\n                '</' + t + '>'])\n            } else {\n              results = results.concat(['<' + t + ' rdf:nodeID=\"' +\n                st.object.toNT().slice(2) + '\"/>'])\n            }\n            break\n          case 'NamedNode':\n            results = results.concat(['<' + t + ' rdf:resource=\"' +\n              relURI(st.object) + '\"/>'])\n            break\n          case 'Literal':\n            results = results.concat(['<' + t +\n            (st.object.datatype.equals(this.xsd.string)\n              ? ''\n              : ' rdf:datatype=\"' + escapeForXML(st.object.datatype.uri) + '\"') +\n            (st.object.language ? ' xml:lang=\"' + st.object.language + '\"' : '') +\n            '>' + escapeForXML(st.object.value) +\n            '</' + t + '>'])\n            break\n          case 'Collection':\n            results = results.concat(['<' + t + ' rdf:parseType=\"Collection\">',\n              collectionXMLTree(st.object, stats),\n              '</' + t + '>'])\n            break\n          default:\n            throw new Error(\"Can't serialize object of type \" + st.object.termType + ' into XML')\n        } // switch\n      }\n\n      var tag = type ? qname(type) : 'rdf:Description'\n\n      var attrs = ''\n      if (subject.termType === 'BlankNode') {\n        if (!stats.incoming[subject] || stats.incoming[subject].length !== 1) { // not an anonymous bnode\n          attrs = ' rdf:nodeID=\"' + subject.toNT().slice(2) + '\"'\n        }\n      } else {\n        attrs = ' rdf:about=\"' + relURI(subject) + '\"'\n      }\n\n      return [ '<' + tag + attrs + '>' ].concat([results]).concat(['</' + tag + '>'])\n    }\n\n    var subjectXMLTree = subjectXMLTreeMethod.bind(this)\n\n    function collectionXMLTree (subject, stats) {\n      var res = []\n      for (var i = 0; i < subject.elements.length; i++) {\n        res.push(subjectXMLTree(subject.elements[i], stats))\n      }\n      return res\n    }\n\n    // The property tree for a single subject or anonymos node\n    function propertyXMLTreeMethod (subject, stats) {\n      var results = []\n      var sts = stats.subjects[this.toStr(subject)] // relevant statements\n      if (!sts) return results // No relevant statements\n      sts.sort()\n      for (var i = 0; i < sts.length; i++) {\n        var st = sts[i]\n        switch (st.object.termType) {\n          case 'BlankNode':\n            if (stats.rootsHash[st.object.toNT()]) { // This bnode has been done as a root -- no content here @@ what bout first time\n              results = results.concat(['<' + qname(st.predicate) + ' rdf:nodeID=\"' + st.object.toNT().slice(2) + '\">',\n                '</' + qname(st.predicate) + '>'])\n            } else {\n              results = results.concat(['<' + qname(st.predicate) + ' rdf:parseType=\"Resource\">',\n                propertyXMLTree(st.object, stats),\n                '</' + qname(st.predicate) + '>'])\n            }\n            break\n          case 'NamedNode':\n            results = results.concat(['<' + qname(st.predicate) + ' rdf:resource=\"' +\n              relURI(st.object) + '\"/>'])\n            break\n          case 'Literal':\n            results = results.concat(['<' + qname(st.predicate) +\n              (st.object.datatype.equals(this.xsd.string) ? '' : ' rdf:datatype=\"' + escapeForXML(st.object.datatype.value) + '\"') +\n              (st.object.language ? ' xml:lang=\"' + st.object.language + '\"' : '') +\n              '>' + escapeForXML(st.object.value) +\n              '</' + qname(st.predicate) + '>'])\n            break\n          case 'Collection':\n            results = results.concat(['<' + qname(st.predicate) + ' rdf:parseType=\"Collection\">',\n              collectionXMLTree(st.object, stats),\n              '</' + qname(st.predicate) + '>'])\n            break\n          default:\n            throw new Error(\"Can't serialize object of type \" + st.object.termType + ' into XML')\n        } // switch\n      }\n      return results\n    }\n    var propertyXMLTree = propertyXMLTreeMethod.bind(this)\n\n    function qnameMethod (term) {\n      var uri = term.uri\n\n      var j = uri.indexOf('#')\n      if (j < 0 && this.flags.indexOf('/') < 0) {\n        j = uri.lastIndexOf('/')\n      }\n      if (j < 0) throw new Error('Cannot make qname out of <' + uri + '>')\n\n      for (var k = j + 1; k < uri.length; k++) {\n        if (this._notNameChars.indexOf(uri[k]) >= 0) {\n          throw new Error('Invalid character \"' + uri[k] + '\" cannot be in XML qname for URI: ' + uri)\n        }\n      }\n      var localid = uri.slice(j + 1)\n      var namesp = uri.slice(0, j + 1)\n      if (this.defaultNamespace && this.defaultNamespace === namesp &&\n        this.flags.indexOf('d') < 0) { // d -> suppress default\n        return localid\n      }\n      var prefix = this.prefixes[namesp]\n      if (!prefix) prefix = this.makeUpPrefix(namesp)\n      namespaceCounts[namesp] = true\n      return prefix + ':' + localid\n    }\n    var qname = qnameMethod.bind(this)\n\n    // Body of toXML:\n\n    var tree = statementListToXMLTree(sts)\n    var str = '<rdf:RDF'\n    if (this.defaultNamespace) {\n      str += ' xmlns=\"' + escapeForXML(this.defaultNamespace) + '\"'\n    }\n    for (var ns in namespaceCounts) {\n      if (!namespaceCounts.hasOwnProperty(ns)) continue\n      // Rel uris in xml ns is not strictly allowed in the XMLNS spec but needed in practice often\n      var ns2 = (this.base && this.flags.includes('z')) ? Util.uri.refTo(this.base, ns) : ns\n      str += '\\n xmlns:' + this.prefixes[ns] + '=\"' + escapeForXML(ns2) + '\"'\n    }\n    str += '>'\n\n    var tree2 = [str, tree, '</rdf:RDF>'] // @@ namespace declrations\n    return XMLtreeToString(tree2, -1)\n  } // End @@ body\n}\n\n// String escaping utilities\n\nfunction hexify (str) { // also used in parser\n  return encodeURI(str)\n}\n\nfunction backslashUify (str) {\n  var res = ''\n  var k\n  for (var i = 0; i < str.length; i++) {\n    k = str.charCodeAt(i)\n    if (k > 65535) {\n      res += '\\\\U' + ('00000000' + k.toString(16)).slice(-8) // convert to upper?\n    } else if (k > 126) {\n      res += '\\\\u' + ('0000' + k.toString(16)).slice(-4)\n    } else {\n      res += str[i]\n    }\n  }\n  return res\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import Node from './node-internal'\nimport {\n  Bindings,\n  GraphType,\n  ObjectType,\n  PredicateType,\n  SubjectType,\n  DefaultGraphTermType,\n} from './types'\nimport DefaultGraphNode, { isDefaultGraph } from './default-graph'\nimport { Quad, DefaultGraph } from './tf-types'\n\nconst defaultGraph = new DefaultGraphNode()\n\n/** A Statement represents an RDF Triple or Quad. */\nexport default class Statement<\n    S extends SubjectType = SubjectType,\n    P extends PredicateType = PredicateType,\n    O extends ObjectType = ObjectType,\n    G extends GraphType = GraphType\n  >\n  implements Quad<S, P, O, G | DefaultGraph> {\n\n  /** The subject of the triple.  What the Statement is about. */\n  subject: S\n\n  /** The relationship which is asserted between the subject and object */\n  predicate: P\n\n  /** The thing or data value which is asserted to be related to the subject */\n  object: O\n\n  /**\n   * The graph param is a named node of the document in which the triple when\n   *  it is stored on the web.\n   */\n  graph: G | DefaultGraph\n\n  /**\n   * Construct a new statement\n   *\n   * @param subject - The subject of the triple.  What the fact is about\n   * @param predicate - The relationship which is asserted between the subject and object\n   * @param object - The thing or data value which is asserted to be related to the subject\n   * @param {NamedNode} graph - The document where the triple is or was or will be stored on the web.\n   *\n   * The graph param is a named node of the document in which the triple when it is stored\n   *  on the web. It exists because when you have read data from various places in the web,\n   *  the “graph” tells you _why_ you have the triple. (At the moment, it is just the\n   *  document, in future it could be an inference step)\n   *\n   * When you do UpdateManager.update() then the graph’s of all the statements must be the same,\n   *  and give the document you are patching. In future, we may have a more\n   *  powerful update() which can update more than one document.\n   */\n  constructor (\n    subject: S,\n    predicate: P,\n    object: O,\n    graph?: G | DefaultGraph,\n  ) {\n    this.subject = Node.fromValue(subject)\n    this.predicate = Node.fromValue(predicate)\n    this.object = Node.fromValue(object)\n    this.graph = graph == undefined ? defaultGraph : Node.fromValue(graph) // property currently used by rdflib\n  }\n\n  /** Alias for graph, favored by Tim */\n  get why () {\n    return this.graph\n  }\n\n  set why (g) {\n    this.graph = g\n  }\n\n  /**\n   * Checks whether two statements are the same\n   * @param other - The other statement\n   */\n  equals (other: Quad): boolean {\n    return (\n      other.subject.equals(this.subject) &&\n      other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) &&\n      other.graph.equals(this.graph)\n    )\n  }\n\n  /**\n   * Creates a statement with the bindings substituted\n   * @param bindings The bindings\n   */\n  substitute (bindings: Bindings): Statement {\n    const y = new Statement(\n      this.subject.substitute(bindings),\n      this.predicate.substitute(bindings),\n      this.object.substitute(bindings),\n      isDefaultGraph(this.graph) ? this.graph :\n        (this.graph as G).substitute(bindings)\n    ) // 2016\n    console.log('@@@ statement substitute:' + y)\n    return y\n  }\n\n  /** Creates a canonical string representation of this statement. */\n  toCanonical (): string {\n    let terms = [\n      this.subject.toCanonical(),\n      this.predicate.toCanonical(),\n      this.object.toCanonical()\n    ]\n    if (this.graph && this.graph.termType !== DefaultGraphTermType) {\n        terms.push(this.graph.toCanonical())\n    }\n    return terms.join(' ') + ' .'\n  }\n\n  /** Creates a n-triples string representation of this statement */\n  toNT (): string {\n    return [\n      this.subject.toNT(),\n      this.predicate.toNT(),\n      this.object.toNT(),\n    ].join(' ') + ' .'\n  }\n\n  /** Creates a n-quads string representation of this statement */\n  toNQ (): string {\n    return [\n      this.subject.toNT(),\n      this.predicate.toNT(),\n      this.object.toNT(),\n      isDefaultGraph(this.graph) ? '' : (this.graph as G).toNT()\n    ].join(' ') + ' .'\n  }\n\n  /** Creates a string representation of this statement */\n  toString (): string {\n    return this.toNT()\n  }\n}\n","import DataFactory from './factories/extended-term-factory'\nimport jsonldParser from './jsonldparser'\n// @ts-ignore is this injected?\nimport { Parser as N3jsParser } from 'n3'  // @@ Goal: remove this dependency\nimport N3Parser from './n3parser'\nimport { parseRDFaDOM } from './rdfaparser'\nimport RDFParser from './rdfxmlparser'\nimport sparqlUpdateParser from './patch-parser'\nimport * as Util from './utils-js'\nimport Formula from './formula'\nimport { ContentType, TurtleContentType, N3ContentType, RDFXMLContentType, XHTMLContentType, HTMLContentType, SPARQLUpdateContentType, SPARQLUpdateSingleMatchContentType, JSONLDContentType, NQuadsContentType, NQuadsAltContentType } from './types'\nimport { Quad } from './tf-types'\n\ntype CallbackFunc = (error: any, kb: Formula | null) => void\n\n/**\n * Parse a string and put the result into the graph kb.\n * Normal method is sync.\n * Unfortunately jsdonld is currently written to need to be called async.\n * Hence the mess below with executeCallback.\n * @param str - The input string to parse\n * @param kb - The store to use\n * @param base - The base URI to use\n * @param contentType - The MIME content type string for the input - defaults to text/turtle\n * @param [callback] - The callback to call when the data has been loaded\n */\nexport default function parse (\n  str: string,\n  kb: Formula,\n  base: string,\n  contentType: string | ContentType = 'text/turtle',\n  callback?: CallbackFunc\n) {\n  contentType = contentType || TurtleContentType\n  contentType = contentType.split(';')[0] as ContentType\n  try {\n    if (contentType === N3ContentType || contentType === TurtleContentType) {\n      var p = N3Parser(kb, kb, base, base, null, null, '', null)\n      p.loadBuf(str)\n      executeCallback()\n    } else if (contentType === RDFXMLContentType) {\n      var parser = new RDFParser(kb)\n      parser.parse(Util.parseXML(str), base, kb.sym(base))\n      executeCallback()\n    } else if (contentType === XHTMLContentType) {\n      parseRDFaDOM(Util.parseXML(str, {contentType: XHTMLContentType}), kb, base)\n      executeCallback()\n    } else if (contentType === HTMLContentType) {\n      parseRDFaDOM(Util.parseXML(str, {contentType: HTMLContentType}), kb, base)\n      executeCallback()\n    } else if ((contentType === SPARQLUpdateContentType) || (contentType === SPARQLUpdateSingleMatchContentType)) { // @@ we handle a subset\n      sparqlUpdateParser(str, kb, base)\n      executeCallback()\n    } else if (contentType === JSONLDContentType) {\n      jsonldParser(str, kb, base, executeCallback)\n    } else if (contentType === NQuadsContentType ||\n               contentType === NQuadsAltContentType) {\n      var n3Parser = new N3jsParser({ factory: DataFactory })\n      nquadCallback(null, str)\n    } else if (contentType === undefined) {\n      throw new Error(\"contentType is undefined\")\n    } else {\n      throw new Error(\"Don't know how to parse \" + contentType + ' yet')\n    }\n  } catch (e) {\n    // @ts-ignore\n    executeErrorCallback(e)\n  }\n\n  (parse as any).handled= {\n    'text/n3': true,\n    'text/turtle': true,\n    'application/rdf+xml': true,\n    'application/xhtml+xml': true,\n    'text/html': true,\n    'application/sparql-update': true,\n    'application/sparql-update-single-match': true,\n    'application/ld+json': true,\n    'application/nquads' : true,\n    'application/n-quads' : true\n  }\n\n  function executeCallback () {\n    if (callback) {\n      callback(null, kb)\n    } else {\n      return\n    }\n  }\n\n  function executeErrorCallback (e: Error): void {\n    if (\n      // TODO: Always true, what is the right behavior\n      contentType !== JSONLDContentType ||\n      // @ts-ignore always true?\n      contentType !== NQuadsContentType ||\n      // @ts-ignore always true?\n      contentType !== NQuadsAltContentType\n    ) {\n      if (callback) {\n        callback(e, kb)\n      } else {\n        let e2 = new Error('' + e + ' while trying to parse <' + base + '> as ' + contentType)\n        //@ts-ignore .cause is not a default error property\n        e2.cause = e\n        throw e2\n      }\n    }\n  }\n/*\n  function setJsonLdBase (doc, base) {\n    if (doc instanceof Array) {\n      return\n    }\n    if (!('@context' in doc)) {\n      doc['@context'] = {}\n    }\n    doc['@context']['@base'] = base\n  }\n*/\n  function nquadCallback (err?: Error | null, nquads?: string): void {\n    if (err) {\n      (callback as CallbackFunc)(err, kb)\n    }\n    try {\n      n3Parser.parse(nquads, tripleCallback)\n    } catch (err) {\n      (callback as CallbackFunc)(err, kb)\n    }\n  }\n\n  function tripleCallback (err: Error, triple: Quad) {\n    if (triple) {\n      kb.add(triple.subject, triple.predicate, triple.object, triple.graph)\n    } else {\n      (callback as CallbackFunc)(err, kb)\n    }\n  }\n}\n","import ClassOrder from './class-order'\nimport Collection from './collection'\nimport CanonicalDataFactory from './factories/canonical-data-factory'\nimport log from './log'\nimport RDFlibNamedNode from './named-node'\nimport Namespace from './namespace'\nimport Node from './node-internal'\nimport Serializer from './serialize'\nimport Statement from './statement'\nimport {\n  Bindings,\n  GraphTermType,\n} from './types'\nimport { isStatement } from './utils/terms'\nimport Variable from './variable'\nimport {\n  Indexable,\n  TFIDFactoryTypes,\n} from './factories/factory-types'\nimport { appliedFactoryMethods, arrayToStatements } from './utils'\nimport {\n  RdfJsDataFactory,\n  Quad_Graph,\n  Quad_Object,\n  Quad_Predicate,\n  Quad,\n  Quad_Subject,\n  Term,\n} from './tf-types'\nimport Fetcher from './fetcher'\nimport BlankNode from './blank-node'\nimport NamedNode from './named-node'\n\nexport interface FormulaOpts {\n  dataCallback?: (q: Quad) => void\n  rdfArrayRemove?: (arr: Quad[], q: Quad) => void\n  rdfFactory?: RdfJsDataFactory\n}\n\ninterface BooleanMap {\n  [uri: string]: boolean;\n}\n\ninterface MembersMap {\n  [uri: string]: Quad;\n}\n\ninterface UriMap {\n  [uri: string]: string;\n}\n\n/**\n * A formula, or store of RDF statements\n */\nexport default class Formula extends Node {\n  termType: typeof GraphTermType = GraphTermType\n\n  classOrder = ClassOrder.Graph\n\n  /**\n   * The accompanying fetcher instance.\n   *\n   * Is set by the fetcher when initialized.\n   */\n  fetcher?: Fetcher\n\n  isVar = 0\n\n  /**\n   * A namespace for the specified namespace's URI\n   * @param nsuri The URI for the namespace\n   */\n  ns = Namespace\n\n  /** The factory used to generate statements and terms */\n  rdfFactory: any\n\n  /**\n   * Initializes this formula\n   * @constructor\n   * @param statements - Initial array of statements\n   * @param constraints - initial array of constraints\n   * @param initBindings - initial bindings used in Query\n   * @param optional - optional\n   * @param opts\n   * @param opts.rdfFactory - The rdf factory that should be used by the store\n*/\n  constructor (\n    public statements: Array<Statement> = [],\n    public constraints: ReadonlyArray<any> = [],\n    public initBindings: ReadonlyArray<any> = [],\n    public optional: ReadonlyArray<any> = [],\n    opts: FormulaOpts = {}\n    ) {\n    super('')\n\n    this.rdfFactory = (opts && opts.rdfFactory) || CanonicalDataFactory\n    // Enable default factory methods on this while preserving factory context.\n    for(const factoryMethod of appliedFactoryMethods) {\n      this[factoryMethod] = (...args) => this.rdfFactory[factoryMethod](...args)\n    }\n  }\n\n  /** Add a statement from its parts\n   * @param subject - the first part of the statement\n   * @param predicate - the second part of the statement\n   * @param object - the third part of the statement\n   * @param graph - the last part of the statement\n   */\n  add (\n    subject: Quad_Subject | Quad | Quad[],\n    predicate?: Quad_Predicate,\n    object?: Term | string,\n    graph?: Quad_Graph\n  ): Statement | null | this | number {\n    if (arguments.length === 1) {\n      (subject as Quad[]).forEach(st => this.add(st.subject, st.predicate, st.object, st.graph))\n    }\n    return this.statements.push(this.rdfFactory.quad(subject, predicate, object, graph))\n  }\n\n  /** Add a statment object\n   * @param {Statement} statement - An existing constructed statement to add\n   */\n  addStatement (statement: Quad): Statement | null | this | number {\n    return this.add(statement)\n  }\n\n  /**\n   * Shortcut for adding blankNodes\n   * @param [id]\n   */\n  bnode (id?: string): BlankNode {\n    return this.rdfFactory.blankNode(id)\n  }\n\n  /**\n   * Adds all the statements to this formula\n   * @param statements - A collection of statements\n   */\n  addAll (statements: Quad[]): void {\n    statements.forEach(quad => {\n      this.add(quad.subject, quad.predicate, quad.object, quad.graph)\n    })\n  }\n\n  /** Follow link from one node, using one wildcard, looking for one\n  *\n  * For example, any(me, knows, null, profile)  - a person I know accoring to my profile .\n  * any(me, knows, null, null)  - a person I know accoring to anything in store .\n  * any(null, knows, me, null)  - a person who know me accoring to anything in store .\n  *\n  * @param s - A node to search for as subject, or if null, a wildcard\n  * @param p - A node to search for as predicate, or if null, a wildcard\n  * @param o - A node to search for as object, or if null, a wildcard\n  * @param g - A node to search for as graph, or if null, a wildcard\n  * @returns A node which match the wildcard position, or null\n  */\n  any(\n    s?: Quad_Subject | null,\n    p?: Quad_Predicate | null,\n    o?: Quad_Object | null,\n    g?: Quad_Graph | null\n  ): Node | null {\n    const st = this.anyStatementMatching(s, p, o, g)\n    if (st == null) {\n      return null\n    } else if (s == null) {\n      return st.subject\n    } else if (p == null) {\n      return st.predicate\n    } else if (o == null) {\n      return st.object\n    }\n\n    return null\n  }\n\n  /**\n   * Gets the value of a node that matches the specified pattern\n   * @param s The subject\n   * @param p The predicate\n   * @param o The object\n   * @param g The graph that contains the statement\n   */\n  anyValue(\n    s?: Quad_Subject | null,\n    p?: Quad_Predicate | null,\n    o?: Quad_Object | null,\n    g?: Quad_Graph | null\n  ): string | void {\n    const y = this.any(s, p, o, g)\n    return y ? y.value : void 0\n  }\n\n  /**\n   * Gets the first JavaScript object equivalent to a node based on the specified pattern\n   * @param s The subject\n   * @param p The predicate\n   * @param o The object\n   * @param g The graph that contains the statement\n   */\n  anyJS(\n    s?: Quad_Subject | null,\n    p?: Quad_Predicate | null,\n    o?: Quad_Object | null,\n    g?: Quad_Graph | null\n  ): any {\n    const y = this.any(s, p, o, g)\n    return y ? Node.toJS(y) : void 0\n  }\n\n  /**\n   * Gets the first statement that matches the specified pattern\n   */\n  anyStatementMatching(\n    s?: Quad_Subject | null,\n    p?: Quad_Predicate | null,\n    o?: Quad_Object | null,\n    g?: Quad_Graph | null\n  ): Statement | undefined {\n    let x = this.statementsMatching(s, p, o, g, true)\n    if (!x || x.length === 0) {\n      return undefined\n    }\n\n    return x[0]\n  }\n\n  /**\n   * Returns a unique index-safe identifier for the given term.\n   *\n   * Falls back to the rdflib hashString implementation if the given factory doesn't support id.\n   */\n  id (term: TFIDFactoryTypes): Indexable {\n    return this.rdfFactory.id(term)\n  }\n\n  /**\n   * Search the Store\n   * This is really a teaching method as to do this properly you would use IndexedFormula\n   *\n   * @param s - A node to search for as subject, or if null, a wildcard\n   * @param p - A node to search for as predicate, or if null, a wildcard\n   * @param o - A node to search for as object, or if null, a wildcard\n   * @param g - A node to search for as graph, or if null, a wildcard\n   * @param justOne - flag - stop when found one rather than get all of them?\n   * @returns {Array<Node>} - An array of nodes which match the wildcard position\n   */\n  statementsMatching<JustOne extends boolean = false>(\n    s?: Quad_Subject | null,\n    p?: Quad_Predicate | null,\n    o?: Quad_Object | null,\n    g?: Quad_Graph | null,\n    justOne?: boolean\n  ): Statement[] {\n    const sts = this.statements.filter(st =>\n      (!s || s.equals(st.subject)) &&\n      (!p || p.equals(st.predicate)) &&\n      (!o || o.equals(st.object)) &&\n      (!g || g.equals(st.graph))\n    )\n\n    if (justOne) {\n      return sts.length === 0 ? [] : [sts[0]]\n    }\n\n    return sts\n  }\n\n  /**\n   * Finds the types in the list which have no *stored* subtypes\n   * These are a set of classes which provide by themselves complete\n   * information -- the other classes are redundant for those who\n   * know the class DAG.\n   * @param types A map of the types\n   */\n  bottomTypeURIs (types) {\n    let bots\n    let bottom\n    let elt\n    let i\n    let len\n    let ref\n    let subs\n    let v\n    bots = []\n    for (let k in types) {\n      if (!types.hasOwnProperty(k)) continue\n      v = types[k]\n      subs = this.each(\n        void 0,\n        this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#subClassOf'),\n        this.rdfFactory.namedNode(k)\n      )\n      bottom = true\n      i = 0\n      for (len = subs.length; i < len; i++) {\n        elt = subs[i]\n        ref = elt.uri\n        if (ref in types) { // the subclass is one we know\n          bottom = false\n          break\n        }\n      }\n      if (bottom) {\n        bots[k] = v\n      }\n    }\n    return bots\n  }\n\n  /** Creates a new collection */\n  collection (): Collection {\n    return new Collection()\n  }\n\n  /** Follow links from one node, using one wildcard.\n  *\n  * For example, each(me, knows, null, profile)  - people I know accoring to my profile .\n  * each(me, knows, null, null)  - people I know accoring to anything in store .\n  * each(null, knows, me, null)  - people who know me accoring to anything in store .\n  *\n  * @param s - A node to search for as subject, or if null, a wildcard\n  * @param p - A node to search for as predicate, or if null, a wildcard\n  * @param o - A node to search for as object, or if null, a wildcard\n  * @param g - A node to search for as graph, or if null, a wildcard\n  * @returns {Array<Node>} - An array of nodes which match the wildcard position\n  */\n  each(\n    s?: Quad_Subject | null,\n    p?: Quad_Predicate | null,\n    o?: Quad_Object | null,\n    g?: Quad_Graph | null\n  ): Node[] {\n    const results: Node[] = []\n    let sts = this.statementsMatching(s, p, o, g, false)\n    if (s == null) {\n      for (let i = 0, len = sts.length; i < len; i++) {\n        results.push(sts[i].subject)\n      }\n    } else if (p == null) {\n      for (let l = 0, len1 = sts.length; l < len1; l++) {\n        results.push(sts[l].predicate)\n      }\n    } else if (o == null) {\n      for (let m = 0, len2 = sts.length; m < len2; m++) {\n        results.push(sts[m].object)\n      }\n    } else if (g == null) {\n      for (let q = 0, len3 = sts.length; q < len3; q++) {\n        results.push(new NamedNode(sts[q].graph.value))\n      }\n    }\n\n    return results\n  }\n\n  /**\n   * Test whether this formula is equals to {other}\n   * @param other - The other formula\n   */\n  equals(other: Formula): boolean {\n    if (!other) {\n      return false\n    }\n    return this.hashString() === other.hashString()\n  }\n\n  /**\n   * For thisClass or any subclass, anything which has it is its type\n   * or is the object of something which has the type as its range, or subject\n   * of something which has the type as its domain\n   * We don't bother doing subproperty (yet?)as it doesn't seeem to be used\n   * much.\n   * Get all the Classes of which we can RDFS-infer the subject is a member\n   * @return a hash of URIs\n   */\n  findMembersNT (thisClass) {\n    let len2: number\n    let len4: number\n    let m: number\n    let members: MembersMap\n    let pred: Quad_Predicate\n    let ref\n    let ref1: Quad[]\n    let ref2: Term[]\n    let ref3: Quad[]\n    let ref4: Term[]\n    let ref5: Quad[]\n    let seeds\n    let st\n    let u: number\n    seeds = {}\n    seeds[thisClass.toNT()] = true\n    members = {}\n    ref = this.transitiveClosure(seeds, this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#subClassOf'), true)\n    for (let t in ref) {\n      if (!ref.hasOwnProperty(t)) continue\n      ref1 = this.statementsMatching(void 0,\n        this.rdfFactory.namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n        this.fromNT(t))\n      for (let i = 0, len = ref1.length; i < len; i++) {\n        st = ref1[i]\n        members[st.subject.toNT()] = st\n      }\n      ref2 = this.each(void 0,\n        this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#domain'),\n        this.fromNT(t))\n      for (let l = 0, len1 = ref2.length; l < len1; l++) {\n        pred = ref2[l] as Quad_Predicate\n        ref3 = this.statementsMatching(void 0, pred)\n        for (m = 0, len2 = ref3.length; m < len2; m++) {\n          st = ref3[m]\n          members[st.subject.toNT()] = st\n        }\n      }\n      ref4 = this.each(void 0,\n        this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#range'),\n        this.fromNT(t))\n      for (let q = 0, len3 = ref4.length; q < len3; q++) {\n        pred = ref4[q] as Quad_Predicate\n        ref5 = this.statementsMatching(void 0, pred)\n        for (u = 0, len4 = ref5.length; u < len4; u++) {\n          st = ref5[u]\n          members[st.object.toNT()] = st\n        }\n      }\n    }\n\n    return members\n  }\n\n  /**\n   * For thisClass or any subclass, anything which has it is its type\n   * or is the object of something which has the type as its range, or subject\n   * of something which has the type as its domain\n   * We don't bother doing subproperty (yet?)as it doesn't seeem to be used\n   * much.\n   * Get all the Classes of which we can RDFS-infer the subject is a member\n   * @param subject - A named node\n   */\n  findMemberURIs(subject: Node): UriMap {\n    return this.NTtoURI(this.findMembersNT(subject))\n  }\n\n  /**\n   * Get all the Classes of which we can RDFS-infer the subject is a superclass\n   * Returns a hash table where key is NT of type and value is statement why we\n   * think so.\n   * Does NOT return terms, returns URI strings.\n   * We use NT representations in this version because they handle blank nodes.\n   */\n  findSubClassesNT(subject: Node): { [uri: string]: boolean } {\n    let types = {}\n    types[subject.toNT()] = true\n    return this.transitiveClosure(\n      types,\n      this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#subClassOf'),\n      true\n    )\n  }\n\n  /**\n   * Get all the Classes of which we can RDFS-infer the subject is a subclass\n   * @param {RDFlibNamedNode} subject - The thing whose classes are to be found\n   * @returns a hash table where key is NT of type and value is statement why we\n   * think so.\n   * Does NOT return terms, returns URI strings.\n   * We use NT representations in this version because they handle blank nodes.\n   */\n  findSuperClassesNT(subject: Node): { [uri: string]: boolean } {\n    let types = {}\n    types[subject.toNT()] = true\n    return this.transitiveClosure(types,\n      this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#subClassOf'), false)\n  }\n\n  /**\n   * Get all the Classes of which we can RDFS-infer the subject is a member\n   * todo: This will loop is there is a class subclass loop (Sublass loops are\n   * not illegal)\n   * @param {RDFlibNamedNode} subject - The thing whose classes are to be found\n   * @returns a hash table where key is NT of type and value is statement why we think so.\n   * Does NOT return terms, returns URI strings.\n   * We use NT representations in this version because they handle blank nodes.\n   */\n  findTypesNT (subject) {\n    let domain\n    let range\n    let rdftype\n    let ref\n    let ref1\n    let ref2\n    let ref3\n    let st\n    let types\n    rdftype = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'\n    types = []\n    ref = this.statementsMatching(subject, void 0, void 0)\n    for (let i = 0, len = ref.length; i < len; i++) {\n      st = ref[i]\n      if (st.predicate.uri === rdftype) {\n        types[st.object.toNT()] = st\n      } else {\n        ref1 = this.each(\n          st.predicate,\n          this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#domain')\n        )\n        for (let l = 0, len1 = ref1.length; l < len1; l++) {\n          range = ref1[l]\n          types[range.toNT()] = st\n        }\n      }\n    }\n    ref2 = this.statementsMatching(void 0, void 0, subject)\n    for (let m = 0, len2 = ref2.length; m < len2; m++) {\n      st = ref2[m]\n      ref3 = this.each(\n        st.predicate,\n        this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#range')\n      )\n      for (let q = 0, len3 = ref3.length; q < len3; q++) {\n        domain = ref3[q]\n        types[domain.toNT()] = st\n      }\n    }\n    return this.transitiveClosure(\n      types,\n      this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#subClassOf'),\n      false\n    )\n  }\n\n  /**\n   * Get all the Classes of which we can RDFS-infer the subject is a member\n   * todo: This will loop is there is a class subclass loop (Sublass loops are\n   * not illegal)\n   * Returns a hash table where key is NT of type and value is statement why we\n   * think so.\n   * Does NOT return terms, returns URI strings.\n   * We use NT representations in this version because they handle blank nodes.\n   * @param subject - A subject node\n   */\n  findTypeURIs(subject: Quad_Subject): UriMap {\n    return this.NTtoURI(this.findTypesNT(subject))\n  }\n\n  /** Trace statements which connect directly, or through bnodes\n   *\n   * @param subject - The node to start looking for statments\n   * @param doc - The document to be searched, or null to search all documents\n   * @returns an array of statements, duplicate statements are suppresssed.\n   */\n  connectedStatements(\n    subject: Quad_Subject,\n    doc: Quad_Graph,\n    excludePredicateURIs?: ReadonlyArray<string>\n  ): Statement[] {\n    excludePredicateURIs = excludePredicateURIs || []\n    let todo = [subject]\n    let done: { [k: string]: boolean } = {}\n    let doneArcs: { [k: string]: boolean }  = {}\n    let result: Statement[] = []\n    let self = this\n    let follow = function (x) {\n      let queue = function (x) {\n        if (x.termType === 'BlankNode' && !done[x.value]) {\n          done[x.value] = true\n          todo.push(x)\n        }\n      }\n      let sts = self.statementsMatching(null, null, x, doc)\n        .concat(self.statementsMatching(x, null, null, doc))\n      sts = sts.filter(function (st): boolean {\n        if (excludePredicateURIs![st.predicate.value]) return false\n        let hash = (st as Statement).toNT()\n        if (doneArcs[hash]) return false\n        doneArcs[hash] = true\n        return true\n      }\n      )\n      sts.forEach(function (st) {\n        queue(st.subject)\n        queue(st.object)\n      })\n      result = result.concat(sts)\n    }\n    while (todo.length) {\n      follow(todo.shift())\n    }\n    // console.log('' + result.length + ' statements about ' + subject)\n    return result\n  }\n\n  /**\n   * Creates a new empty formula\n   *\n   * @param _features - Not applicable, but necessary for typing to pass\n   */\n  formula(_features?: ReadonlyArray<string>): Formula {\n    return new Formula()\n  }\n\n  /**\n   * Transforms an NTriples string format into a Node.\n   * The blank node bit should not be used on program-external values; designed\n   * for internal work such as storing a blank node id in an HTML attribute.\n   * This will only parse the strings generated by the various toNT() methods.\n   */\n  fromNT (str) {\n    let dt, k, lang\n    switch (str[0]) {\n      case '<':\n        return this.sym(str.slice(1, -1))\n      case '\"':\n        lang = void 0\n        dt = void 0\n        k = str.lastIndexOf('\"')\n        if (k < str.length - 1) {\n          if (str[k + 1] === '@') {\n            lang = str.slice(k + 2)\n          } else if (str.slice(k + 1, k + 3) === '^^') {\n            dt = this.fromNT(str.slice(k + 3))\n          } else {\n            throw new Error(\"Can't convert string from NT: \" + str)\n          }\n        }\n        str = str.slice(1, k)\n        str = str.replace(/\\\\\"/g, '\"')\n        str = str.replace(/\\\\n/g, '\\n')\n        str = str.replace(/\\\\\\\\/g, '\\\\')\n        return this.rdfFactory.literal(str, lang || dt)\n      case '_':\n        return this.rdfFactory.blankNode(str.slice(2))\n      case '?':\n        return new Variable(str.slice(1))\n    }\n    throw new Error(\"Can't convert from NT: \" + str)\n  }\n\n  /** Returns true if this formula holds the specified statement(s) */\n  holds (s: any | any[], p?, o?, g?): boolean {\n    let i\n    if (arguments.length === 1) {\n      if (!s) {\n        return true\n      }\n      if (s instanceof Array) {\n        for (i = 0; i < s.length; i++) {\n          if (!this.holds(s[i])) {\n            return false\n          }\n        }\n        return true\n      } else if (isStatement(s)) {\n        return this.holds(s.subject, s.predicate, s.object, s.graph)\n      } else if (s.statements) {\n        return this.holds(s.statements)\n      }\n    }\n\n    let st = this.anyStatementMatching(s, p, o, g)\n    return st != null\n  }\n\n  /**\n   * Returns true if this formula holds the specified {statement}\n   */\n  holdsStatement (statement) {\n    return this.holds(\n      statement.subject,\n      statement.predicate,\n      statement.object,\n      statement.graph,\n    )\n  }\n\n  /**\n   * Used by the n3parser to generate list elements\n   * @param values - The values of the collection\n   * @param context - The store\n   * @return {BlankNode|Collection} - The term for the statement\n   */\n  list (values, context) {\n    if (context.rdfFactory.supports[\"COLLECTIONS\"]) {\n      const collection = context.rdfFactory.collection()\n      values.forEach(function (val) {\n        collection.append(val)\n      })\n      return collection\n    } else {\n      const node = context.rdfFactory.blankNode()\n      const statements = arrayToStatements(context.rdfFactory, node, values)\n      context.addAll(statements)\n      return node\n    }\n  }\n\n  /**\n   * Transform a collection of NTriple URIs into their URI strings\n   * @param t - Some iterable collection of NTriple URI strings\n   * @return A collection of the URIs as strings\n   * todo: explain why it is important to go through NT\n   */\n  NTtoURI (t) {\n    let k, v\n    let uris = {}\n    for (k in t) {\n      if (!t.hasOwnProperty(k)) continue\n      v = t[k]\n      if (k[0] === '<') {\n        uris[k.slice(1, -1)] = v\n      }\n    }\n    return uris\n  }\n\n  /**\n   * Serializes this formula\n   * @param base - The base string\n   * @param contentType - The content type of the syntax to use\n   * @param provenance - The provenance URI\n   */\n  serialize (base, contentType, provenance) {\n    let documentString\n    let sts\n    let sz\n    sz = Serializer(this)\n    sz.suggestNamespaces(this.ns)\n    sz.setBase(base)\n    if (provenance) {\n      sts = this.statementsMatching(void 0, void 0, void 0, provenance)\n    } else {\n      sts = this.statements\n    }\n    switch (\n    contentType != null ? contentType : 'text/n3') {\n      case 'application/rdf+xml':\n        documentString = sz.statementsToXML(sts)\n        break\n      case 'text/n3':\n      case 'text/turtle':\n        documentString = sz.statementsToN3(sts)\n        break\n      default:\n        throw new Error('serialize: Content-type ' + contentType +\n          ' not supported.')\n    }\n    return documentString\n  }\n\n  /**\n   * Creates a new formula with the substituting bindings applied\n   * @param bindings - The bindings to substitute\n   */\n  substitute<T extends Node = Formula>(bindings: Bindings): T {\n    let statementsCopy = this.statements.map(function (ea) {\n      return (ea as Statement).substitute(bindings)\n    })\n    console.log('Formula subs statmnts:' + statementsCopy)\n    const y = new Formula()\n    y.addAll(statementsCopy as Quad[])\n    console.log('indexed-form subs formula:' + y)\n    return y as unknown as T\n  }\n\n  sym (uri: string, name?): NamedNode {\n    if (name) {\n      throw new Error('This feature (kb.sym with 2 args) is removed. Do not assume prefix mappings.')\n    }\n    return this.rdfFactory.namedNode(uri)\n  }\n\n  /**\n   * Gets the node matching the specified pattern. Throws when no match could be made.\n   * @param s - The subject\n   * @param p - The predicate\n   * @param o - The object\n   * @param g - The graph that contains the statement\n   */\n  the (\n    s?: Quad_Subject | null,\n    p?: Quad_Predicate | null,\n    o?: Quad_Object | null,\n    g?: Quad_Graph | null\n  ): Node | null | undefined {\n    let x = this.any(s, p, o, g)\n    if (x == null) {\n      log.error('No value found for the() {' + s + ' ' + p + ' ' + o + '}.')\n    }\n\n    return x\n  }\n\n  /**\n   * RDFS Inference\n   * These are hand-written implementations of a backward-chaining reasoner\n   * over the RDFS axioms.\n   * @param seeds - A hash of NTs of classes to start with\n   * @param predicate - The property to trace though\n   * @param inverse - Trace inverse direction\n   */\n  transitiveClosure(\n    seeds: BooleanMap,\n    predicate: Quad_Predicate,\n    inverse?: boolean\n  ): {\n    [uri: string]: boolean;\n  } {\n    let elt, i, len, s, sups, t\n    let agenda = {}\n    Object.assign(agenda, seeds)  // make a copy\n    let done = {}  // classes we have looked up\n    while (true) {\n      t = (function () {\n        for (let p in agenda) {\n          if (!agenda.hasOwnProperty(p)) continue\n          return p\n        }\n      })()\n      if (t == null) {\n        return done\n      }\n      sups = inverse ?\n        this.each(void 0, predicate, this.fromNT(t))\n        : this.each(this.fromNT(t) as Quad_Predicate, predicate)\n      for (i = 0, len = sups.length; i < len; i++) {\n        elt = sups[i]\n        s = elt.toNT()\n        if (s in done) {\n          continue\n        }\n        if (s in agenda) {\n          continue\n        }\n        agenda[s] = agenda[t]\n      }\n      done[t] = agenda[t]\n      delete agenda[t]\n    }\n  }\n\n  /**\n   * Finds the types in the list which have no *stored* supertypes\n   * We exclude the universal class, owl:Things and rdf:Resource, as it is\n   * information-free.\n   * @param types - The types\n   */\n  topTypeURIs(types: {\n    [id: string]: string | RDFlibNamedNode;\n  }): {\n    [id: string]: string | RDFlibNamedNode;\n  } {\n    let i\n    let j\n    let k\n    let len\n    let n\n    let ref\n    let tops\n    let v\n    tops = []\n    for (k in types) {\n      if (!types.hasOwnProperty(k)) continue\n      v = types[k]\n      n = 0\n      ref = this.each(\n        this.rdfFactory.namedNode(k),\n        this.rdfFactory.namedNode('http://www.w3.org/2000/01/rdf-schema#subClassOf')\n      )\n      for (i = 0, len = ref.length; i < len; i++) {\n        j = ref[i]\n        if (j.uri !== 'http://www.w3.org/2000/01/rdf-schema#Resource') {\n          n++\n          break\n        }\n      }\n      if (!n) {\n        tops[k] = v\n      }\n    }\n    if (tops['http://www.w3.org/2000/01/rdf-schema#Resource']) {\n      delete tops['http://www.w3.org/2000/01/rdf-schema#Resource']\n    }\n    if (tops['http://www.w3.org/2002/07/owl#Thing']) {\n      delete tops['http://www.w3.org/2002/07/owl#Thing']\n    }\n    return tops\n  }\n\n  /**\n   * Serializes this formula to a string\n   */\n  toString(): string {\n    return '{' + this.statements.join('\\n') + '}'\n  }\n\n  /**\n   * Gets a new variable\n   * @param name - The variable's name\n   */\n  public variable(name: string): Variable {\n    return new Variable(name)\n  }\n\n  /**\n   * Gets the number of statements in this formula that matches the specified pattern\n   * @param s - The subject\n   * @param p - The predicate\n   * @param o - The object\n   * @param g - The graph that contains the statement\n   */\n  whether(\n    s?: Quad_Subject | null,\n    p?: Quad_Predicate | null,\n    o?: Quad_Object | null,\n    g?: Quad_Graph | null\n  ): number {\n    return this.statementsMatching(s, p, o, g, false).length\n  }\n}\n","import Collection from '../collection'\nimport CanonicalDataFactory from './canonical-data-factory'\nimport { ValueType, CollectionTermType } from '../types'\nimport { DataFactory, DefaultFactoryTypes, Feature, Indexable } from './factory-types'\nimport { isCollection, isVariable } from '../utils/terms'\nimport Variable from '../variable'\nimport { Term } from '../tf-types'\n\ninterface CollectionFactory extends DataFactory {\n  collection(elements: ReadonlyArray<ValueType>): Collection\n}\n\n/**\n * Data factory which also supports Collections\n *\n * Necessary for preventing circular dependencies.\n */\nconst ExtendedTermFactory: CollectionFactory = {\n  ...CanonicalDataFactory,\n\n  supports: {\n    [Feature.collections]: true,\n    [Feature.defaultGraphType]: false,\n    [Feature.equalsMethod]: true,\n    [Feature.identity]: false,\n    [Feature.id]: true,\n    [Feature.reversibleId]: false,\n    [Feature.variableType]: true,\n  },\n\n  /**\n   * Creates a new collection\n   * @param elements - The initial element\n   */\n  collection (elements: ReadonlyArray<ValueType>): Collection {\n    return new Collection(elements)\n  },\n\n  id (term: Term | DefaultFactoryTypes): Indexable {\n    if (isCollection(term)) {\n      return `( ${term.elements.map((e) => {\n        return this.id(e) }).join(', ')} )`\n    }\n\n    if (isVariable(term)) {\n      return Variable.toString(term)\n    }\n\n    return CanonicalDataFactory.id(term)\n  },\n\n  termToNQ (term: Term): string {\n    if (term.termType === CollectionTermType) {\n      return Collection.toNT(term)\n    }\n\n    return CanonicalDataFactory.termToNQ(term)\n  }\n}\n\nexport default ExtendedTermFactory\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Creates a merged JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *\n * @return the node map.\n */\napi.createMergedNodeMap = (input, options) => {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  const issuer = options.issuer || new util.IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n  api.createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return api.mergeNodeMaps(graphs);\n};\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\napi.createNodeMap = (input, graphs, graph, issuer, name, list) => {\n  // recurse through array\n  if(types.isArray(input)) {\n    for(const node of input) {\n      api.createNodeMap(node, graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!types.isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(graphTypes.isValue(input)) {\n    if('@type' in input) {\n      let type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  } else if(list && graphTypes.isList(input)) {\n    const _list = [];\n    api.createNodeMap(input['@list'], graphs, graph, issuer, name, _list);\n    list.push({'@list': _list});\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    const types = input['@type'];\n    for(const type of types) {\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(types.isUndefined(name)) {\n    name = graphTypes.isBlankNode(input) ?\n      issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  const subjects = graphs[graph];\n  const subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  const properties = Object.keys(input).sort();\n  for(let property of properties) {\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      const referencedNode = {'@id': name};\n      const reverseMap = input['@reverse'];\n      for(const reverseProperty in reverseMap) {\n        const items = reverseMap[reverseProperty];\n        for(const item of items) {\n          let itemName = item['@id'];\n          if(graphTypes.isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          api.createNodeMap(item, graphs, graph, issuer, itemName);\n          util.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      api.createNodeMap(input[property], graphs, name, issuer);\n      continue;\n    }\n\n    // recurse into included\n    if(property === '@included') {\n      api.createNodeMap(input[property], graphs, graph, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    const objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      util.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(let o of objects) {\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(graphTypes.isSubject(o) || graphTypes.isSubjectReference(o)) {\n        // skip null @id\n        if('@id' in o && !o['@id']) {\n          continue;\n        }\n\n        // relabel blank node @id\n        const id = graphTypes.isBlankNode(o) ?\n          issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        util.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        api.createNodeMap(o, graphs, graph, issuer, id);\n      } else if(graphTypes.isValue(o)) {\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else if(graphTypes.isList(o)) {\n        // handle @list\n        const _list = [];\n        api.createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        api.createNodeMap(o, graphs, graph, issuer, name);\n        util.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n};\n\n/**\n * Merge separate named graphs into a single merged graph including\n * all nodes from the default graph and named graphs.\n *\n * @param graphs a map of graph name to subject map.\n *\n * @return the merged graph map.\n */\napi.mergeNodeMapGraphs = graphs => {\n  const merged = {};\n  for(const name of Object.keys(graphs).sort()) {\n    for(const id of Object.keys(graphs[name]).sort()) {\n      const node = graphs[name][id];\n      if(!(id in merged)) {\n        merged[id] = {'@id': id};\n      }\n      const mergedNode = merged[id];\n\n      for(const property of Object.keys(node).sort()) {\n        if(isKeyword(property) && property !== '@type') {\n          // copy keywords\n          mergedNode[property] = util.clone(node[property]);\n        } else {\n          // merge objects\n          for(const value of node[property]) {\n            util.addValue(\n              mergedNode, property, util.clone(value),\n              {propertyIsArray: true, allowDuplicate: false});\n          }\n        }\n      }\n    }\n  }\n\n  return merged;\n};\n\napi.mergeNodeMaps = graphs => {\n  // add all non-default graphs to default graph\n  const defaultGraph = graphs['@default'];\n  const graphNames = Object.keys(graphs).sort();\n  for(const graphName of graphNames) {\n    if(graphName === '@default') {\n      continue;\n    }\n    const nodeMap = graphs[graphName];\n    let subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    const graph = subject['@graph'];\n    for(const id of Object.keys(nodeMap).sort()) {\n      const node = nodeMap[id];\n      // only add full subjects\n      if(!graphTypes.isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n};\n","// Parse a simple SPARL-Update subset syntax for patches.\n//\n//  This parses\n//   WHERE {xxx} DELETE {yyy} INSERT DATA {zzz}\n// (not necessarily in that order)\n// as though it were the n3\n//   <#query> patch:where {xxx}; patch:delete {yyy}; patch:insert {zzz}.\nimport N3Parser from './n3parser'\nimport Namespace from './namespace'\n\nexport default function sparqlUpdateParser (str, kb, base) {\n  var i, j, k\n  var keywords = [ 'INSERT', 'DELETE', 'WHERE' ]\n  var SQNS = Namespace('http://www.w3.org/ns/pim/patch#')\n  var p = N3Parser(kb, kb, base, base, null, null, '', null)\n  var clauses = {}\n\n  var badSyntax = function (uri, lines, str, i, why) {\n    return ('Line ' + (lines + 1) + ' of <' + uri + '>: Bad syntax:\\n   ' +\n    why + '\\n   at: \"' + str.slice(i, (i + 30)) + '\"')\n  }\n\n  // var check = function (next, last, message) {\n  //   if (next < 0) {\n  //     throw badSyntax(p._thisDoc, p.lines, str, j, last, message)\n  //   }\n  //   return next\n  // }\n  i = 0\n  var query = kb.sym(base + '#query') // Invent a URI for the query\n  clauses['query'] = query // A way of accessing it in its N3 model.\n\n  while (true) {\n    // console.log(\"A Now at i = \" + i)\n    j = p.skipSpace(str, i)\n    if (j < 0) {\n      return clauses\n    }\n    // console.log(\"B After space at j= \" + j)\n    if (str[j] === ';') {\n      i = p.skipSpace(str, j + 1)\n      if (i < 0) {\n        return clauses // Allow end in a\n      }\n      j = i\n    }\n    var found = false\n    for (k = 0; k < keywords.length; k++) {\n      var key = keywords[k]\n      if (str.slice(j, j + key.length) === key) {\n        i = p.skipSpace(str, j + key.length)\n        if (i < 0) {\n          throw badSyntax(p._thisDoc, p.lines, str, j + key.length, 'found EOF, needed {...} after ' + key)\n        }\n        if (((key === 'INSERT') || (key === 'DELETE')) && str.slice(i, i + 4) === 'DATA') { // Some wanted 'DATA'. Whatever\n          j = p.skipSpace(str, i + 4)\n          if (j < 0) {\n            throw badSyntax(p._thisDoc, p.lines, str, i + 4, 'needed {...} after INSERT DATA ' + key)\n          }\n          i = j\n        }\n        var res2 = []\n        j = p.node(str, i, res2) // Parse all the complexity of the clause\n\n        if (j < 0) {\n          throw badSyntax(p._thisDoc, p.lines, str, i,\n            'bad syntax or EOF in {...} after ' + key)\n        }\n        clauses[key.toLowerCase()] = res2[0]\n        kb.add(query, SQNS(key.toLowerCase()), res2[0]) // , kb.sym(base)\n        // key is the keyword and res2 has the contents\n        found = true\n        i = j\n      }\n    }\n    if (!found && str.slice(j, j + 7) === '@prefix') {\n      i = p.directive(str, j)\n      if (i < 0) {\n        throw badSyntax(p._thisDoc, p.lines, str, i,\n          'bad syntax or EOF after @prefix ')\n      }\n      // console.log(\"P before dot i= \" + i)\n      i = p.checkDot(str, i)\n      // console.log(\"Q after dot i= \" + i)\n      found = true\n    }\n    if (!found) {\n      // console.log(\"Bad syntax \" + j)\n      throw badSyntax(p._thisDoc, p.lines, str, j,\n        \"Unknown syntax at start of statememt: '\" + str.slice(j).slice(0, 20) + \"'\")\n    }\n  } // while\n// return clauses\n}\n","/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nfunction apply(fn, ...args) {\n    return (...callArgs) => fn(...args,...callArgs);\n}\n\nfunction initialParams (fn) {\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n}\n\n/* istanbul ignore file */\n\nvar hasQueueMicrotask = typeof queueMicrotask === 'function' && queueMicrotask;\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasQueueMicrotask) {\n    _defer = queueMicrotask;\n} else if (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if (isAsync(func)) {\n        return function (...args/*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback)\n        }\n    }\n\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback)\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        setImmediate$1(e => { throw e }, err);\n    }\n}\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function')\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify (asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined')\n    function awaitable (...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args)\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err)\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        })\n    }\n\n    return awaitable\n}\n\nfunction applyEach (eachfn) {\n    return function applyEach(fns, ...callArgs) {\n        const go = awaitify(function (callback) {\n            var that = this;\n            return eachfn(fns, (fn, cb) => {\n                wrapAsync(fn).apply(that, callArgs.concat(cb));\n            }, callback);\n        });\n        return go;\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    return eachfn(arr, (value, _, iterCb) => {\n        var index = counter++;\n        _iteratee(value, (err, v) => {\n            results[index] = v;\n            iterCb(err);\n        });\n    }, err => {\n        callback(err, results);\n    });\n}\n\nfunction isArrayLike(value) {\n    return value &&\n        typeof value.length === 'number' &&\n        value.length >= 0 &&\n        value.length % 1 === 0;\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nconst breakLoop = {};\n\nfunction once(fn) {\n    function wrapper (...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper\n}\n\nfunction getIterator (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        if (key === '__proto__') {\n            return next();\n        }\n        return i < len ? {value: obj[key], key} : null;\n    };\n}\n\nfunction createIterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\n\n// for async generators\nfunction asyncEachOfLimit(generator, limit, iteratee, callback) {\n    let done = false;\n    let canceled = false;\n    let awaiting = false;\n    let running = 0;\n    let idx = 0;\n\n    function replenish() {\n        //console.log('replenish')\n        if (running >= limit || awaiting || done) return\n        //console.log('replenish awaiting')\n        awaiting = true;\n        generator.next().then(({value, done: iterDone}) => {\n            //console.log('got value', value)\n            if (canceled || done) return\n            awaiting = false;\n            if (iterDone) {\n                done = true;\n                if (running <= 0) {\n                    //console.log('done nextCb')\n                    callback(null);\n                }\n                return;\n            }\n            running++;\n            iteratee(value, idx, iterateeCallback);\n            idx++;\n            replenish();\n        }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n        //console.log('iterateeCallback')\n        running -= 1;\n        if (canceled) return\n        if (err) return handleError(err)\n\n        if (err === false) {\n            done = true;\n            canceled = true;\n            return\n        }\n\n        if (result === breakLoop || (done && running <= 0)) {\n            done = true;\n            //console.log('done iterCb')\n            return callback(null);\n        }\n        replenish();\n    }\n\n    function handleError(err) {\n        if (canceled) return\n        awaiting = false;\n        done = true;\n        callback(err);\n    }\n\n    replenish();\n}\n\nvar eachOfLimit = (limit) => {\n    return (obj, iteratee, callback) => {\n        callback = once(callback);\n        if (limit <= 0) {\n            throw new RangeError('concurrency limit cannot be less than 1')\n        }\n        if (!obj) {\n            return callback(null);\n        }\n        if (isAsyncGenerator(obj)) {\n            return asyncEachOfLimit(obj, limit, iteratee, callback)\n        }\n        if (isAsyncIterable(obj)) {\n            return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback)\n        }\n        var nextElem = createIterator(obj);\n        var done = false;\n        var canceled = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            if (canceled) return\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (err === false) {\n                done = true;\n                canceled = true;\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n};\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOfLimit$2 = awaitify(eachOfLimit$1, 4);\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback);\n    var index = 0,\n        completed = 0,\n        {length} = coll,\n        canceled = false;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err === false) {\n            canceled = true;\n        }\n        if (canceled === true) return\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nfunction eachOfGeneric (coll, iteratee, callback) {\n    return eachOfLimit$2(coll, Infinity, iteratee, callback);\n}\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dev.json is a file containing a valid json object config for dev environment\n * // dev.json is a file containing a valid json object config for test environment\n * // prod.json is a file containing a valid json object config for prod environment\n * // invalid.json is a file with a malformed json object\n *\n * let configs = {}; //global variable\n * let validConfigFileMap = {dev: 'dev.json', test: 'test.json', prod: 'prod.json'};\n * let invalidConfigFileMap = {dev: 'dev.json', test: 'test.json', invalid: 'invalid.json'};\n *\n * // asynchronous function that reads a json file and parses the contents as json object\n * function parseFile(file, key, callback) {\n *     fs.readFile(file, \"utf8\", function(err, data) {\n *         if (err) return calback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }\n *\n * // Using callbacks\n * async.forEachOf(validConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *     } else {\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *         // JSON parse error exception\n *     } else {\n *         console.log(configs);\n *     }\n * });\n *\n * // Using Promises\n * async.forEachOf(validConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n *     // configs is now a map of JSON data, e.g.\n *     // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n * }).catch( err => {\n *     console.error(err);\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n * }).catch( err => {\n *     console.error(err);\n *     // JSON parse error exception\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.forEachOf(validConfigFileMap, parseFile);\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * //Error handing\n * async () => {\n *     try {\n *         let result = await async.forEachOf(invalidConfigFileMap, parseFile);\n *         console.log(configs);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // JSON parse error exception\n *     }\n * }\n *\n */\nfunction eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOf$1 = awaitify(eachOf, 3);\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callbacks\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.map(fileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(results);\n *     }\n * });\n *\n * // Using Promises\n * async.map(fileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now an array of the file size in bytes for each file, e.g.\n *     // [ 1000, 2000, 3000]\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.map(fileList, getFileSizeInBytes);\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.map(withMissingFileList, getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction map (coll, iteratee, callback) {\n    return _asyncMap(eachOf$1, coll, iteratee, callback)\n}\nvar map$1 = awaitify(map, 3);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional. The results\n * for each of the applied async functions are passed to the final callback\n * as an array.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - Returns a function that takes no args other than\n * an optional callback, that is the result of applying the `args` to each\n * of the functions.\n * @example\n *\n * const appliedFn = async.applyEach([enableSearch, updateSchema], 'bucket')\n *\n * appliedFn((err, results) => {\n *     // results[0] is the results for `enableSearch`\n *     // results[1] is the results for `updateSchema`\n * });\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async (bucket) => async.applyEach([enableSearch, updateSchema], bucket)(),\n *     callback\n * );\n */\nvar applyEach$1 = applyEach(map$1);\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfSeries(coll, iteratee, callback) {\n    return eachOfLimit$2(coll, 1, iteratee, callback)\n}\nvar eachOfSeries$1 = awaitify(eachOfSeries, 3);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapSeries (coll, iteratee, callback) {\n    return _asyncMap(eachOfSeries$1, coll, iteratee, callback)\n}\nvar mapSeries$1 = awaitify(mapSeries, 3);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - A function, that when called, is the result of\n * appling the `args` to the list of functions.  It takes no args, other than\n * a callback.\n */\nvar applyEachSeries = applyEach(mapSeries$1);\n\nconst PROMISE_SYMBOL = Symbol('promiseCallback');\n\nfunction promiseCallback () {\n    let resolve, reject;\n    function callback (err, ...args) {\n        if (err) return reject(err)\n        resolve(args.length > 1 ? args : args[0]);\n    }\n\n    callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n        resolve = res,\n        reject = rej;\n    });\n\n    return callback\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n * @example\n *\n * //Using Callbacks\n * async.auto({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     if (err) {\n *         console.log('err = ', err);\n *     }\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * });\n *\n * //Using Promises\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }).then(results => {\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * }).catch(err => {\n *     console.log('err = ', err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.auto({\n *             get_data: function(callback) {\n *                 // async code to get some data\n *                 callback(null, 'data', 'converted to array');\n *             },\n *             make_folder: function(callback) {\n *                 // async code to create a directory to store a file in\n *                 // this is run at the same time as getting the data\n *                 callback(null, 'folder');\n *             },\n *             write_file: ['get_data', 'make_folder', function(results, callback) {\n *                 // once there is some data and the directory exists,\n *                 // write the data to a file in the directory\n *                 callback(null, 'filename');\n *             }],\n *             email_link: ['write_file', function(results, callback) {\n *                 // once the file is written let's email a link to it...\n *                 callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *             }]\n *         });\n *         console.log('results = ', results);\n *         // results = {\n *         //     get_data: ['data', 'converted to array']\n *         //     make_folder; 'folder',\n *         //     write_file: 'filename'\n *         //     email_link: { file: 'filename', email: 'user@example.com' }\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction auto(tasks, concurrency, callback) {\n    if (typeof concurrency !== 'number') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || promiseCallback());\n    var numTasks = Object.keys(tasks).length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var canceled = false;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    Object.keys(tasks).forEach(key => {\n        var task = tasks[key];\n        if (!Array.isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        dependencies.forEach(dependencyName => {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, () => {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(() => runTask(key, task));\n    }\n\n    function processQueue() {\n        if (canceled) return\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        taskListeners.forEach(fn => fn());\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce((err, ...result) => {\n            runningTasks--;\n            if (err === false) {\n                canceled = true;\n                return\n            }\n            if (result.length < 2) {\n                [result] = result;\n            }\n            if (err) {\n                var safeResults = {};\n                Object.keys(results).forEach(rkey => {\n                    safeResults[rkey] = results[rkey];\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n                if (canceled) return\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            getDependents(currentTask).forEach(dependent => {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        Object.keys(tasks).forEach(key => {\n            const task = tasks[key];\n            if (Array.isArray(task) && task.indexOf(taskName) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n\n    return callback[PROMISE_SYMBOL]\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(?:function)?\\s*\\w*\\s*\\(\\s*([^)]+)\\s*\\)(?:\\s*{)/;\nvar ARROW_FN_ARGS = /^(?:async\\s+)?\\(?\\s*([^)=]+)\\s*\\)?(?:\\s*=>)/;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    const src = func.toString().replace(STRIP_COMMENTS, '');\n    let match = src.match(FN_ARGS);\n    if (!match) {\n        match = src.match(ARROW_FN_ARGS);\n    }\n    if (!match) throw new Error('could not parse args in autoInject\\nSource:\\n' + src)\n    let [, args] = match;\n    return args\n        .replace(/\\s/g, '')\n        .split(FN_ARG_SPLIT)\n        .map((arg) => arg.replace(FN_ARG, '').trim());\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    Object.keys(tasks).forEach(key => {\n        var taskFn = tasks[key];\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (Array.isArray(taskFn)) {\n            params = [...taskFn];\n            taskFn = params.pop();\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if ((taskFn.length === 0 && !fnIsAsync) && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = params.map(name => results[name]);\n            newArgs.push(taskCb);\n            wrapAsync(taskFn)(...newArgs);\n        }\n    });\n\n    return auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nclass DLL {\n    constructor() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n\n    removeLink(node) {\n        if (node.prev) node.prev.next = node.next;\n        else this.head = node.next;\n        if (node.next) node.next.prev = node.prev;\n        else this.tail = node.prev;\n\n        node.prev = node.next = null;\n        this.length -= 1;\n        return node;\n    }\n\n    empty () {\n        while(this.head) this.shift();\n        return this;\n    }\n\n    insertAfter(node, newNode) {\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next) node.next.prev = newNode;\n        else this.tail = newNode;\n        node.next = newNode;\n        this.length += 1;\n    }\n\n    insertBefore(node, newNode) {\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev) node.prev.next = newNode;\n        else this.head = newNode;\n        node.prev = newNode;\n        this.length += 1;\n    }\n\n    unshift(node) {\n        if (this.head) this.insertBefore(this.head, node);\n        else setInitial(this, node);\n    }\n\n    push(node) {\n        if (this.tail) this.insertAfter(this.tail, node);\n        else setInitial(this, node);\n    }\n\n    shift() {\n        return this.head && this.removeLink(this.head);\n    }\n\n    pop() {\n        return this.tail && this.removeLink(this.tail);\n    }\n\n    toArray() {\n        return [...this]\n    }\n\n    *[Symbol.iterator] () {\n        var cur = this.head;\n        while (cur) {\n            yield cur.data;\n            cur = cur.next;\n        }\n    }\n\n    remove (testFn) {\n        var curr = this.head;\n        while(curr) {\n            var {next} = curr;\n            if (testFn(curr)) {\n                this.removeLink(curr);\n            }\n            curr = next;\n        }\n        return this;\n    }\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new RangeError('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n    const events = {\n        error: [],\n        drain: [],\n        saturated: [],\n        unsaturated: [],\n        empty: []\n    };\n\n    function on (event, handler) {\n        events[event].push(handler);\n    }\n\n    function once (event, handler) {\n        const handleAndRemove = (...args) => {\n            off(event, handleAndRemove);\n            handler(...args);\n        };\n        events[event].push(handleAndRemove);\n    }\n\n    function off (event, handler) {\n        if (!event) return Object.keys(events).forEach(ev => events[ev] = [])\n        if (!handler) return events[event] = []\n        events[event] = events[event].filter(ev => ev !== handler);\n    }\n\n    function trigger (event, ...args) {\n        events[event].forEach(handler => handler(...args));\n    }\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, rejectOnError, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n\n        var res, rej;\n        function promiseCallback (err, ...args) {\n            // we don't care about the error, let the global error handler\n            // deal with it\n            if (err) return rejectOnError ? rej(err) : res()\n            if (args.length <= 1) return res(args[0])\n            res(args);\n        }\n\n        var item = {\n            data,\n            callback: rejectOnError ?\n                promiseCallback :\n                (callback || promiseCallback)\n        };\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        } else {\n            q._tasks.push(item);\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(() => {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n\n        if (rejectOnError || !callback) {\n            return new Promise((resolve, reject) => {\n                res = resolve;\n                rej = reject;\n            })\n        }\n    }\n\n    function _createCB(tasks) {\n        return function (err, ...args) {\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = workersList.indexOf(task);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback(err, ...args);\n\n                if (err != null) {\n                    trigger('error', err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                trigger('unsaturated');\n            }\n\n            if (q.idle()) {\n                trigger('drain');\n            }\n            q.process();\n        };\n    }\n\n    function _maybeDrain(data) {\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            setImmediate$1(() => trigger('drain'));\n            return true\n        }\n        return false\n    }\n\n    const eventMethod = (name) => (handler) => {\n        if (!handler) {\n            return new Promise((resolve, reject) => {\n                once(name, (err, data) => {\n                    if (err) return reject(err)\n                    resolve(data);\n                });\n            })\n        }\n        off(name);\n        on(name, handler);\n\n    };\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        *[Symbol.iterator] () {\n            yield* q._tasks[Symbol.iterator]();\n        },\n        concurrency,\n        payload,\n        buffer: concurrency / 4,\n        started: false,\n        paused: false,\n        push (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, false, callback))\n            }\n            return _insert(data, false, false, callback);\n        },\n        pushAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, true, callback))\n            }\n            return _insert(data, false, true, callback);\n        },\n        kill () {\n            off();\n            q._tasks.empty();\n        },\n        unshift (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, false, callback))\n            }\n            return _insert(data, true, false, callback);\n        },\n        unshiftAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, true, callback))\n            }\n            return _insert(data, true, true, callback);\n        },\n        remove (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    trigger('empty');\n                }\n\n                if (numRunning === q.concurrency) {\n                    trigger('saturated');\n                }\n\n                var cb = onlyOnce(_createCB(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length () {\n            return q._tasks.length;\n        },\n        running () {\n            return numRunning;\n        },\n        workersList () {\n            return workersList;\n        },\n        idle() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause () {\n            q.paused = true;\n        },\n        resume () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    // define these as fixed properties, so people get useful errors when updating\n    Object.defineProperties(q, {\n        saturated: {\n            writable: false,\n            value: eventMethod('saturated')\n        },\n        unsaturated: {\n            writable: false,\n            value: eventMethod('unsaturated')\n        },\n        empty: {\n            writable: false,\n            value: eventMethod('empty')\n        },\n        drain: {\n            writable: false,\n            value: eventMethod('drain')\n        },\n        error: {\n            writable: false,\n            value: eventMethod('error')\n        },\n    });\n    return q;\n}\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * await cargo.push({name: 'baz'});\n * console.log('finished processing baz');\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * Creates a `cargoQueue` object with the specified payload. Tasks added to the\n * cargoQueue will be processed together (up to the `payload` limit) in `concurrency` parallel workers.\n * If the all `workers` are in progress, the task is queued until one becomes available. Once\n * a `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, and [`cargo`]{@link module:ControlFlow.cargo} passes an array of tasks to a single worker,\n * the cargoQueue passes an array of tasks to multiple parallel workers.\n *\n * @name cargoQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @see [async.cargo]{@link module:ControlFLow.cargo}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargoQueue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargoQueue and inner queue.\n * @example\n *\n * // create a cargoQueue object with payload 2 and concurrency 2\n * var cargoQueue = async.cargoQueue(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2, 2);\n *\n * // add some items\n * cargoQueue.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargoQueue.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargoQueue.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n * cargoQueue.push({name: 'boo'}, function(err) {\n *     console.log('finished processing boo');\n * });\n */\nfunction cargo$1(worker, concurrency, payload) {\n    return queue(worker, concurrency, payload);\n}\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file3.txt', 'file4.txt'];\n *\n * // asynchronous function that computes the file size in bytes\n * // file size is added to the memoized value, then returned\n * function getFileSizeInBytes(memo, file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, memo + stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.reduce(fileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.reduce(fileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // 6000\n *     // which is the sum of the file sizes of the three files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.reduce(fileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.reduce(withMissingFileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback);\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfSeries$1(coll, (x, i, iterCb) => {\n        _iteratee(memo, x, (err, v) => {\n            memo = v;\n            iterCb(err);\n        });\n    }, err => callback(err, memo));\n}\nvar reduce$1 = awaitify(reduce, 4);\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(...functions) {\n    var _functions = functions.map(wrapAsync);\n    return function (...args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = promiseCallback();\n        }\n\n        reduce$1(_functions, args, (newargs, fn, iterCb) => {\n            fn.apply(that, newargs.concat((err, ...nextargs) => {\n                iterCb(err, nextargs);\n            }));\n        },\n        (err, results) => cb(err, ...results));\n\n        return cb[PROMISE_SYMBOL]\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * If the last argument to the composed function is not a function, a promise\n * is returned when you call it.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nfunction compose(...args) {\n    return seq(...args.reverse());\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapLimit (coll, limit, iteratee, callback) {\n    return _asyncMap(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar mapLimit$1 = awaitify(mapLimit, 4);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapLimit\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, ...args) => {\n            if (err) return iterCb(err);\n            return iterCb(err, args);\n        });\n    }, (err, mapResults) => {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = result.concat(...mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n}\nvar concatLimit$1 = awaitify(concatLimit, 4);\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. The results array will be returned in\n * the original order of `coll` passed to the `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @alias flatMap\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * let directoryList = ['dir1','dir2','dir3'];\n * let withMissingDirectoryList = ['dir1','dir2','dir3', 'dir4'];\n *\n * // Using callbacks\n * async.concat(directoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *    }\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *        // [ Error: ENOENT: no such file or directory ]\n *        // since dir4 does not exist\n *    } else {\n *        console.log(results);\n *    }\n * });\n *\n * // Using Promises\n * async.concat(directoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n *     // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n * }).catch(err => {\n *      console.log(err);\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n * }).catch(err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4 does not exist\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.concat(directoryList, fs.readdir);\n *         console.log(results);\n *         // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *     } catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.concat(withMissingDirectoryList, fs.readdir);\n *         console.log(results);\n *     } catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4 does not exist\n *     }\n * }\n *\n */\nfunction concat(coll, iteratee, callback) {\n    return concatLimit$1(coll, Infinity, iteratee, callback)\n}\nvar concat$1 = awaitify(concat, 3);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapSeries\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatSeries(coll, iteratee, callback) {\n    return concatLimit$1(coll, 1, iteratee, callback)\n}\nvar concatSeries$1 = awaitify(concatSeries, 3);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nfunction constant(...args) {\n    return function (...ignoredArgs/*, callback*/) {\n        var callback = ignoredArgs.pop();\n        return callback(null, ...args);\n    };\n}\n\nfunction _createTester(check, getResult) {\n    return (eachfn, arr, _iteratee, cb) => {\n        var testPassed = false;\n        var testResult;\n        const iteratee = wrapAsync(_iteratee);\n        eachfn(arr, (value, _, callback) => {\n            iteratee(value, (err, result) => {\n                if (err || err === false) return callback(err);\n\n                if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    return callback(null, breakLoop);\n                }\n                callback();\n            });\n        }, err => {\n            if (err) return cb(err);\n            cb(null, testPassed ? testResult : getResult(false));\n        });\n    };\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // dir1/file1.txt\n *        // result now equals the first file in the list that exists\n *    }\n *);\n *\n * // Using Promises\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists)\n * .then(result => {\n *     console.log(result);\n *     // dir1/file1.txt\n *     // result now equals the first file in the list that exists\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists);\n *         console.log(result);\n *         // dir1/file1.txt\n *         // result now equals the file in the list that exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction detect(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOf$1, coll, iteratee, callback)\n}\nvar detect$1 = awaitify(detect, 3);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns a Promise if no callback is passed\n */\nfunction detectLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar detectLimit$1 = awaitify(detectLimit, 4);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns a Promise if no callback is passed\n */\nfunction detectSeries(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(1), coll, iteratee, callback)\n}\n\nvar detectSeries$1 = awaitify(detectSeries, 3);\n\nfunction consoleFunc(name) {\n    return (fn, ...args) => wrapAsync(fn)(...args, (err, ...resultArgs) => {\n        /* istanbul ignore else */\n        if (typeof console === 'object') {\n            /* istanbul ignore else */\n            if (err) {\n                /* istanbul ignore else */\n                if (console.error) {\n                    console.error(err);\n                }\n            } else if (console[name]) { /* istanbul ignore else */\n                resultArgs.forEach(x => console[name](x));\n            }\n        }\n    })\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results;\n\n    function next(err, ...args) {\n        if (err) return callback(err);\n        if (err === false) return;\n        results = args;\n        _test(...args, check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return check(null, true);\n}\n\nvar doWhilst$1 = awaitify(doWhilst, 3);\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doUntil(iteratee, test, callback) {\n    const _test = wrapAsync(test);\n    return doWhilst$1(iteratee, (...args) => {\n        const cb = args.pop();\n        _test(...args, (err, truth) => cb (err, !truth));\n    }, callback);\n}\n\nfunction _withoutIndex(iteratee) {\n    return (value, index, callback) => iteratee(value, callback);\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = [ 'dir1/file2.txt', 'dir2/file3.txt', 'dir/file5.txt'];\n * const withMissingFileList = ['dir1/file1.txt', 'dir4/file2.txt'];\n *\n * // asynchronous function that deletes a file\n * const deleteFile = function(file, callback) {\n *     fs.unlink(file, callback);\n * };\n *\n * // Using callbacks\n * async.each(fileList, deleteFile, function(err) {\n *     if( err ) {\n *         console.log(err);\n *     } else {\n *         console.log('All files have been deleted successfully');\n *     }\n * });\n *\n * // Error Handling\n * async.each(withMissingFileList, deleteFile, function(err){\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using Promises\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         await async.each(files, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         await async.each(withMissingFileList, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4/file2.txt does not exist\n *         // dir1/file1.txt could have been deleted\n *     }\n * }\n *\n */\nfunction eachLimit(coll, iteratee, callback) {\n    return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\nvar each = awaitify(eachLimit, 3);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\nvar eachLimit$2 = awaitify(eachLimit$1, 4);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n    return eachLimit$2(coll, 1, iteratee, callback)\n}\nvar eachSeries$1 = awaitify(eachSeries, 3);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        var sync = true;\n        args.push((...innerArgs) => {\n            if (sync) {\n                setImmediate$1(() => callback(...innerArgs));\n            } else {\n                callback(...innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    };\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file5.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.every(fileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * });\n *\n * async.every(withMissingFileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * });\n *\n * // Using Promises\n * async.every(fileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.every(withMissingFileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.every(fileList, fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.every(withMissingFileList, fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since NOT every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction every(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOf$1, coll, iteratee, callback)\n}\nvar every$1 = awaitify(every, 3);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everyLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar everyLimit$1 = awaitify(everyLimit, 4);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everySeries(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar everySeries$1 = awaitify(everySeries, 3);\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            truthValues[index] = !!v;\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            if (err) return iterCb(err);\n            if (v) {\n                results.push({index, value: x});\n            }\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        callback(null, results\n            .sort((a, b) => a.index - b.index)\n            .map(v => v.value));\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    return filter(eachfn, coll, wrapAsync(iteratee), callback);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const files = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.filter(files, fileExists, function(err, results) {\n *    if(err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *        // results is now an array of the existing files\n *    }\n * });\n *\n * // Using Promises\n * async.filter(files, fileExists)\n * .then(results => {\n *     console.log(results);\n *     // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *     // results is now an array of the existing files\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.filter(files, fileExists);\n *         console.log(results);\n *         // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *         // results is now an array of the existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction filter (coll, iteratee, callback) {\n    return _filter(eachOf$1, coll, iteratee, callback)\n}\nvar filter$1 = awaitify(filter, 3);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterLimit (coll, limit, iteratee, callback) {\n    return _filter(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar filterLimit$1 = awaitify(filterLimit, 4);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterSeries (coll, iteratee, callback) {\n    return _filter(eachOfSeries$1, coll, iteratee, callback)\n}\nvar filterSeries$1 = awaitify(filterSeries, 3);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @returns {Promise} a promise that rejects if an error occurs and an errback\n * is not passed\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        if (err === false) return;\n        task(next);\n    }\n    return next();\n}\nvar forever$1 = awaitify(forever, 2);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupByLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, key) => {\n            if (err) return iterCb(err);\n            return iterCb(err, {key, val});\n        });\n    }, (err, mapResults) => {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var {hasOwnProperty} = Object.prototype;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var {key} = mapResults[i];\n                var {val} = mapResults[i];\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n}\n\nvar groupByLimit$1 = awaitify(groupByLimit, 4);\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const files = ['dir1/file1.txt','dir2','dir4']\n *\n * // asynchronous function that detects file type as none, file, or directory\n * function detectFile(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(null, 'none');\n *         }\n *         callback(null, stat.isDirectory() ? 'directory' : 'file');\n *     });\n * }\n *\n * //Using callbacks\n * async.groupBy(files, detectFile, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *\t       console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n * });\n *\n * // Using Promises\n * async.groupBy(files, detectFile)\n * .then( result => {\n *     console.log(result);\n *     // {\n *     //     file: [ 'dir1/file1.txt' ],\n *     //     none: [ 'dir4' ],\n *     //     directory: [ 'dir2']\n *     // }\n *     // result is object containing the files grouped by type\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.groupBy(files, detectFile);\n *         console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction groupBy (coll, iteratee, callback) {\n    return groupByLimit$1(coll, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whose\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupBySeries (coll, iteratee, callback) {\n    return groupByLimit$1(coll, 1, iteratee, callback)\n}\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfLimit(limit)(obj, (val, key, next) => {\n        _iteratee(val, key, (err, result) => {\n            if (err) return next(err);\n            newObj[key] = result;\n            next(err);\n        });\n    }, err => callback(err, newObj));\n}\n\nvar mapValuesLimit$1 = awaitify(mapValuesLimit, 4);\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file3.txt'\n * };\n *\n * const withMissingFileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file4.txt'\n * };\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, key, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.mapValues(fileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n * });\n *\n * // Error handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.mapValues(fileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // result is now a map of file size in bytes for each file, e.g.\n *     // {\n *     //     f1: 1000,\n *     //     f2: 2000,\n *     //     f3: 3000\n *     // }\n * }).catch (err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch (err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.mapValues(fileMap, getFileSizeInBytes);\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.mapValues(withMissingFileMap, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction mapValues(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesSeries(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, 1, iteratee, callback)\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * **Note: if the async function errs, the result will not be cached and\n * subsequent calls will call the wrapped function.**\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher = v => v) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams((args, callback) => {\n        var key = hasher(...args);\n        if (key in memo) {\n            setImmediate$1(() => callback(null, ...memo[key]));\n        } else if (key in queues) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn(...args, (err, ...resultArgs) => {\n                // #1465 don't memoize if an error occurred\n                if (!err) {\n                    memo[key] = resultArgs;\n                }\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i](err, ...resultArgs);\n                }\n            });\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nvar _parallel = awaitify((eachfn, tasks, callback) => {\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, (task, key, taskCb) => {\n        wrapAsync(task)((err, ...result) => {\n            if (result.length < 2) {\n                [result] = result;\n            }\n            results[key] = result;\n            taskCb(err);\n        });\n    }, err => callback(err, results));\n}, 3);\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n *\n * //Using Callbacks\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.parallel([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two'] even though\n *         // the second function had a shorter timeout.\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction parallel(tasks, callback) {\n    return _parallel(eachOf$1, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n */\nfunction parallelLimit(tasks, limit, callback) {\n    return _parallel(eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Iterable} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {number} payload - an integer that specifies how many items are\n * passed to the worker function at a time. only applies if this is a\n * [cargo]{@link module:ControlFlow.cargo} object\n * @property {AsyncFunction} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {AsyncFunction} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {AsyncFunction} pushAsync - the same as `q.push`, except this returns\n * a promise that rejects if an error occurs.\n * @property {AsyncFunction} unshiftAsync - the same as `q.unshift`, except this returns\n * a promise that rejects if an error occurs.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a function that sets a callback that is\n * called when the number of running workers hits the `concurrency` limit, and\n * further tasks will be queued.  If the callback is omitted, `q.saturated()`\n * returns a promise for the next occurrence.\n * @property {Function} unsaturated - a function that sets a callback that is\n * called when the number of running workers is less than the `concurrency` &\n * `buffer` limits, and further tasks will not be queued. If the callback is\n * omitted, `q.unsaturated()` returns a promise for the next occurrence.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a function that sets a callback that is called\n * when the last item from the `queue` is given to a `worker`. If the callback\n * is omitted, `q.empty()` returns a promise for the next occurrence.\n * @property {Function} drain - a function that sets a callback that is called\n * when the last item from the `queue` has returned from the `worker`. If the\n * callback is omitted, `q.drain()` returns a promise for the next occurrence.\n * @property {Function} error - a function that sets a callback that is called\n * when a task errors. Has the signature `function(error, task)`. If the\n * callback is omitted, `error()` returns a promise that rejects on the next\n * error.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n *\n * @example\n * const q = async.queue(worker, 2)\n * q.push(item1)\n * q.push(item2)\n * q.push(item3)\n * // queues are iterable, spread into an array to inspect\n * const items = [...q] // [item1, item2, item3]\n * // or use for of\n * for (let item of q) {\n *     console.log(item)\n * }\n *\n * q.drain(() => {\n *     console.log('all done')\n * })\n * // or\n * await q.drain()\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can be\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain(function() {\n *     console.log('all items have been processed');\n * });\n * // or await the end\n * await q.drain()\n *\n * // assign an error callback\n * q.error(function(err, task) {\n *     console.error('task experienced an error');\n * });\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * // callback is optional\n * q.push({name: 'bar'});\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nfunction queue$1 (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue((items, cb) => {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n}\n\n// Binary min-heap implementation used for priority queue.\n// Implementation is stable, i.e. push time is considered for equal priorities\nclass Heap {\n    constructor() {\n        this.heap = [];\n        this.pushCount = Number.MIN_SAFE_INTEGER;\n    }\n\n    get length() {\n        return this.heap.length;\n    }\n\n    empty () {\n        this.heap = [];\n        return this;\n    }\n\n    percUp(index) {\n        let p;\n\n        while (index > 0 && smaller(this.heap[index], this.heap[p=parent(index)])) {\n            let t = this.heap[index];\n            this.heap[index] = this.heap[p];\n            this.heap[p] = t;\n\n            index = p;\n        }\n    }\n\n    percDown(index) {\n        let l;\n\n        while ((l=leftChi(index)) < this.heap.length) {\n            if (l+1 < this.heap.length && smaller(this.heap[l+1], this.heap[l])) {\n                l = l+1;\n            }\n\n            if (smaller(this.heap[index], this.heap[l])) {\n                break;\n            }\n\n            let t = this.heap[index];\n            this.heap[index] = this.heap[l];\n            this.heap[l] = t;\n\n            index = l;\n        }\n    }\n\n    push(node) {\n        node.pushCount = ++this.pushCount;\n        this.heap.push(node);\n        this.percUp(this.heap.length-1);\n    }\n\n    unshift(node) {\n        return this.heap.push(node);\n    }\n\n    shift() {\n        let [top] = this.heap;\n\n        this.heap[0] = this.heap[this.heap.length-1];\n        this.heap.pop();\n        this.percDown(0);\n\n        return top;\n    }\n\n    toArray() {\n        return [...this];\n    }\n\n    *[Symbol.iterator] () {\n        for (let i = 0; i < this.heap.length; i++) {\n            yield this.heap[i].data;\n        }\n    }\n\n    remove (testFn) {\n        let j = 0;\n        for (let i = 0; i < this.heap.length; i++) {\n            if (!testFn(this.heap[i])) {\n                this.heap[j] = this.heap[i];\n                j++;\n            }\n        }\n\n        this.heap.splice(j);\n\n        for (let i = parent(this.heap.length-1); i >= 0; i--) {\n            this.percDown(i);\n        }\n\n        return this;\n    }\n}\n\nfunction leftChi(i) {\n    return (i<<1)+1;\n}\n\nfunction parent(i) {\n    return ((i+1)>>1)-1;\n}\n\nfunction smaller(x, y) {\n    if (x.priority !== y.priority) {\n        return x.priority < y.priority;\n    }\n    else {\n        return x.pushCount < y.pushCount;\n    }\n}\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nfunction priorityQueue(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n    var processingScheduled = false;\n\n    q._tasks = new Heap();\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority = 0, callback = () => {}) {\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!Array.isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(() => q.drain());\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority,\n                callback\n            };\n\n            q._tasks.push(item);\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(() => {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n}\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\nvar race$1 = awaitify(race, 2);\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = [...array].reverse();\n    return reduce$1(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push((error, ...cbArgs) => {\n            let retVal = {};\n            if (error) {\n                retVal.error = error;\n            }\n            if (cbArgs.length > 0){\n                var value = cbArgs;\n                if (cbArgs.length <= 1) {\n                    [value] = cbArgs;\n                }\n                retVal.value = value;\n            }\n            reflectCallback(null, retVal);\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (Array.isArray(tasks)) {\n        results = tasks.map(reflect);\n    } else {\n        results = {};\n        Object.keys(tasks).forEach(key => {\n            results[key] = reflect.call(this, tasks[key]);\n        });\n    }\n    return results;\n}\n\nfunction reject(eachfn, arr, _iteratee, callback) {\n    const iteratee = wrapAsync(_iteratee);\n    return _filter(eachfn, arr, (value, cb) => {\n        iteratee(value, (err, v) => {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.reject(fileList, fileExists, function(err, results) {\n *    // [ 'dir3/file6.txt' ]\n *    // results now equals an array of the non-existing files\n * });\n *\n * // Using Promises\n * async.reject(fileList, fileExists)\n * .then( results => {\n *     console.log(results);\n *     // [ 'dir3/file6.txt' ]\n *     // results now equals an array of the non-existing files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.reject(fileList, fileExists);\n *         console.log(results);\n *         // [ 'dir3/file6.txt' ]\n *         // results now equals an array of the non-existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction reject$1 (coll, iteratee, callback) {\n    return reject(eachOf$1, coll, iteratee, callback)\n}\nvar reject$2 = awaitify(reject$1, 3);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectLimit (coll, limit, iteratee, callback) {\n    return reject(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar rejectLimit$1 = awaitify(rejectLimit, 4);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectSeries (coll, iteratee, callback) {\n    return reject(eachOfSeries$1, coll, iteratee, callback)\n}\nvar rejectSeries$1 = awaitify(rejectSeries, 3);\n\nfunction constant$1(value) {\n    return function () {\n        return value;\n    }\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @returns {Promise} a promise if no callback provided\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nconst DEFAULT_TIMES = 5;\nconst DEFAULT_INTERVAL = 0;\n\nfunction retry(opts, task, callback) {\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || promiseCallback();\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || promiseCallback();\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task((err, ...args) => {\n            if (err === false) return\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n            } else {\n                callback(err, ...args);\n            }\n        });\n    }\n\n    retryAttempt();\n    return callback[PROMISE_SYMBOL]\n}\n\nfunction parseTimes(acc, t) {\n    if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES;\n\n        acc.intervalFunc = typeof t.interval === 'function' ?\n            t.interval :\n            constant$1(+t.interval || DEFAULT_INTERVAL);\n\n        acc.errorFilter = t.errorFilter;\n    } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES;\n    } else {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`, except for a `opts.arity` that\n * is the arity of the `task` function, defaulting to `task.length`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nfunction retryable (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    let arity = (opts && opts.arity) || task.length;\n    if (isAsync(task)) {\n        arity += 1;\n    }\n    var _task = wrapAsync(task);\n    return initialParams((args, callback) => {\n        if (args.length < arity - 1 || callback == null) {\n            args.push(callback);\n            callback = promiseCallback();\n        }\n        function taskFn(cb) {\n            _task(...args, cb);\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n        return callback[PROMISE_SYMBOL]\n    });\n}\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @return {Promise} a promise, if no callback is passed\n * @example\n *\n * //Using Callbacks\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * });\n *\n * // an example using objects instead of arrays\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.series([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction series(tasks, callback) {\n    return _parallel(eachOfSeries$1, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // true\n *        // result is true since some file in the list exists\n *    }\n *);\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // false\n *        // result is false since none of the files exists\n *    }\n *);\n *\n * // Using Promises\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since some file in the list exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since none of the files exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since some file in the list exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since none of the files exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction some(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOf$1, coll, iteratee, callback)\n}\nvar some$1 = awaitify(some, 3);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someLimit(coll, limit, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar someLimit$1 = awaitify(someLimit, 4);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someSeries(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar someSeries$1 = awaitify(someSeries, 3);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback passed\n * @example\n *\n * // bigfile.txt is a file that is 251100 bytes in size\n * // mediumfile.txt is a file that is 11000 bytes in size\n * // smallfile.txt is a file that is 121 bytes in size\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) return callback(getFileSizeErr);\n *         callback(null, fileSize);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // descending order\n * async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) {\n *             return callback(getFileSizeErr);\n *         }\n *         callback(null, fileSize * -1);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'bigfile.txt', 'mediumfile.txt', 'smallfile.txt']\n *         }\n *     }\n * );\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *             // [ Error: ENOENT: no such file or directory ]\n *         } else {\n *             console.log(results);\n *         }\n *     }\n * );\n *\n * // Using Promises\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now the original array of files sorted by\n *     // file size (ascending by default), e.g.\n *     // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let results = await async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *         // results is now the original array of files sorted by\n *         // file size (ascending by default), e.g.\n *         // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * // Error handling\n * async () => {\n *     try {\n *         let results = await async.sortBy(['missingfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return map$1(coll, (x, iterCb) => {\n        _iteratee(x, (err, criteria) => {\n            if (err) return iterCb(err);\n            iterCb(err, {value: x, criteria});\n        });\n    }, (err, results) => {\n        if (err) return callback(err);\n        callback(null, results.sort(comparator).map(v => v.value));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nvar sortBy$1 = awaitify(sortBy, 3);\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams((args, callback) => {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push((...cbArgs) => {\n            if (!timedOut) {\n                callback(...cbArgs);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn(...args);\n    });\n}\n\nfunction range(size) {\n    var result = Array(size);\n    while (size--) {\n        result[size] = size;\n    }\n    return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(range(count), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nfunction times (n, iteratee, callback) {\n    return timesLimit(n, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesSeries (n, iteratee, callback) {\n    return timesLimit(n, 1, iteratee, callback)\n}\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in parallel, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileList, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileList, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let result = await async.transform(fileList, transformFileSize);\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileMap = { f1: 'file1.txt', f2: 'file2.txt', f3: 'file3.txt' };\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileMap, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileMap, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.transform(fileMap, transformFileSize);\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3 && typeof accumulator === 'function') {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = Array.isArray(coll) ? [] : {};\n    }\n    callback = once(callback || promiseCallback());\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf$1(coll, (v, k, cb) => {\n        _iteratee(accumulator, v, k, cb);\n    }, err => callback(err, accumulator));\n    return callback[PROMISE_SYMBOL]\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    return eachSeries$1(tasks, (task, taskCb) => {\n        wrapAsync(task)((err, ...args) => {\n            if (err === false) return taskCb(err);\n\n            if (args.length < 2) {\n                [result] = args;\n            } else {\n                result = args;\n            }\n            error = err;\n            taskCb(err ? null : {});\n        });\n    }, () => callback(error, result));\n}\n\nvar tryEach$1 = awaitify(tryEach);\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return (...args) => {\n        return (fn.unmemoized || fn)(...args);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function test(cb) { cb(null, count < 5); },\n *     function iter(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results = [];\n\n    function next(err, ...rest) {\n        if (err) return callback(err);\n        results = rest;\n        if (err === false) return;\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return _test(check);\n}\nvar whilst$1 = awaitify(whilst, 3);\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with (callback).\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n * const results = []\n * let finished = false\n * async.until(function test(cb) {\n *     cb(null, finished)\n * }, function iter(next) {\n *     fetchPage(url, (err, body) => {\n *         if (err) return next(err)\n *         results = results.concat(body.objects)\n *         finished = !!body.next\n *         next(err)\n *     })\n * }, function done (err) {\n *     // all pages have been fetched\n * })\n */\nfunction until(test, iteratee, callback) {\n    const _test = wrapAsync(test);\n    return whilst$1((cb) => _test((err, truth) => cb (err, !truth)), iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall (tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        task(...args, onlyOnce(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nvar waterfall$1 = awaitify(waterfall);\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\nvar index = {\n    apply,\n    applyEach: applyEach$1,\n    applyEachSeries,\n    asyncify,\n    auto,\n    autoInject,\n    cargo,\n    cargoQueue: cargo$1,\n    compose,\n    concat: concat$1,\n    concatLimit: concatLimit$1,\n    concatSeries: concatSeries$1,\n    constant,\n    detect: detect$1,\n    detectLimit: detectLimit$1,\n    detectSeries: detectSeries$1,\n    dir,\n    doUntil,\n    doWhilst: doWhilst$1,\n    each,\n    eachLimit: eachLimit$2,\n    eachOf: eachOf$1,\n    eachOfLimit: eachOfLimit$2,\n    eachOfSeries: eachOfSeries$1,\n    eachSeries: eachSeries$1,\n    ensureAsync,\n    every: every$1,\n    everyLimit: everyLimit$1,\n    everySeries: everySeries$1,\n    filter: filter$1,\n    filterLimit: filterLimit$1,\n    filterSeries: filterSeries$1,\n    forever: forever$1,\n    groupBy,\n    groupByLimit: groupByLimit$1,\n    groupBySeries,\n    log,\n    map: map$1,\n    mapLimit: mapLimit$1,\n    mapSeries: mapSeries$1,\n    mapValues,\n    mapValuesLimit: mapValuesLimit$1,\n    mapValuesSeries,\n    memoize,\n    nextTick,\n    parallel,\n    parallelLimit,\n    priorityQueue,\n    queue: queue$1,\n    race: race$1,\n    reduce: reduce$1,\n    reduceRight,\n    reflect,\n    reflectAll,\n    reject: reject$2,\n    rejectLimit: rejectLimit$1,\n    rejectSeries: rejectSeries$1,\n    retry,\n    retryable,\n    seq,\n    series,\n    setImmediate: setImmediate$1,\n    some: some$1,\n    someLimit: someLimit$1,\n    someSeries: someSeries$1,\n    sortBy: sortBy$1,\n    timeout,\n    times,\n    timesLimit,\n    timesSeries,\n    transform,\n    tryEach: tryEach$1,\n    unmemoize,\n    until,\n    waterfall: waterfall$1,\n    whilst: whilst$1,\n\n    // aliases\n    all: every$1,\n    allLimit: everyLimit$1,\n    allSeries: everySeries$1,\n    any: some$1,\n    anyLimit: someLimit$1,\n    anySeries: someSeries$1,\n    find: detect$1,\n    findLimit: detectLimit$1,\n    findSeries: detectSeries$1,\n    flatMap: concat$1,\n    flatMapLimit: concatLimit$1,\n    flatMapSeries: concatSeries$1,\n    forEach: each,\n    forEachSeries: eachSeries$1,\n    forEachLimit: eachLimit$2,\n    forEachOf: eachOf$1,\n    forEachOfSeries: eachOfSeries$1,\n    forEachOfLimit: eachOfLimit$2,\n    inject: reduce$1,\n    foldl: reduce$1,\n    foldr: reduceRight,\n    select: filter$1,\n    selectLimit: filterLimit$1,\n    selectSeries: filterSeries$1,\n    wrapSync: asyncify,\n    during: whilst$1,\n    doDuring: doWhilst$1\n};\n\nexport default index;\nexport { apply, applyEach$1 as applyEach, applyEachSeries, asyncify, auto, autoInject, cargo, cargo$1 as cargoQueue, compose, concat$1 as concat, concatLimit$1 as concatLimit, concatSeries$1 as concatSeries, constant, detect$1 as detect, detectLimit$1 as detectLimit, detectSeries$1 as detectSeries, dir, doUntil, doWhilst$1 as doWhilst, each, eachLimit$2 as eachLimit, eachOf$1 as eachOf, eachOfLimit$2 as eachOfLimit, eachOfSeries$1 as eachOfSeries, eachSeries$1 as eachSeries, ensureAsync, every$1 as every, everyLimit$1 as everyLimit, everySeries$1 as everySeries, filter$1 as filter, filterLimit$1 as filterLimit, filterSeries$1 as filterSeries, forever$1 as forever, groupBy, groupByLimit$1 as groupByLimit, groupBySeries, log, map$1 as map, mapLimit$1 as mapLimit, mapSeries$1 as mapSeries, mapValues, mapValuesLimit$1 as mapValuesLimit, mapValuesSeries, memoize, nextTick, parallel, parallelLimit, priorityQueue, queue$1 as queue, race$1 as race, reduce$1 as reduce, reduceRight, reflect, reflectAll, reject$2 as reject, rejectLimit$1 as rejectLimit, rejectSeries$1 as rejectSeries, retry, retryable, seq, series, setImmediate$1 as setImmediate, some$1 as some, someLimit$1 as someLimit, someSeries$1 as someSeries, sortBy$1 as sortBy, timeout, times, timesLimit, timesSeries, transform, tryEach$1 as tryEach, unmemoize, until, waterfall$1 as waterfall, whilst$1 as whilst, every$1 as all, everyLimit$1 as allLimit, everySeries$1 as allSeries, some$1 as any, someLimit$1 as anyLimit, someSeries$1 as anySeries, detect$1 as find, detectLimit$1 as findLimit, detectSeries$1 as findSeries, concat$1 as flatMap, concatLimit$1 as flatMapLimit, concatSeries$1 as flatMapSeries, each as forEach, eachSeries$1 as forEachSeries, eachLimit$2 as forEachLimit, eachOf$1 as forEachOf, eachOfSeries$1 as forEachOfSeries, eachOfLimit$2 as forEachOfLimit, reduce$1 as inject, reduce$1 as foldl, reduceRight as foldr, filter$1 as select, filterLimit$1 as selectLimit, filterSeries$1 as selectSeries, asyncify as wrapSync, whilst$1 as during, doWhilst$1 as doDuring };\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n      if (options.baseIRI) {\n        this._baseMatcher = new RegExp(`^${escapeRegex(options.baseIRI)\n            }${options.baseIRI.endsWith('/') ? '' : '[#?]'}`);\n        this._baseLength = options.baseIRI.length;\n      }\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseMatcher && this._baseMatcher.test(iri))\n      iri = iri.substr(this._baseLength);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = escapeRegex(IRIlist, /[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeRegex(regex) {\n  return regex.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n}\n","import asyncLib from 'async' // @@ Goal: remove this dependency\nimport jsonld from 'jsonld'\nimport { Parser, Writer } from 'n3'  // @@ Goal: remove this dependency\n\nexport function convertToJson (n3String, jsonCallback) {\n  var jsonString\n  var n3Parser = new Parser()\n  var n3Writer = new Writer({\n    format: 'N-Quads'\n  })\n  asyncLib.waterfall([\n    function (callback) {\n      n3Parser.parse(n3String, function (error, quad, prefixes) {\n        if (error) {\n          callback(error);\n        } else if (quad !== null) {\n          n3Writer.addQuad(quad);\n        } else {\n          n3Writer.end(callback);\n        }\n      });\n    },\n    function (result, callback) {\n      try {\n        jsonld.fromRDF(result, {\n          format: 'application/nquads'\n        }).then((result) => {\n          callback(null, result)\n        })\n      } catch (err) {\n        callback(err)\n      }\n    },\n    function (json, callback) {\n      jsonString = JSON.stringify(json)\n      jsonCallback(null, jsonString)\n    }\n  ], function (err, result) {\n    jsonCallback(err, jsonString)\n  }\n  )\n}\n\nexport function convertToNQuads (n3String, nquadCallback) {\n  var nquadString\n  var n3Parser = new Parser()\n  var n3Writer = new Writer({\n    format: 'N-Quads'\n  })\n  asyncLib.waterfall([\n    function (callback) {\n      n3Parser.parse(n3String, function (error, triple, prefixes) {\n        if (error) {\n          callback(error);\n        } else if (quad !== null) {\n          n3Writer.addQuad(quad);\n        } else {\n          n3Writer.end(callback);\n        }\n      });\n    },\n    function (result, callback) {\n      nquadString = result\n      nquadCallback(null, nquadString)\n    }\n  ], function (err, result) {\n    nquadCallback(err, nquadString)\n  }\n  )\n}\n","import jsonld from 'jsonld'\n\nimport { arrayToStatements } from './utils'\n\n/**\n * Parses json-ld formatted JS objects to a rdf Term.\n * @param kb - The DataFactory to use.\n * @param obj - The json-ld object to process.\n * @return {Literal|NamedNode|BlankNode|Collection}\n */\nexport function jsonldObjectToTerm (kb, obj) {\n  if (typeof obj === 'string') {\n    return kb.rdfFactory.literal(obj)\n  }\n\n  if (Object.prototype.hasOwnProperty.call(obj, '@list')) {\n    if (kb.rdfFactory.supports[\"COLLECTIONS\"] === true) {\n      return listToCollection(kb, obj['@list'])\n    }\n\n    return listToStatements(kb, obj)\n  }\n\n  if (Object.prototype.hasOwnProperty.call(obj, '@id')) {\n    return kb.rdfFactory.namedNode(obj['@id'])\n  }\n\n  if (Object.prototype.hasOwnProperty.call(obj, '@language')) {\n    return kb.rdfFactory.literal(obj['@value'], obj['@language'])\n  }\n\n  if (Object.prototype.hasOwnProperty.call(obj, '@type')) {\n    return kb.rdfFactory.literal(obj['@value'], kb.rdfFactory.namedNode(obj['@type']))\n  }\n\n  if (Object.prototype.hasOwnProperty.call(obj, '@value')) {\n    return kb.rdfFactory.literal(obj['@value'])\n  }\n\n  return kb.rdfFactory.literal(obj)\n}\n\n/**\n * Adds the statements in a json-ld list object to {kb}.\n */\nfunction listToStatements (kb, obj) {\n  const listId = obj['@id'] ? kb.rdfFactory.namedNode(obj['@id']) : kb.rdfFactory.blankNode()\n\n  const items = obj['@list'].map((listItem => jsonldObjectToTerm(kb, listItem)))\n  const statements = arrayToStatements(kb.rdfFactory, listId, items)\n  kb.addAll(statements)\n\n  return listId\n}\n\nfunction listToCollection (kb, obj) {\n  if (!Array.isArray(obj)) {\n    throw new TypeError(\"Object must be an array\")\n  }\n  return kb.rdfFactory.collection(obj.map((o) => jsonldObjectToTerm(kb, o)))\n}\n\n/**\n * Takes a json-ld formatted string {str} and adds its statements to {kb}.\n *\n * Ensure that {kb.rdfFactory} is a DataFactory.\n */\nexport default function jsonldParser (str, kb, base, callback) {\n  const baseString = base && Object.prototype.hasOwnProperty.call(base, 'termType')\n    ? base.value\n    : base\n\n  return jsonld\n    .flatten(JSON.parse(str), null, { base: baseString })\n    .then((flattened) => flattened.reduce((store, flatResource) => {\n      const id = flatResource['@id']\n        ? kb.rdfFactory.namedNode(flatResource['@id'])\n        : kb.rdfFactory.blankNode()\n\n      for (const property of Object.keys(flatResource)) {\n        if (property === '@id') {\n          continue\n        }\n        const value = flatResource[property]\n        if (Array.isArray(value)) {\n          for (let i = 0; i < value.length; i++) {\n            kb.addStatement(createStatement(kb, id, property, value[i], base))\n          }\n        } else {\n          kb.addStatement(createStatement(kb, id, property, value, base))\n        }\n      }\n\n      return kb\n    }, kb))\n    .then(callback)\n    .catch(callback)\n}\n\n/**\n * Create statement quad depending on @type being a type node\n * @param kb\n * @param subject id\n * @param property\n * @param value\n * @return quad statement\n */\nfunction createStatement(kb, id, property, value, base) {\n  let predicate, object\n  if (property === \"@type\") {\n    predicate = kb.rdfFactory.namedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\")\n    object = kb.rdfFactory.namedNode(value)\n  } else {\n    predicate = kb.rdfFactory.namedNode(property)\n    object = jsonldObjectToTerm(kb, value)\n  }\n  return kb.rdfFactory.quad(id, predicate, object, kb.rdfFactory.namedNode(base))\n}\n","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2019 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst canonize = require('rdf-canonize');\nconst platform = require('./platform');\nconst util = require('./util');\nconst ContextResolver = require('./ContextResolver');\nconst IdentifierIssuer = util.IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\nconst LRU = require('lru-cache');\nconst NQuads = require('./NQuads');\n\nconst {expand: _expand} = require('./expand');\nconst {flatten: _flatten} = require('./flatten');\nconst {fromRDF: _fromRDF} = require('./fromRdf');\nconst {toRDF: _toRDF} = require('./toRdf');\n\nconst {\n  frameMergedOrDefault: _frameMergedOrDefault,\n  cleanupNull: _cleanupNull\n} = require('./frame');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString\n} = require('./types');\n\nconst {\n  isSubjectReference: _isSubjectReference,\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getInitialContext: _getInitialContext,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  compact: _compact,\n  compactIri: _compactIri\n} = require('./compact');\n\nconst {\n  createNodeMap: _createNodeMap,\n  createMergedNodeMap: _createMergedNodeMap,\n  mergeNodeMaps: _mergeNodeMaps\n} = require('./nodeMap');\n\n/* eslint-disable indent */\n// attaches jsonld API to the given object\nconst wrapper = function(jsonld) {\n\n/** Registered RDF dataset parsers hashed by content-type. */\nconst _rdfParsers = {};\n\n// resolved context cache\n// TODO: consider basing max on context size rather than number\nconst RESOLVED_CONTEXT_CACHE_MAX_SIZE = 100;\nconst _resolvedContextCache = new LRU({max: RESOLVED_CONTEXT_CACHE_MAX_SIZE});\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [compactToRelative] true to compact IRIs to be relative to document\n *            base, false to keep absolute (default: true)\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [framing] true if compaction is occuring during a framing operation.\n *          [compactionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the compacted output.\n */\njsonld.compact = async function(input, ctx, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not compact, too few arguments.');\n  }\n\n  if(ctx === null) {\n    throw new JsonLdError(\n      'The compaction context must not be null.',\n      'jsonld.CompactError', {code: 'invalid local context'});\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    compactArrays: true,\n    compactToRelative: true,\n    graph: false,\n    skipExpansion: false,\n    link: false,\n    issuer: new IdentifierIssuer('_:b'),\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n  if(!options.compactToRelative) {\n    delete options.base;\n  }\n\n  // expand input\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), ctx, options);\n\n  // do compaction\n  let compacted = await _compact({\n    activeCtx,\n    element: expanded,\n    options,\n    compactionMap: options.compactionMap\n  });\n\n  // perform clean up\n  if(options.compactArrays && !options.graph && _isArray(compacted)) {\n    if(compacted.length === 1) {\n      // simplify to a single item\n      compacted = compacted[0];\n    } else if(compacted.length === 0) {\n      // simplify to an empty object\n      compacted = {};\n    }\n  } else if(options.graph && _isObject(compacted)) {\n    // always use array if graph option is on\n    compacted = [compacted];\n  }\n\n  // follow @context key\n  if(_isObject(ctx) && '@context' in ctx) {\n    ctx = ctx['@context'];\n  }\n\n  // build output context\n  ctx = util.clone(ctx);\n  if(!_isArray(ctx)) {\n    ctx = [ctx];\n  }\n  // remove empty contexts\n  const tmp = ctx;\n  ctx = [];\n  for(let i = 0; i < tmp.length; ++i) {\n    if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n      ctx.push(tmp[i]);\n    }\n  }\n\n  // remove array if only one context\n  const hasContext = (ctx.length > 0);\n  if(ctx.length === 1) {\n    ctx = ctx[0];\n  }\n\n  // add context and/or @graph\n  if(_isArray(compacted)) {\n    // use '@graph' keyword\n    const graphAlias = _compactIri({\n      activeCtx, iri: '@graph', relativeTo: {vocab: true}\n    });\n    const graph = compacted;\n    compacted = {};\n    if(hasContext) {\n      compacted['@context'] = ctx;\n    }\n    compacted[graphAlias] = graph;\n  } else if(_isObject(compacted) && hasContext) {\n    // reorder keys so @context is first\n    const graph = compacted;\n    compacted = {'@context': ctx};\n    for(const key in graph) {\n      compacted[key] = graph[key];\n    }\n  }\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the expanded output.\n */\njsonld.expand = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not expand, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    keepFreeFloatingNodes: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.expansionMap === false) {\n    options.expansionMap = undefined;\n  }\n\n  // build set of objects that may have @contexts to resolve\n  const toResolve = {};\n\n  // build set of contexts to process prior to expansion\n  const contextsToProcess = [];\n\n  // if an `expandContext` has been given ensure it gets resolved\n  if('expandContext' in options) {\n    const expandContext = util.clone(options.expandContext);\n    if(_isObject(expandContext) && '@context' in expandContext) {\n      toResolve.expandContext = expandContext;\n    } else {\n      toResolve.expandContext = {'@context': expandContext};\n    }\n    contextsToProcess.push(toResolve.expandContext);\n  }\n\n  // if input is a string, attempt to dereference remote document\n  let defaultBase;\n  if(!_isString(input)) {\n    // input is not a URL, do not need to retrieve it first\n    toResolve.input = util.clone(input);\n  } else {\n    // load remote doc\n    const remoteDoc = await jsonld.get(input, options);\n    defaultBase = remoteDoc.documentUrl;\n    toResolve.input = remoteDoc.document;\n    if(remoteDoc.contextUrl) {\n      // context included in HTTP link header and must be resolved\n      toResolve.remoteContext = {'@context': remoteDoc.contextUrl};\n      contextsToProcess.push(toResolve.remoteContext);\n    }\n  }\n\n  // set default base\n  if(!('base' in options)) {\n    options.base = defaultBase || '';\n  }\n\n  // process any additional contexts\n  let activeCtx = _getInitialContext(options);\n  for(const localCtx of contextsToProcess) {\n    activeCtx = await _processContext({activeCtx, localCtx, options});\n  }\n\n  // expand resolved input\n  let expanded = await _expand({\n    activeCtx,\n    element: toResolve.input,\n    options,\n    expansionMap: options.expansionMap\n  });\n\n  // optimize away @graph with no other properties\n  if(_isObject(expanded) && ('@graph' in expanded) &&\n    Object.keys(expanded).length === 1) {\n    expanded = expanded['@graph'];\n  } else if(expanded === null) {\n    expanded = [];\n  }\n\n  // normalize to an array\n  if(!_isArray(expanded)) {\n    expanded = [expanded];\n  }\n\n  return expanded;\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the flattened output.\n */\njsonld.flatten = async function(input, ctx, options) {\n  if(arguments.length < 1) {\n    return new TypeError('Could not flatten, too few arguments.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // do flattening\n  const flattened = _flatten(expanded);\n\n  if(ctx === null) {\n    // no compaction required\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the framed output.\n */\njsonld.frame = async function(input, frame, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not frame, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    embed: '@once',\n    explicit: false,\n    requireAll: false,\n    omitDefault: false,\n    bnodesToClear: [],\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // if frame is a string, attempt to dereference remote document\n  if(_isString(frame)) {\n    // load remote doc\n    const remoteDoc = await jsonld.get(frame, options);\n    frame = remoteDoc.document;\n\n    if(remoteDoc.contextUrl) {\n      // inject link header @context into frame\n      let ctx = frame['@context'];\n      if(!ctx) {\n        ctx = remoteDoc.contextUrl;\n      } else if(_isArray(ctx)) {\n        ctx.push(remoteDoc.contextUrl);\n      } else {\n        ctx = [ctx, remoteDoc.contextUrl];\n      }\n      frame['@context'] = ctx;\n    }\n  }\n\n  const frameContext = frame ? frame['@context'] || {} : {};\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), frameContext, options);\n\n  // mode specific defaults\n  if(!options.hasOwnProperty('omitGraph')) {\n    options.omitGraph = _processingMode(activeCtx, 1.1);\n  }\n  if(!options.hasOwnProperty('pruneBlankNodeIdentifiers')) {\n    options.pruneBlankNodeIdentifiers = _processingMode(activeCtx, 1.1);\n  }\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // expand frame\n  const opts = {...options};\n  opts.isFrame = true;\n  opts.keepFreeFloatingNodes = true;\n  const expandedFrame = await jsonld.expand(frame, opts);\n\n  // if the unexpanded frame includes a key expanding to @graph, frame the\n  // default graph, otherwise, the merged graph\n  const frameKeys = Object.keys(frame)\n    .map(key => _expandIri(activeCtx, key, {vocab: true}));\n  opts.merged = !frameKeys.includes('@graph');\n  opts.is11 = _processingMode(activeCtx, 1.1);\n\n  // do framing\n  const framed = _frameMergedOrDefault(expanded, expandedFrame, opts);\n\n  opts.graph = !options.omitGraph;\n  opts.skipExpansion = true;\n  opts.link = {};\n  opts.framing = true;\n  let compacted = await jsonld.compact(framed, frameContext, opts);\n\n  // replace @null with null, compacting arrays\n  opts.link = {};\n  compacted = _cleanupNull(compacted, opts);\n\n  return compacted;\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param [ctx] the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the linked output.\n */\njsonld.link = async function(input, ctx, options) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  const frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  return jsonld.frame(input, frame, options);\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URDNA2015`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/n-quads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/n-quads' for N-Quads.\n *          [documentLoader(url, options)] the document loader.\n *          [useNative] true to use a native canonize algorithm\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the normalized output.\n */\njsonld.normalize = jsonld.canonize = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not canonize, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    algorithm: 'URDNA2015',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/n-quads' &&\n      options.inputFormat !== 'application/nquads') {\n      throw new JsonLdError(\n        'Unknown canonicalization input format.',\n        'jsonld.CanonizeError');\n    }\n    // TODO: `await` for async parsers\n    const parsedInput = NQuads.parse(input);\n\n    // do canonicalization\n    return canonize.canonize(parsedInput, options);\n  }\n\n  // convert to RDF dataset then do normalization\n  const opts = {...options};\n  delete opts.format;\n  opts.produceGeneralizedRdf = false;\n  const dataset = await jsonld.toRDF(input, opts);\n\n  // do canonicalization\n  return canonize.canonize(dataset, options);\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/n-quads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n *\n * @return a Promise that resolves to the JSON-LD document.\n */\njsonld.fromRDF = async function(dataset, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert from RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    format: _isString(dataset) ? 'application/n-quads' : undefined\n  });\n\n  const {format} = options;\n  let {rdfParser} = options;\n\n  // handle special format\n  if(format) {\n    // check supported formats\n    rdfParser = rdfParser || _rdfParsers[format];\n    if(!rdfParser) {\n      throw new JsonLdError(\n        'Unknown input format.',\n        'jsonld.UnknownFormat', {format});\n    }\n  } else {\n    // no-op parser, assume dataset already parsed\n    rdfParser = () => dataset;\n  }\n\n  // rdfParser must be synchronous or return a promise, no callback support\n  const parsedDataset = await rdfParser(dataset);\n  return _fromRDF(parsedDataset, options);\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [format] the format to use to output a string:\n *            'application/n-quads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the RDF dataset.\n */\njsonld.toRDF = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert to RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // TODO: support toRDF custom map?\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    // expand input\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // output RDF dataset\n  const dataset = _toRDF(expanded, options);\n  if(options.format) {\n    if(options.format === 'application/n-quads' ||\n      options.format === 'application/nquads') {\n      return NQuads.serialize(dataset);\n    }\n    throw new JsonLdError(\n      'Unknown output format.',\n      'jsonld.UnknownFormat', {format: options.format});\n  }\n\n  return dataset;\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a merged\n * map of node ID => node. All graphs will be merged into the default graph.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged node map.\n */\njsonld.createNodeMap = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not create node map, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  return _createMergedNodeMap(expanded, options);\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged output.\n */\njsonld.merge = async function(docs, ctx, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not merge, too few arguments.');\n  }\n  if(!_isArray(docs)) {\n    throw new TypeError('Could not merge, \"docs\" must be an array.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand all documents\n  const expanded = await Promise.all(docs.map(doc => {\n    const opts = {...options};\n    return jsonld.expand(doc, opts);\n  }));\n\n  let mergeNodes = true;\n  if('mergeNodes' in options) {\n    mergeNodes = options.mergeNodes;\n  }\n\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n\n  for(let i = 0; i < expanded.length; ++i) {\n    // uniquely relabel blank nodes\n    const doc = util.relabelBlankNodes(expanded[i], {\n      issuer: new IdentifierIssuer('_:b' + i + '-')\n    });\n\n    // add nodes to the shared node map graphs if merging nodes, to a\n    // separate graph set if not\n    const _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n    _createNodeMap(doc, _graphs, '@default', issuer);\n\n    if(_graphs !== graphs) {\n      // merge document graphs but don't merge existing nodes\n      for(const graphName in _graphs) {\n        const _nodeMap = _graphs[graphName];\n        if(!(graphName in graphs)) {\n          graphs[graphName] = _nodeMap;\n          continue;\n        }\n        const nodeMap = graphs[graphName];\n        for(const key in _nodeMap) {\n          if(!(key in nodeMap)) {\n            nodeMap[key] = _nodeMap[key];\n          }\n        }\n      }\n    }\n  }\n\n  // add all non-default graphs to default graph\n  const defaultGraph = _mergeNodeMaps(graphs);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  if(ctx === null) {\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * The default document loader for external documents.\n *\n * @param url the URL to load.\n *\n * @return a promise that resolves to the remote document.\n */\nObject.defineProperty(jsonld, 'documentLoader', {\n  get: () => jsonld._documentLoader,\n  set: v => jsonld._documentLoader = v\n});\n// default document loader not implemented\njsonld.documentLoader = async url => {\n  throw new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed', url});\n};\n\n/**\n * Gets a remote JSON-LD document using the default document loader or\n * one given in the passed options.\n *\n * @param url the URL to fetch.\n * @param [options] the options to use:\n *          [documentLoader] the document loader to use.\n *\n * @return a Promise that resolves to the retrieved remote document.\n */\njsonld.get = async function(url, options) {\n  let load;\n  if(typeof options.documentLoader === 'function') {\n    load = options.documentLoader;\n  } else {\n    load = jsonld.documentLoader;\n  }\n\n  const remoteDoc = await load(url);\n\n  try {\n    if(!remoteDoc.document) {\n      throw new JsonLdError(\n        'No remote document found at the given URL.',\n        'jsonld.NullRemoteDocument');\n    }\n    if(_isString(remoteDoc.document)) {\n      remoteDoc.document = JSON.parse(remoteDoc.document);\n    }\n  } catch(e) {\n    throw new JsonLdError(\n      'Could not retrieve a JSON-LD document from the URL.',\n      'jsonld.LoadDocumentError', {\n        code: 'loading document failed',\n        cause: e,\n        remoteDoc\n      });\n  }\n\n  return remoteDoc;\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the new active context.\n */\njsonld.processContext = async function(\n  activeCtx, localCtx, options) {\n  // set default options\n  options = _setDefaults(options, {\n    base: '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return _getInitialContext(options);\n  }\n\n  // get URLs in localCtx\n  localCtx = util.clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n\n  return _processContext({activeCtx, localCtx, options});\n};\n\n// backwards compatibility\njsonld.getContextValue = require('./context').getContextValue;\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'xhr' and 'node'.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given one parameter,\n * a string of input. An RDF dataset parser can be synchronous or\n * asynchronous (by returning a promise).\n *\n * @param contentType the content-type for the parser.\n * @param parser(input) the parser function (takes a string as a parameter\n *          and either returns an RDF dataset or a Promise that resolves to one.\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/n-quads', NQuads.parse);\njsonld.registerRDFParser('application/nquads', NQuads.parse);\n\n/* URL API */\njsonld.url = require('./url');\n\n/* Utility API */\njsonld.util = util;\n// backwards compatibility\nObject.assign(jsonld, util);\n\n// reexpose API as jsonld.promises for backwards compatability\njsonld.promises = jsonld;\n\n// backwards compatibility\njsonld.RequestQueue = require('./RequestQueue');\n\n/* WebIDL API */\njsonld.JsonLdProcessor = require('./JsonLdProcessor')(jsonld);\n\nplatform.setupGlobals(jsonld);\nplatform.setupDocumentLoaders(jsonld);\n\nfunction _setDefaults(options, {\n  documentLoader = jsonld.documentLoader,\n  ...defaults\n}) {\n  return Object.assign({}, {documentLoader}, defaults, options);\n}\n\n// end of jsonld API `wrapper` factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nconst factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\n// wrap the main jsonld API instance\nwrapper(factory);\n// export API\nmodule.exports = factory;\n","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__56__;","/**\n * An implementation of the RDF Dataset Normalization specification.\n *\n * @author Dave Longley\n *\n * Copyright 2010-2021 Digital Bazaar, Inc.\n */\nmodule.exports = require('./lib');\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class IdentifierIssuer {\n  /**\n   * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n   * identifiers, keeping track of any previously issued identifiers.\n   *\n   * @param prefix the prefix to use ('<prefix><counter>').\n   * @param existing an existing Map to use.\n   * @param counter the counter to use.\n   */\n  constructor(prefix, existing = new Map(), counter = 0) {\n    this.prefix = prefix;\n    this._existing = existing;\n    this.counter = counter;\n  }\n\n  /**\n   * Copies this IdentifierIssuer.\n   *\n   * @return a copy of this IdentifierIssuer.\n   */\n  clone() {\n    const {prefix, _existing, counter} = this;\n    return new IdentifierIssuer(prefix, new Map(_existing), counter);\n  }\n\n  /**\n   * Gets the new identifier for the given old identifier, where if no old\n   * identifier is given a new identifier will be generated.\n   *\n   * @param [old] the old identifier to get the new identifier for.\n   *\n   * @return the new identifier.\n   */\n  getId(old) {\n    // return existing old identifier\n    const existing = old && this._existing.get(old);\n    if(existing) {\n      return existing;\n    }\n\n    // get next identifier\n    const identifier = this.prefix + this.counter;\n    this.counter++;\n\n    // save mapping\n    if(old) {\n      this._existing.set(old, identifier);\n    }\n\n    return identifier;\n  }\n\n  /**\n   * Returns true if the given old identifer has already been assigned a new\n   * identifier.\n   *\n   * @param old the old identifier to check.\n   *\n   * @return true if the old identifier has been assigned a new identifier,\n   *   false if not.\n   */\n  hasId(old) {\n    return this._existing.has(old);\n  }\n\n  /**\n   * Returns all of the IDs that have been issued new IDs in the order in\n   * which they were issued new IDs.\n   *\n   * @return the list of old IDs that has been issued new IDs in order.\n   */\n  getOldIds() {\n    return [...this._existing.keys()];\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// eslint-disable-next-line no-unused-vars\nconst TERMS = ['subject', 'predicate', 'object', 'graph'];\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst RDF_LANGSTRING = RDF + 'langString';\nconst XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nconst TYPE_NAMED_NODE = 'NamedNode';\nconst TYPE_BLANK_NODE = 'BlankNode';\nconst TYPE_LITERAL = 'Literal';\nconst TYPE_DEFAULT_GRAPH = 'DefaultGraph';\n\n// build regexes\nconst REGEX = {};\n(() => {\n  const iri = '(?:<([^:]+:[^>]*)>)';\n  // https://www.w3.org/TR/turtle/#grammar-production-BLANK_NODE_LABEL\n  const PN_CHARS_BASE =\n    'A-Z' + 'a-z' +\n    '\\u00C0-\\u00D6' +\n    '\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02FF' +\n    '\\u0370-\\u037D' +\n    '\\u037F-\\u1FFF' +\n    '\\u200C-\\u200D' +\n    '\\u2070-\\u218F' +\n    '\\u2C00-\\u2FEF' +\n    '\\u3001-\\uD7FF' +\n    '\\uF900-\\uFDCF' +\n    '\\uFDF0-\\uFFFD';\n    // TODO:\n    //'\\u10000-\\uEFFFF';\n  const PN_CHARS_U =\n    PN_CHARS_BASE +\n    '_';\n  const PN_CHARS =\n    PN_CHARS_U +\n    '0-9' +\n    '-' +\n    '\\u00B7' +\n    '\\u0300-\\u036F' +\n    '\\u203F-\\u2040';\n  const BLANK_NODE_LABEL =\n    '(_:' +\n      '(?:[' + PN_CHARS_U + '0-9])' +\n      '(?:(?:[' + PN_CHARS + '.])*(?:[' + PN_CHARS + ']))?' +\n    ')';\n  const bnode = BLANK_NODE_LABEL;\n  const plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  const datatype = '(?:\\\\^\\\\^' + iri + ')';\n  const language = '(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*))';\n  const literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  const ws = '[ \\\\t]+';\n  const wso = '[ \\\\t]*';\n\n  // define quad part regexes\n  const subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  const property = iri + ws;\n  const object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  const graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // end of line and empty regexes\n  REGEX.eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  REGEX.empty = new RegExp('^' + wso + '$');\n\n  // full quad regex\n  REGEX.quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + '$');\n})();\n\nmodule.exports = class NQuads {\n  /**\n   * Parses RDF in the form of N-Quads.\n   *\n   * @param input the N-Quads input to parse.\n   *\n   * @return an RDF dataset (an array of quads per http://rdf.js.org/).\n   */\n  static parse(input) {\n    // build RDF dataset\n    const dataset = [];\n\n    const graphs = {};\n\n    // split N-Quad input into lines\n    const lines = input.split(REGEX.eoln);\n    let lineNumber = 0;\n    for(const line of lines) {\n      lineNumber++;\n\n      // skip empty lines\n      if(REGEX.empty.test(line)) {\n        continue;\n      }\n\n      // parse quad\n      const match = line.match(REGEX.quad);\n      if(match === null) {\n        throw new Error('N-Quads parse error on line ' + lineNumber + '.');\n      }\n\n      // create RDF quad\n      const quad = {subject: null, predicate: null, object: null, graph: null};\n\n      // get subject\n      if(match[1] !== undefined) {\n        quad.subject = {termType: TYPE_NAMED_NODE, value: match[1]};\n      } else {\n        quad.subject = {termType: TYPE_BLANK_NODE, value: match[2]};\n      }\n\n      // get predicate\n      quad.predicate = {termType: TYPE_NAMED_NODE, value: match[3]};\n\n      // get object\n      if(match[4] !== undefined) {\n        quad.object = {termType: TYPE_NAMED_NODE, value: match[4]};\n      } else if(match[5] !== undefined) {\n        quad.object = {termType: TYPE_BLANK_NODE, value: match[5]};\n      } else {\n        quad.object = {\n          termType: TYPE_LITERAL,\n          value: undefined,\n          datatype: {\n            termType: TYPE_NAMED_NODE\n          }\n        };\n        if(match[7] !== undefined) {\n          quad.object.datatype.value = match[7];\n        } else if(match[8] !== undefined) {\n          quad.object.datatype.value = RDF_LANGSTRING;\n          quad.object.language = match[8];\n        } else {\n          quad.object.datatype.value = XSD_STRING;\n        }\n        quad.object.value = _unescape(match[6]);\n      }\n\n      // get graph\n      if(match[9] !== undefined) {\n        quad.graph = {\n          termType: TYPE_NAMED_NODE,\n          value: match[9]\n        };\n      } else if(match[10] !== undefined) {\n        quad.graph = {\n          termType: TYPE_BLANK_NODE,\n          value: match[10]\n        };\n      } else {\n        quad.graph = {\n          termType: TYPE_DEFAULT_GRAPH,\n          value: ''\n        };\n      }\n\n      // only add quad if it is unique in its graph\n      if(!(quad.graph.value in graphs)) {\n        graphs[quad.graph.value] = [quad];\n        dataset.push(quad);\n      } else {\n        let unique = true;\n        const quads = graphs[quad.graph.value];\n        for(const q of quads) {\n          if(_compareTriples(q, quad)) {\n            unique = false;\n            break;\n          }\n        }\n        if(unique) {\n          quads.push(quad);\n          dataset.push(quad);\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  /**\n   * Converts an RDF dataset to N-Quads.\n   *\n   * @param dataset (array of quads) the RDF dataset to convert.\n   *\n   * @return the N-Quads string.\n   */\n  static serialize(dataset) {\n    if(!Array.isArray(dataset)) {\n      dataset = NQuads.legacyDatasetToQuads(dataset);\n    }\n    const quads = [];\n    for(const quad of dataset) {\n      quads.push(NQuads.serializeQuad(quad));\n    }\n    return quads.sort().join('');\n  }\n\n  /**\n   * Converts an RDF quad to an N-Quad string (a single quad).\n   *\n   * @param quad the RDF quad convert.\n   *\n   * @return the N-Quad string.\n   */\n  static serializeQuad(quad) {\n    const s = quad.subject;\n    const p = quad.predicate;\n    const o = quad.object;\n    const g = quad.graph;\n\n    let nquad = '';\n\n    // subject can only be NamedNode or BlankNode\n    if(s.termType === TYPE_NAMED_NODE) {\n      nquad += `<${s.value}>`;\n    } else {\n      nquad += `${s.value}`;\n    }\n\n    // predicate can only be NamedNode\n    nquad += ` <${p.value}> `;\n\n    // object is NamedNode, BlankNode, or Literal\n    if(o.termType === TYPE_NAMED_NODE) {\n      nquad += `<${o.value}>`;\n    } else if(o.termType === TYPE_BLANK_NODE) {\n      nquad += o.value;\n    } else {\n      nquad += `\"${_escape(o.value)}\"`;\n      if(o.datatype.value === RDF_LANGSTRING) {\n        if(o.language) {\n          nquad += `@${o.language}`;\n        }\n      } else if(o.datatype.value !== XSD_STRING) {\n        nquad += `^^<${o.datatype.value}>`;\n      }\n    }\n\n    // graph can only be NamedNode or BlankNode (or DefaultGraph, but that\n    // does not add to `nquad`)\n    if(g.termType === TYPE_NAMED_NODE) {\n      nquad += ` <${g.value}>`;\n    } else if(g.termType === TYPE_BLANK_NODE) {\n      nquad += ` ${g.value}`;\n    }\n\n    nquad += ' .\\n';\n    return nquad;\n  }\n\n  /**\n   * Converts a legacy-formatted dataset to an array of quads dataset per\n   * http://rdf.js.org/.\n   *\n   * @param dataset the legacy dataset to convert.\n   *\n   * @return the array of quads dataset.\n   */\n  static legacyDatasetToQuads(dataset) {\n    const quads = [];\n\n    const termTypeMap = {\n      'blank node': TYPE_BLANK_NODE,\n      IRI: TYPE_NAMED_NODE,\n      literal: TYPE_LITERAL\n    };\n\n    for(const graphName in dataset) {\n      const triples = dataset[graphName];\n      triples.forEach(triple => {\n        const quad = {};\n        for(const componentName in triple) {\n          const oldComponent = triple[componentName];\n          const newComponent = {\n            termType: termTypeMap[oldComponent.type],\n            value: oldComponent.value\n          };\n          if(newComponent.termType === TYPE_LITERAL) {\n            newComponent.datatype = {\n              termType: TYPE_NAMED_NODE\n            };\n            if('datatype' in oldComponent) {\n              newComponent.datatype.value = oldComponent.datatype;\n            }\n            if('language' in oldComponent) {\n              if(!('datatype' in oldComponent)) {\n                newComponent.datatype.value = RDF_LANGSTRING;\n              }\n              newComponent.language = oldComponent.language;\n            } else if(!('datatype' in oldComponent)) {\n              newComponent.datatype.value = XSD_STRING;\n            }\n          }\n          quad[componentName] = newComponent;\n        }\n        if(graphName === '@default') {\n          quad.graph = {\n            termType: TYPE_DEFAULT_GRAPH,\n            value: ''\n          };\n        } else {\n          quad.graph = {\n            termType: graphName.startsWith('_:') ?\n              TYPE_BLANK_NODE : TYPE_NAMED_NODE,\n            value: graphName\n          };\n        }\n        quads.push(quad);\n      });\n    }\n\n    return quads;\n  }\n};\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareTriples(t1, t2) {\n  // compare subject and object types first as it is the quickest check\n  if(!(t1.subject.termType === t2.subject.termType &&\n    t1.object.termType === t2.object.termType)) {\n    return false;\n  }\n  // compare values\n  if(!(t1.subject.value === t2.subject.value &&\n    t1.predicate.value === t2.predicate.value &&\n    t1.object.value === t2.object.value)) {\n    return false;\n  }\n  if(t1.object.termType !== TYPE_LITERAL) {\n    // no `datatype` or `language` to check\n    return true;\n  }\n  return (\n    (t1.object.datatype.termType === t2.object.datatype.termType) &&\n    (t1.object.language === t2.object.language) &&\n    (t1.object.datatype.value === t2.object.datatype.value)\n  );\n}\n\nconst _escapeRegex = /[\"\\\\\\n\\r]/g;\n/**\n * Escape string to N-Quads literal\n */\nfunction _escape(s) {\n  return s.replace(_escapeRegex, function(match) {\n    switch(match) {\n      case '\"': return '\\\\\"';\n      case '\\\\': return '\\\\\\\\';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n    }\n  });\n}\n\nconst _unescapeRegex =\n  /(?:\\\\([tbnrf\"'\\\\]))|(?:\\\\u([0-9A-Fa-f]{4}))|(?:\\\\U([0-9A-Fa-f]{8}))/g;\n/**\n * Unescape N-Quads literal to string\n */\nfunction _unescape(s) {\n  return s.replace(_unescapeRegex, function(match, code, u, U) {\n    if(code) {\n      switch(code) {\n        case 't': return '\\t';\n        case 'b': return '\\b';\n        case 'n': return '\\n';\n        case 'r': return '\\r';\n        case 'f': return '\\f';\n        case '\"': return '\"';\n        case '\\'': return '\\'';\n        case '\\\\': return '\\\\';\n      }\n    }\n    if(u) {\n      return String.fromCharCode(parseInt(u, 16));\n    }\n    if(U) {\n      // FIXME: support larger values\n      throw new Error('Unsupported U escape');\n    }\n  });\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst XSD = 'http://www.w3.org/2001/XMLSchema#';\n\nmodule.exports = {\n  // TODO: Deprecated and will be removed later. Use LINK_HEADER_CONTEXT.\n  LINK_HEADER_REL: 'http://www.w3.org/ns/json-ld#context',\n\n  LINK_HEADER_CONTEXT: 'http://www.w3.org/ns/json-ld#context',\n\n  RDF,\n  RDF_LIST: RDF + 'List',\n  RDF_FIRST: RDF + 'first',\n  RDF_REST: RDF + 'rest',\n  RDF_NIL: RDF + 'nil',\n  RDF_TYPE: RDF + 'type',\n  RDF_PLAIN_LITERAL: RDF + 'PlainLiteral',\n  RDF_XML_LITERAL: RDF + 'XMLLiteral',\n  RDF_JSON_LITERAL: RDF + 'JSON',\n  RDF_OBJECT: RDF + 'object',\n  RDF_LANGSTRING: RDF + 'langString',\n\n  XSD,\n  XSD_BOOLEAN: XSD + 'boolean',\n  XSD_DOUBLE: XSD + 'double',\n  XSD_INTEGER: XSD + 'integer',\n  XSD_STRING: XSD + 'string',\n};\n","import Node from './node-internal'\nimport { EmptyTermType } from './types'\nimport { Term } from './tf-types'\n\n/**\n* An empty node\n*/\nexport default class Empty extends Node implements Term {\n  termType: typeof EmptyTermType = EmptyTermType\n\n  constructor () {\n    super('')\n  }\n\n  toString () {\n    return '()'\n  }\n}\n","export default (function () {\r\n  return {\r\n    parseJSON: function (data, source, store) {\r\n      var subject, predicate, object\r\n      var bnodes = {}\r\n      var why = store.sym(source)\r\n      for (var x in data) {\r\n        if (x.indexOf('_:') === 0) {\r\n          if (bnodes[x]) {\r\n            subject = bnodes[x]\r\n          } else {\r\n            subject = store.bnode(x)\r\n            bnodes[x] = subject\r\n          }\r\n        } else {\r\n          subject = store.sym(x)\r\n        }\r\n        var preds = data[x]\r\n        for (var y in preds) {\r\n          var objects = preds[y]\r\n          predicate = store.sym(y)\r\n          for (var z in objects) {\r\n            var obj = objects[z]\r\n            if (obj.type === 'uri') {\r\n              object = store.sym(obj.value)\r\n              store.add(subject, predicate, object, why)\r\n            } else if (obj.type === 'BlankNode') {\r\n              if (bnodes[obj.value]) {\r\n                object = bnodes[obj.value]\r\n              } else {\r\n                object = store.bnode(obj.value)\r\n                bnodes[obj.value] = object\r\n              }\r\n              store.add(subject, predicate, object, why)\r\n            } else if (obj.type === 'Literal') {\r\n              // var datatype\r\n              if (obj.datatype) {\r\n                object = store.literal(obj.value, undefined, store.sym(obj.datatype))\r\n              } else if (obj.lang) {\r\n                object = store.literal(obj.value, obj.lang)\r\n              } else {\r\n                object = store.literal(obj.value)\r\n              }\r\n              store.add(subject, predicate, object, why)\r\n            } else {\r\n              throw new Error('error: unexpected termtype: ' + z.type)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})()\r\n","import log from './log'\n\nexport default function queryToSPARQL (query) {\n  var indent = 0\n  function getSelect (query) {\n    var str = addIndent() + 'SELECT '\n    for (var i = 0; i < query.vars.length; i++) {\n      str += query.vars[i] + ' '\n    }\n    str += '\\n'\n    return str\n  }\n\n  function getPattern (pat) {\n    var str = ''\n    var st = pat.statements\n    for (var x in st) {\n      log.debug('Found statement: ' + st)\n      str += addIndent() + st[x] + '\\n'\n    }\n    return str\n  }\n\n  function getConstraints (pat) {\n    var str = ''\n    for (var v in pat.constraints) {\n      var foo = pat.constraints[v]\n      str += addIndent() + 'FILTER ( ' + foo.describe(v) + ' ) ' + '\\n'\n    }\n    return str\n  }\n\n  function getOptionals (pat) {\n    var str = ''\n    for (var x = 0; x < pat.optional.length; x++) {\n      // alert(pat.optional.termType)\n      log.debug('Found optional query')\n      str += addIndent() + 'OPTIONAL { ' + '\\n'\n      indent++\n      str += getPattern(pat.optional[x])\n      str += getConstraints(pat.optional[x])\n      str += getOptionals(pat.optional[x])\n      indent--\n      str += addIndent() + '}' + '\\n'\n    }\n    return str\n  }\n\n  function getWhere (pat) {\n    var str = addIndent() + 'WHERE \\n' + '{ \\n'\n    indent++\n    str += getPattern(pat)\n    str += getConstraints(pat)\n    str += getOptionals(pat)\n    indent--\n    str += '}'\n    return str\n  }\n\n  function addIndent () {\n    var str = ''\n    for (var i = 0; i < indent; i++) {\n      str += '    '\n    }\n    return str\n  }\n\n  function getSPARQL (query) {\n    return getSelect(query) + getWhere(query.pat)\n  }\n\n  return getSPARQL(query)\n}\n","// Converting between SPARQL queries and the $rdf query API\n/*\n\nfunction SQuery () {\n  this.terms = []\n  return this\n}\n\nSTerm.prototype.toString = STerm.val\nSQuery.prototype.add = function (str) {this.terms.push()}*/\n\nimport log from './log'\nimport { Query } from './query'\n\n/**\n * @SPARQL: SPARQL text that is converted to a query object which is returned.\n * @testMode: testing flag. Prevents loading of sources.\n */\nexport default function SPARQLToQuery (SPARQL, testMode, kb) {\n  // AJAR_ClearTable()\n  var variableHash = []\n  function makeVar (name) {\n    if (variableHash[name]) {\n      return variableHash[name]\n    }\n    var newVar = kb.variable(name)\n    variableHash[name] = newVar\n    return newVar\n  }\n\n  // term type functions\n  function isRealText (term) {\n    return (typeof term === 'string' && term.match(/[^ \\n\\t]/))\n  }\n  function isVar (term) {\n    return (typeof term === 'string' && term.match(/^[\\?\\$]/))\n  }\n  function fixSymbolBrackets (term) {\n    if (typeof term === 'string') {\n      return term.replace(/^&lt;/, '<').replace(/&gt;$/, '>')\n    } else {\n      return term\n    }\n  }\n  function isSymbol (term) {\n    return (typeof term === 'string' && term.match(/^<[^>]*>$/))\n  }\n  function isBnode (term) {\n    return (typeof term === 'string' && (term.match(/^_:/) || term.match(/^$/)))\n  }\n  function isPrefix (term) {\n    return (typeof term === 'string' && term.match(/:$/))\n  }\n  function isPrefixedSymbol (term) {\n    return (typeof term === 'string' && term.match(/^:|^[^_][^:]*:/))\n  }\n  function getPrefix (term) {\n    var a = term.split(':')\n    return a[0]\n  }\n  function getSuffix (term) {\n    var a = term.split(':')\n    return a[1]\n  }\n  function removeBrackets (term) {\n    if (isSymbol(term)) {\n      return term.slice(1, term.length - 1)\n    } else {\n      return term\n    }\n  }\n  // takes a string and returns an array of strings and Literals in the place of literals\n  function parseLiterals (str) {\n    // var sin = (str.indexOf(/[ \\n]\\'/)==-1)?null:str.indexOf(/[ \\n]\\'/), doub = (str.indexOf(/[ \\n]\\\"/)==-1)?null:str.indexOf(/[ \\n]\\\"/)\n    var sin = (str.indexOf(\"'\") === -1)\n      ? null\n      : str.indexOf(\"'\")\n    var doub = (str.indexOf('\"') === -1)\n      ? null\n      : str.indexOf('\"')\n    // alert(\"S: \"+sin+\" D: \"+doub)\n    if (!sin && !doub) {\n      var a = new Array(1)\n      a[0] = str\n      return a\n    }\n    var res = new Array(2)\n    var br\n    var ind\n    if (!sin || (doub && doub < sin)) {\n      br = '\"'\n      ind = doub\n    } else if (!doub || (sin && sin < doub)) {\n      br = \"'\"\n      ind = sin\n    } else {\n      log.error('SQARQL QUERY OOPS!')\n      return res\n    }\n    res[0] = str.slice(0, ind)\n    var end = str.slice(ind + 1).indexOf(br)\n    if (end === -1) {\n      log.error('SPARQL parsing error: no matching parentheses in literal ' + str)\n      return str\n    }\n    // alert(str.slice(end + ind + 2).match(/^\\^\\^/))\n    var end2\n    if (str.slice(end + ind + 2).match(/^\\^\\^/)) {\n      end2 = str.slice(end + ind + 2).indexOf(' ')\n      // alert(end2)\n      res[1] = kb.literal(\n        str.slice(ind + 1, ind + 1 + end),\n        kb.sym(removeBrackets(\n          str.slice(ind + 4 + end, ind + 2 + end + end2))\n        )\n      )\n      // alert(res[1].datatype.uri)\n      res = res.concat(parseLiterals(str.slice(end + ind + 3 + end2)))\n    } else if (str.slice(end + ind + 2).match(/^@/)) {\n      end2 = str.slice(end + ind + 2).indexOf(' ')\n      // alert(end2)\n      res[1] = kb.literal(\n        str.slice(ind + 1, ind + 1 + end),\n        str.slice(ind + 3 + end, ind + 2 + end + end2), null\n      )\n      // alert(res[1].datatype.uri)\n      res = res.concat(\n        parseLiterals(str.slice(end + ind + 2 + end2))\n      )\n    } else {\n      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end))\n      log.info('Literal found: ' + res[1])\n      res = res.concat(parseLiterals(str.slice(end + ind + 2))) // finds any other literals\n    }\n    return res\n  }\n\n  function spaceDelimit (str) {\n    str = str.replace(/\\(/g, ' ( ')\n      .replace(/\\)/g, ' ) ')\n      .replace(/</g, ' <')\n      .replace(/>/g, '> ')\n      .replace(/{/g, ' { ')\n      .replace(/}/g, ' } ')\n      .replace(/[\\t\\n\\r]/g, ' ')\n      .replace(/; /g, ' ; ')\n      .replace(/\\. /g, ' . ')\n      .replace(/, /g, ' , ')\n    log.info('New str into spaceDelimit: \\n' + str)\n    var res = []\n    var br = str.split(' ')\n    for (var x in br) {\n      if (isRealText(br[x])) {\n        res = res.concat(br[x])\n      }\n    }\n    return res\n  }\n\n  function replaceKeywords (input) {\n    var strarr = input\n    for (var x = 0; x < strarr.length; x++) {\n      if (strarr[x] === 'a') {\n        strarr[x] = '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'\n      }\n      if (strarr[x] === 'is' && strarr[x + 2] === 'of') {\n        strarr.splice(x, 1)\n        strarr.splice(x + 1, 1)\n        var s = strarr[x - 1]\n        strarr[x - 1] = strarr[x + 1]\n        strarr[x + 1] = s\n      }\n    }\n    return strarr\n  }\n\n  function toTerms (input) {\n    var res = []\n    for (var x = 0; x < input.length; x++) {\n      if (typeof input[x] !== 'string') {\n        res[x] = input[x]\n        continue\n      }\n      input[x] = fixSymbolBrackets(input[x])\n      if (isVar(input[x])) {\n        res[x] = makeVar(input[x].slice(1))\n      } else if (isBnode(input[x])) {\n        log.info(input[x] + ' was identified as a bnode.')\n        res[x] = kb.bnode()\n      } else if (isSymbol(input[x])) {\n        log.info(input[x] + ' was identified as a symbol.')\n        res[x] = kb.sym(removeBrackets(input[x]))\n      } else if (isPrefixedSymbol(input[x])) {\n        log.info(input[x] + ' was identified as a prefixed symbol')\n        if (prefixes[getPrefix(input[x])]) {\n          res[x] = kb.sym(input[x] = prefixes[getPrefix(input[x])] +\n            getSuffix(input[x]))\n        } else {\n          log.error('SPARQL error: ' + input[x] + ' with prefix ' +\n            getPrefix(input[x]) + ' does not have a correct prefix entry.')\n          res[x] = input[x]\n        }\n      } else {\n        res[x] = input[x]\n      }\n    }\n    return res\n  }\n\n  function tokenize (str) {\n    var token1 = parseLiterals(str)\n    var token2 = []\n    for (var x in token1) {\n      if (typeof token1[x] === 'string') {\n        token2 = token2.concat(spaceDelimit(token1[x]))\n      } else {\n        token2 = token2.concat(token1[x])\n      }\n    }\n    token2 = replaceKeywords(token2)\n    log.info('SPARQL Tokens: ' + token2)\n    return token2\n  }\n\n  // CASE-INSENSITIVE\n  function arrayIndexOf (str, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (typeof arr[i] !== 'string') {\n        continue\n      }\n      if (arr[i].toLowerCase() === str.toLowerCase()) {\n        return i\n      }\n    }\n    // log.warn(\"No instance of \"+str+\" in array \"+arr)\n    return null\n  }\n\n  // CASE-INSENSITIVE\n  function arrayIndicesOf (str, arr) {\n    var ind = []\n    for (var i = 0; i < arr.length; i++) {\n      if (typeof arr[i] !== 'string') {\n        continue\n      }\n      if (arr[i].toLowerCase() === str.toLowerCase()) {\n        ind.push(i)\n      }\n    }\n    return ind\n  }\n\n  function setVars (input, query) {\n    log.info('SPARQL vars: ' + input)\n    for (var x in input) {\n      if (isVar(input[x])) {\n        log.info('Added ' + input[x] + ' to query variables from SPARQL')\n        var v = makeVar(input[x].slice(1))\n        query.vars.push(v)\n        v.label = input[x].slice(1)\n      } else {\n        log.warn('Incorrect SPARQL variable in SELECT: ' + input[x])\n      }\n    }\n  }\n\n  function getPrefixDeclarations (input) {\n    var prefInd = arrayIndicesOf('PREFIX', input)\n    var res = []\n    for (var i in prefInd) {\n      var a = input[prefInd[i] + 1]\n      var b = input[prefInd[i] + 2]\n      if (!isPrefix(a)) {\n        log.error('Invalid SPARQL prefix: ' + a)\n      } else if (!isSymbol(b)) {\n        log.error('Invalid SPARQL symbol: ' + b)\n      } else {\n        log.info('Prefix found: ' + a + ' -> ' + b)\n        var pref = getPrefix(a)\n        var symbol = removeBrackets(b)\n        res[pref] = symbol\n      }\n    }\n    return res\n  }\n\n  function getMatchingBracket (arr, open, close) {\n    log.info('Looking for a close bracket of type ' + close + ' in ' + arr)\n    var index = 0\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] === open) {\n        index++\n      }\n      if (arr[i] === close) {\n        index--\n      }\n      if (index < 0) {\n        return i\n      }\n    }\n    log.error('Statement had no close parenthesis in SPARQL query')\n    return 0\n  }\n\n  function constraintGreaterThan (value) {\n    this.describe = function (varstr) {\n      return varstr + ' > ' + value.toNT()\n    }\n    this.test = function (term) {\n      if (term.value.match(/[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?/)) {\n        return (parseFloat(term.value) > parseFloat(value))\n      } else {\n        return (term.toNT() > value.toNT())\n      }\n    }\n    return this\n  }\n\n  function constraintLessThan (value) { // this is not the recommended usage. Should only work on literal, numeric, dateTime\n    this.describe = function (varstr) {\n      return varstr + ' < ' + value.toNT()\n    }\n    this.test = function (term) {\n      // this.describe = function (varstr) { return varstr + \" < \"+value }\n      if (term.value.match(/[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?/)) {\n        return (parseFloat(term.value) < parseFloat(value))\n      } else {\n        return (term.toNT() < value.toNT())\n      }\n    }\n    return this\n  }\n  // This should only work on literals but doesn't.\n  function ConstraintEqualTo (value) {\n    this.describe = function (varstr) {\n      return varstr + ' = ' + value.toNT()\n    }\n    this.test = function (term) {\n      return value.equals(term)\n    }\n    return this\n  }\n\n  // value must be a literal\n  function ConstraintRegexp (value) {\n    this.describe = function (varstr) {\n      return \"REGEXP( '\" + value + \"' , \" + varstr + ' )'\n    }\n    this.test = function (term) {\n      var str = value\n      // str = str.replace(/^//,\"\").replace(//$/,\"\")\n      var rg = new RegExp(str)\n      if (term.value) {\n        return rg.test(term.value)\n      } else {\n        return false\n      }\n    }\n  }\n\n  function setConstraint (input, pat) {\n    if (input.length === 3 && input[0].termType === 'Variable' &&\n      (input[2].termType === 'NamedNode' || input[2].termType === 'Literal')) {\n      if (input[1] === '=') {\n        log.debug('Constraint added: ' + input)\n        pat.constraints[input[0]] = new ConstraintEqualTo(input[2])\n      } else if (input[1] === '>') {\n        log.debug('Constraint added: ' + input)\n        pat.constraints[input[0]] = new ConstraintEqualTo(input[2])\n      } else if (input[1] === '<') {\n        log.debug('Constraint added: ' + input)\n        pat.constraints[input[0]] = new ConstraintEqualTo(input[2])\n      } else {\n        log.warn(\"I don't know how to handle the constraint: \" + input)\n      }\n    } else if (input.length === 6 && typeof input[0] === 'string' &&\n      input[0].toLowerCase() === 'regexp' &&\n      input[1] === '(' && input[5] === ')' && input[3] === ',' &&\n      input[4].termType === 'Variable' && input[2].termType === 'Literal') {\n      log.debug('Constraint added: ' + input)\n      pat.constraints[input[4]] = new ConstraintRegexp(input[2].value)\n    }\n  // log.warn(\"I don't know how to handle the constraint: \"+input)\n  // alert(\"length: \"+input.length+\" input 0 type: \"+input[0].termType+\" input 1: \"+input[1]+\" input[2] type: \"+input[2].termType)\n  }\n\n  function setOptional (terms, pat) {\n    log.debug('Optional query: ' + terms + ' not yet implemented.')\n    var opt = kb.formula()\n    setWhere(terms, opt)\n    pat.optional.push(opt)\n  }\n\n  function setWhere (input, pat) {\n    var terms = toTerms(input)\n    var end\n    log.debug('WHERE: ' + terms)\n    var opt\n    // var opt = arrayIndicesOf(\"OPTIONAL\",terms)\n    while (arrayIndexOf('OPTIONAL', terms)) {\n      opt = arrayIndexOf('OPTIONAL', terms)\n      log.debug('OPT: ' + opt + ' ' + terms[opt] + ' in ' + terms)\n      if (terms[opt + 1] !== '{') {\n        log.warn('Bad optional opening bracket in word ' + opt)\n      }\n      end = getMatchingBracket(terms.slice(opt + 2), '{', '}')\n      if (end === -1) {\n        log.error('No matching bracket in word ' + opt)\n      } else {\n        setOptional(terms.slice(opt + 2, opt + 2 + end), pat)\n        // alert(pat.statements[0].toNT())\n        opt = arrayIndexOf('OPTIONAL', terms)\n        end = getMatchingBracket(terms.slice(opt + 2), '{', '}')\n        terms.splice(opt, end + 3)\n      }\n    }\n    log.debug('WHERE after optionals: ' + terms)\n    while (arrayIndexOf('FILTER', terms)) {\n      var filt = arrayIndexOf('FILTER', terms)\n      if (terms[filt + 1] !== '(') {\n        log.warn('Bad filter opening bracket in word ' + filt)\n      }\n      end = getMatchingBracket(terms.slice(filt + 2), '(', ')')\n      if (end === -1) {\n        log.error('No matching bracket in word ' + filt)\n      } else {\n        setConstraint(terms.slice(filt + 2, filt + 2 + end), pat)\n        filt = arrayIndexOf('FILTER', terms)\n        end = getMatchingBracket(terms.slice(filt + 2), '(', ')')\n        terms.splice(filt, end + 3)\n      }\n    }\n    log.debug('WHERE after filters and optionals: ' + terms)\n    extractStatements(terms, pat)\n  }\n\n  function extractStatements (terms, formula) {\n    var arrayZero = new Array(1)\n    arrayZero[0] = -1 // this is just to add the beginning of the where to the periods index.\n    var per = arrayZero.concat(arrayIndicesOf('.', terms))\n    var stat = []\n    for (var x = 0; x < per.length - 1; x++) {\n      stat[x] = terms.slice(per[x] + 1, per[x + 1])\n    }\n    // Now it's in an array of statements\n    for (x in stat) { // THIS MUST BE CHANGED FOR COMMA, SEMICOLON\n      log.info('s+p+o ' + x + ' = ' + stat[x])\n      var subj = stat[x][0]\n      stat[x].splice(0, 1)\n      var sem = arrayZero.concat(arrayIndicesOf(';', stat[x]))\n      sem.push(stat[x].length)\n      var stat2 = []\n      for (var y = 0; y < sem.length - 1; y++) {\n        stat2[y] = stat[x].slice(sem[y] + 1, sem[y + 1])\n      }\n      for (x in stat2) {\n        log.info('p+o ' + x + ' = ' + stat[x])\n        var pred = stat2[x][0]\n        stat2[x].splice(0, 1)\n        var com = arrayZero.concat(arrayIndicesOf(',', stat2[x]))\n        com.push(stat2[x].length)\n        var stat3 = []\n        for (y = 0; y < com.length - 1; y++) {\n          stat3[y] = stat2[x].slice(com[y] + 1, com[y + 1])\n        }\n        for (x in stat3) {\n          var obj = stat3[x][0]\n          log.info('Subj=' + subj + ' Pred=' + pred + ' Obj=' + obj)\n          formula.add(subj, pred, obj)\n        }\n      }\n    }\n  }\n\n  // ******************************* Body of SPARQLToQuery ***************************//\n  log.info('SPARQL input: \\n' + SPARQL)\n  var q = new Query()\n  var sp = tokenize(SPARQL) // first tokenize everything\n  var prefixes = getPrefixDeclarations(sp)\n  if (!prefixes.rdf) {\n    prefixes.rdf = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'\n  }\n  if (!prefixes.rdfs) {\n    prefixes.rdfs = 'http://www.w3.org/2000/01/rdf-schema#'\n  }\n  var selectLoc = arrayIndexOf('SELECT', sp)\n  var whereLoc = arrayIndexOf('WHERE', sp)\n  if (selectLoc < 0 || whereLoc < 0 || selectLoc > whereLoc) {\n    log.error('Invalid or nonexistent SELECT and WHERE tags in SPARQL query')\n    return false\n  }\n  setVars(sp.slice(selectLoc + 1, whereLoc), q)\n\n  setWhere(sp.slice(whereLoc + 2, sp.length - 1), q.pat)\n\n  if (testMode) {\n    return q\n  }\n\n  for (var x in q.pat.statements) {\n    var st = q.pat.statements[x]\n    if (st.subject.termType === 'NamedNode') {\n      if (kb.fetcher) {\n        kb.fetcher.lookUpThing(st.subject, 'sparql:' + st.subject)\n      }\n    }\n    if (st.object.termType === 'NamedNode') {\n      if (kb.fetcher) {\n        kb.fetcher.lookUpThing(st.object, 'sparql:' + st.object)\n      }\n    }\n  }\n  // alert(q.pat)\n  return q\n// checkVars()\n// *******************************************************************//\n}\n","/* @file Update Manager Class\n**\n** 2007-07-15 originall sparl update module by Joe Presbrey <presbrey@mit.edu>\n** 2010-08-08 TimBL folded in Kenny's WEBDAV\n** 2010-12-07 TimBL addred local file write code\n*/\nimport IndexedFormula from './store'\nimport { docpart } from './uri'\nimport Fetcher from './fetcher'\nimport Namespace from './namespace'\nimport Serializer from './serializer'\nimport { join as uriJoin } from './uri'\nimport { isStore, isBlankNode } from './utils/terms'\nimport * as Util from './utils-js'\nimport Statement from './statement'\nimport RDFlibNamedNode from './named-node'\nimport { termValue } from './utils/termValue'\nimport {\n  BlankNode,\n  NamedNode,\n  Quad_Graph,\n  Quad_Object,\n  Quad_Predicate,\n  Quad_Subject,\n  Quad,\n  Term,\n} from './tf-types'\n\ninterface UpdateManagerFormula extends IndexedFormula {\n  fetcher: Fetcher\n}\n\ntype CallBackFunction = (uri: string, ok: boolean, message: string, response: Error | Response) => {} | void\n\n/**\n* The UpdateManager is a helper object for a store.\n* Just as a Fetcher provides the store with the ability to read and write,\n* the Update Manager provides functionality for making small patches in real time,\n* and also looking out for concurrent updates from other agents\n*/\nexport default class UpdateManager {\n\n  store: UpdateManagerFormula\n\n  ifps: {}\n\n  fps: {}\n\n  /** Index of objects for coordinating incoming and outgoing patches */\n  patchControl: []\n\n  /** Object of namespaces */\n  ns: any\n\n  /**\n   * @param  store - The quadstore to store data and metadata. Created if not passed.\n  */\n  constructor (store?: IndexedFormula) {\n    store = store || new IndexedFormula()\n    if (store.updater) {\n      throw new Error(\"You can't have two UpdateManagers for the same store\")\n    }\n    if (!(store as UpdateManagerFormula).fetcher) {\n      (store as UpdateManagerFormula).fetcher = new Fetcher(store)\n    }\n    this.store = store as UpdateManagerFormula\n    store.updater = this\n    this.ifps = {}\n    this.fps = {}\n    this.ns = {}\n    this.ns.link = Namespace('http://www.w3.org/2007/ont/link#')\n    this.ns.http = Namespace('http://www.w3.org/2007/ont/http#')\n    this.ns.httph = Namespace('http://www.w3.org/2007/ont/httph#')\n    this.ns.ldp = Namespace('http://www.w3.org/ns/ldp#')\n    this.ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#')\n    this.ns.rdfs = Namespace('http://www.w3.org/2000/01/rdf-schema#')\n    this.ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#')\n    this.ns.owl = Namespace('http://www.w3.org/2002/07/owl#')\n\n    this.patchControl = []\n  }\n\n  patchControlFor (doc: NamedNode) {\n    if (!this.patchControl[doc.value]) {\n      this.patchControl[doc.value] = []\n    }\n    return this.patchControl[doc.value]\n  }\n\n  isHttpUri(uri:string){\n    return( uri.slice(0,4) === 'http' )\n  }\n\n\n  /**\n   * Tests whether a file is editable.\n   * If the file has a specific annotation that it is machine written,\n   * for safety, it is editable (this doesn't actually check for write access)\n   * If the file has wac-allow and accept patch headers, those are respected.\n   * and local write access is determined by those headers.\n   * This version only looks at past HTTP requests, does not make new ones.\n   *\n   * @returns The method string SPARQL or DAV or\n   *   LOCALFILE or false if known, undefined if not known.\n   */\n  editable (uri: string | NamedNode, kb?: IndexedFormula): string | boolean | undefined {\n    if (!uri) {\n      return false // Eg subject is bnode, no known doc to write to\n    }\n    if (!kb) {\n      kb = this.store\n    }\n    uri = termValue(uri)\n\n    if ( !this.isHttpUri(uri as string) ) {\n      if (kb.holds(\n          this.store.rdfFactory.namedNode(uri),\n          this.store.rdfFactory.namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n          this.store.rdfFactory.namedNode('http://www.w3.org/2007/ont/link#MachineEditableDocument'))) {\n        return 'LOCALFILE'\n      }\n    }\n\n    var request\n    var definitive = false\n     // @ts-ignore passes a string to kb.each, which expects a term. Should this work?\n    var requests = kb.each(undefined, this.ns.link('requestedURI'), docpart(uri))\n    var method: string\n    for (var r = 0; r < requests.length; r++) {\n      request = requests[r]\n      if (request !== undefined) {\n        var response = kb.any(request, this.ns.link('response')) as Quad_Subject\n        if (request !== undefined) {\n          var wacAllow = kb.anyValue(response, this.ns.httph('wac-allow'))\n          if (wacAllow) {\n            for (var bit of wacAllow.split(',')) {\n              var lr = bit.split('=')\n              if (lr[0].includes('user') && !lr[1].includes('write') && !lr[1].includes('append') ) {\n                // console.log('    editable? excluded by WAC-Allow: ', wacAllow)\n                return false\n              }\n            }\n          }\n          var acceptPatch = kb.each(response, this.ns.httph('accept-patch'))\n          if (acceptPatch.length) {\n            for (let i = 0; i < acceptPatch.length; i++) {\n              method = acceptPatch[i].value.trim()\n              if (method.indexOf('application/sparql-update') >= 0) return 'SPARQL'\n              if (method.indexOf('application/sparql-update-single-match') >= 0) return 'SPARQL'\n            }\n          }\n          var authorVia = kb.each(response, this.ns.httph('ms-author-via'))\n          if (authorVia.length) {\n            for (let i = 0; i < authorVia.length; i++) {\n              method = authorVia[i].value.trim()\n              if (method.indexOf('SPARQL') >= 0) {\n                return 'SPARQL'\n              }\n              if (method.indexOf('DAV') >= 0) {\n                return 'DAV'\n              }\n            }\n          }\n\n          if ( !this.isHttpUri(uri as string) ) {\n            if( !wacAllow ) return false;\n            else return 'LOCALFILE';\n          }\n\n          var status = kb.each(response, this.ns.http('status'))\n          if (status.length) {\n            for (let i = 0; i < status.length; i++) {\n              // @ts-ignore since statuses should be TFTerms, this should always be false\n              if (status[i] === 200 || status[i] === 404) {\n                definitive = true\n                // return false // A definitive answer\n              }\n            }\n          }\n        } else {\n          // console.log('UpdateManager.editable: No response for ' + uri + '\\n')\n        }\n      }\n    }\n    if (requests.length === 0) {\n      // console.log('UpdateManager.editable: No request for ' + uri + '\\n')\n    } else {\n      if (definitive) {\n        return false // We have got a request and it did NOT say editable => not editable\n      }\n    }\n    // console.log('UpdateManager.editable: inconclusive for ' + uri + '\\n')\n    return undefined // We don't know (yet) as we haven't had a response (yet)\n  }\n\n  anonymize (obj) {\n    return (obj.toNT().substr(0, 2) === '_:' && this.mentioned(obj))\n      ? '?' + obj.toNT().substr(2)\n      : obj.toNT()\n  }\n\n  anonymizeNT (stmt: Quad) {\n    return this.anonymize(stmt.subject) + ' ' +\n      this.anonymize(stmt.predicate) + ' ' +\n      this.anonymize(stmt.object) + ' .'\n  }\n\n  /**\n   * Returns a list of all bnodes occurring in a statement\n   * @private\n   */\n  statementBnodes (st: Quad): BlankNode[] {\n    return [st.subject, st.predicate, st.object].filter(function (x) {\n      return isBlankNode(x)\n    }) as BlankNode[]\n  }\n\n  /**\n   * Returns a list of all bnodes occurring in a list of statements\n   * @private\n   */\n  statementArrayBnodes (sts: Quad[]) {\n    var bnodes: BlankNode[] = []\n    for (let i = 0; i < sts.length; i++) {\n      bnodes = bnodes.concat(this.statementBnodes(sts[i]))\n    }\n    bnodes.sort() // in place sort - result may have duplicates\n    var bnodes2: BlankNode[] = []\n    for (let j = 0; j < bnodes.length; j++) {\n      if (j === 0 || !bnodes[j].equals(bnodes[j - 1])) {\n        bnodes2.push(bnodes[j])\n      }\n    }\n    return bnodes2\n  }\n\n  /**\n   * Makes a cached list of [Inverse-]Functional properties\n   * @private\n   */\n  cacheIfps () {\n    this.ifps = {}\n    var a = this.store.each(undefined, this.ns.rdf('type'),\n      this.ns.owl('InverseFunctionalProperty'))\n    for (let i = 0; i < a.length; i++) {\n      this.ifps[a[i].value] = true\n    }\n    this.fps = {}\n    a = this.store.each(undefined, this.ns.rdf('type'), this.ns.owl('FunctionalProperty'))\n    for (let i = 0; i < a.length; i++) {\n      this.fps[a[i].value] = true\n    }\n  }\n\n  /**\n   * Returns a context to bind a given node, up to a given depth\n   * @private\n   */\n  bnodeContext2 (x, source, depth) {\n    // Return a list of statements which indirectly identify a node\n    //  Depth > 1 if try further indirection.\n    //  Return array of statements (possibly empty), or null if failure\n    var sts = this.store.statementsMatching(undefined, undefined, x, source) // incoming links\n    var y\n    var res\n    for (let i = 0; i < sts.length; i++) {\n      if (this.fps[sts[i].predicate.value]) {\n        y = sts[i].subject\n        if (!y.isBlank) {\n          return [ sts[i] ]\n        }\n        if (depth) {\n          res = this.bnodeContext2(y, source, depth - 1)\n          if (res) {\n            return res.concat([ sts[i] ])\n          }\n        }\n      }\n    }\n    // outgoing links\n    sts = this.store.statementsMatching(x, undefined, undefined, source)\n    for (let i = 0; i < sts.length; i++) {\n      if (this.ifps[sts[i].predicate.value]) {\n        y = sts[i].object\n        if (!y.isBlank) {\n          return [ sts[i] ]\n        }\n        if (depth) {\n          res = this.bnodeContext2(y, source, depth - 1)\n          if (res) {\n            return res.concat([ sts[i] ])\n          }\n        }\n      }\n    }\n    return null // Failure\n  }\n\n  /**\n   * Returns the smallest context to bind a given single bnode\n   * @private\n   */\n  bnodeContext1 (x, source) {\n    // Return a list of statements which indirectly identify a node\n    //   Breadth-first\n    for (var depth = 0; depth < 3; depth++) { // Try simple first\n      var con = this.bnodeContext2(x, source, depth)\n      if (con !== null) return con\n    }\n    // If we can't guarantee unique with logic just send all info about node\n    return this.store.connectedStatements(x, source) // was:\n    // throw new Error('Unable to uniquely identify bnode: ' + x.toNT())\n  }\n\n  /**\n   * @private\n   */\n  mentioned (x) {\n    return this.store.statementsMatching(x, null, null, null).length !== 0 || // Don't pin fresh bnodes\n      this.store.statementsMatching(null, x).length !== 0 ||\n      this.store.statementsMatching(null, null, x).length !== 0\n  }\n\n  /**\n   * @private\n   */\n  bnodeContext (bnodes, doc) {\n    var context = []\n    if (bnodes.length) {\n      this.cacheIfps()\n      for (let i = 0; i < bnodes.length; i++) { // Does this occur in old graph?\n        var bnode = bnodes[i]\n        if (!this.mentioned(bnode)) continue\n        context = context.concat(this.bnodeContext1(bnode, doc))\n      }\n    }\n    return context\n  }\n\n  /**\n   * Returns the best context for a single statement\n   * @private\n   */\n  statementContext (st: Quad) {\n    var bnodes = this.statementBnodes(st)\n    return this.bnodeContext(bnodes, st.graph)\n  }\n\n  /**\n   * @private\n   */\n  contextWhere (context) {\n    var updater = this\n    return (!context || context.length === 0)\n      ? ''\n      : 'WHERE { ' +\n      context.map(function (x) {\n        return updater.anonymizeNT(x)\n      }).join('\\n') + ' }\\n'\n  }\n\n  /**\n   * @private\n   */\n  fire (\n    uri: string,\n    query: string,\n    callbackFunction: CallBackFunction\n  ): Promise<void> {\n    return Promise.resolve()\n      .then(() => {\n        if (!uri) {\n          throw new Error('No URI given for remote editing operation: ' + query)\n        }\n        // console.log('UpdateManager: sending update to <' + uri + '>')\n\n        let options = {\n          noMeta: true,\n          contentType: 'application/sparql-update',\n          body: query\n        }\n\n        return this.store.fetcher.webOperation('PATCH', uri, options)\n      })\n      .then(response => {\n        if (!response.ok) {\n          let message = 'UpdateManager: update failed for <' + uri + '> status=' +\n            response.status + ', ' + response.statusText +\n            '\\n   for query: ' + query\n          // console.log(message)\n          throw new Error(message)\n        }\n\n        // console.log('UpdateManager: update Ok for <' + uri + '>')\n\n        callbackFunction(uri, response.ok, response.responseText as string, response)\n      })\n      .catch(err => {\n        callbackFunction(uri, false, err.message, err)\n      })\n  }\n\n// ARE THESE THEE FUNCTIONS USED? DEPROCATE?\n\n  /** return a statemnet updating function\n   *\n   * This does NOT update the statement.\n   * It returns an object which includes\n   *  function which can be used to change the object of the statement.\n   */\n  update_statement (statement: Quad) {\n    if (statement && !statement.graph) {\n      return\n    }\n    var updater = this\n    var context = this.statementContext(statement)\n\n    return {\n      statement: statement ? [statement.subject, statement.predicate, statement.object, statement.graph] : undefined,\n      statementNT: statement ? this.anonymizeNT(statement) : undefined,\n      where: updater.contextWhere(context),\n\n      set_object: function (obj, callbackFunction) {\n        var query = this.where\n        query += 'DELETE DATA { ' + this.statementNT + ' } ;\\n'\n        query += 'INSERT DATA { ' +\n          // @ts-ignore `this` might refer to the wrong scope. Does this work?\n          this.anonymize(this.statement[0]) + ' ' +\n          // @ts-ignore\n          this.anonymize(this.statement[1]) + ' ' +\n          // @ts-ignore\n          this.anonymize(obj) + ' ' + ' . }\\n'\n\n        updater.fire((this.statement as [Quad_Subject, Quad_Predicate, Quad_Object, Quad_Graph])[3].value, query, callbackFunction)\n      }\n    }\n  }\n\n  insert_statement (st: Quad, callbackFunction: CallBackFunction): void {\n    var st0 = st instanceof Array ? st[0] : st\n    var query = this.contextWhere(this.statementContext(st0))\n\n    if (st instanceof Array) {\n      var stText = ''\n      for (let i = 0; i < st.length; i++) stText += st[i] + '\\n'\n      query += 'INSERT DATA { ' + stText + ' }\\n'\n    } else {\n      query += 'INSERT DATA { ' +\n        this.anonymize(st.subject) + ' ' +\n        this.anonymize(st.predicate) + ' ' +\n        this.anonymize(st.object) + ' ' + ' . }\\n'\n    }\n\n    this.fire(st0.graph.value, query, callbackFunction)\n  }\n\n  delete_statement (st: Quad | Quad[], callbackFunction: CallBackFunction): void {\n    var st0 = st instanceof Array ? st[0] : st\n    var query = this.contextWhere(this.statementContext(st0))\n\n    if (st instanceof Array) {\n      var stText = ''\n      for (let i = 0; i < st.length; i++) stText += st[i] + '\\n'\n      query += 'DELETE DATA { ' + stText + ' }\\n'\n    } else {\n      query += 'DELETE DATA { ' +\n        this.anonymize(st.subject) + ' ' +\n        this.anonymize(st.predicate) + ' ' +\n        this.anonymize(st.object) + ' ' + ' . }\\n'\n    }\n\n    this.fire(st0.graph.value, query, callbackFunction)\n  }\n\n/// //////////////////////\n\n  /**\n   * Requests a now or future action to refresh changes coming downstream\n   * This is designed to allow the system to re-request the server version,\n   * when a websocket has pinged to say there are changes.\n   * If the websocket, by contrast, has sent a patch, then this may not be necessary.\n   *\n   * @param doc\n   * @param action\n   */\n  requestDownstreamAction (doc: NamedNode, action): void {\n    var control = this.patchControlFor(doc)\n    if (!control.pendingUpstream) {\n      action(doc)\n    } else {\n      if (control.downstreamAction) {\n        if ('' + control.downstreamAction !== '' + action) {  // Kludge compare\n          throw new Error(\"Can't wait for > 1 different downstream actions\")\n        }\n      } else {\n        control.downstreamAction = action\n      }\n    }\n  }\n\n  /**\n   * We want to start counting websocket notifications\n   * to distinguish the ones from others from our own.\n   */\n  clearUpstreamCount (doc: NamedNode): void {\n    var control = this.patchControlFor(doc)\n    control.upstreamCount = 0\n  }\n\n  getUpdatesVia (doc: NamedNode): string | null {\n    var linkHeaders = this.store.fetcher.getHeader(doc, 'updates-via')\n    if (!linkHeaders || !linkHeaders.length) return null\n    return linkHeaders[0].trim()\n  }\n\n  addDownstreamChangeListener (doc: NamedNode, listener): void {\n    var control = this.patchControlFor(doc)\n    if (!control.downstreamChangeListeners) { control.downstreamChangeListeners = [] }\n    control.downstreamChangeListeners.push(listener)\n    this.setRefreshHandler(doc, (doc: NamedNode) => {\n      this.reloadAndSync(doc)\n    })\n  }\n\n  reloadAndSync (doc: NamedNode): void {\n    var control = this.patchControlFor(doc)\n    var updater = this\n\n    if (control.reloading) {\n      // console.log('   Already reloading - note this load may be out of date')\n      control.outOfDate = true\n      return // once only needed @@ Not true, has changed again\n    }\n    control.reloading = true\n    var retryTimeout = 1000 // ms\n    var tryReload = function () {\n      // console.log('try reload - timeout = ' + retryTimeout)\n      updater.reload(updater.store, doc, function (ok, message, response) {\n        if (ok) {\n          if (control.downstreamChangeListeners) {\n            for (let i = 0; i < control.downstreamChangeListeners.length; i++) {\n              // console.log('        Calling downstream listener ' + i)\n              control.downstreamChangeListeners[i]()\n            }\n          }\n          control.reloading = false\n          if (control.outOfDate){\n            // console.log('   Extra reload because of extra update.')\n            control.outOfDate = false\n            tryReload()\n          }\n        } else {\n          control.reloading = false\n          if ((response as Response).status === 0) {\n            // console.log('Network error refreshing the data. Retrying in ' +\n            // retryTimeout / 1000)\n            control.reloading = true\n            retryTimeout = retryTimeout * 2\n            setTimeout(tryReload, retryTimeout)\n          } else {\n            // console.log('Error ' + (response as Response).status + 'refreshing the data:' +\n            //  message + '. Stopped' + doc)\n          }\n        }\n      })\n    }\n    tryReload()\n  }\n\n  /**\n   * Sets up websocket to listen on\n   *\n   * There is coordination between upstream changes and downstream ones\n   * so that a reload is not done in the middle of an upstream patch.\n   * If you use this API then you get called when a change happens, and you\n   * have to reload the file yourself, and then refresh the UI.\n   * Alternative is addDownstreamChangeListener(), where you do not\n   * have to do the reload yourself. Do mot mix them.\n   *\n   * kb contains the HTTP  metadata from previous operations\n   *\n   * @param doc\n   * @param handler\n   *\n   * @returns {boolean}\n   */\n  setRefreshHandler (doc: NamedNode, handler): boolean {\n    let wssURI = this.getUpdatesVia(doc) // relative\n    // var kb = this.store\n    var theHandler = handler\n    var self = this\n    var updater = this\n    var retryTimeout = 1500 // *2 will be 3 Seconds, 6, 12, etc\n    var retries = 0\n\n    if (!wssURI) {\n      // console.log('Server does not support live updates through Updates-Via :-(')\n      return false\n    }\n\n    wssURI = uriJoin(wssURI, doc.value)\n    const validWssURI = wssURI.replace(/^http:/, 'ws:').replace(/^https:/, 'wss:')\n    // console.log('Web socket URI ' + wssURI)\n\n    var openWebsocket = function () {\n      // From https://github.com/solid/solid-spec#live-updates\n      var socket\n      if (typeof WebSocket !== 'undefined') {\n        socket = new WebSocket(validWssURI)\n      } else if (typeof window !== 'undefined' && window.WebSocket) {\n        socket = (window as any).WebSocket(validWssURI)\n      } else {\n        // console.log('Live update disabled, as WebSocket not supported by platform :-(')\n        return\n      }\n      socket.onopen = function () {\n        // console.log('    websocket open')\n        retryTimeout = 1500 // reset timeout to fast on success\n        this.send('sub ' + doc.value)\n        if (retries) {\n          // console.log('Web socket has been down, better check for any news.')\n          updater.requestDownstreamAction(doc, theHandler)\n        }\n      }\n      var control = self.patchControlFor(doc)\n      control.upstreamCount = 0\n\n      socket.onerror = function onerror (err: Error) {\n        // console.log('Error on Websocket:', err)\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n      //\n      // 1000  CLOSE_NORMAL  Normal closure; the connection successfully completed whatever purpose for which it was created.\n      // 1001  CLOSE_GOING_AWAY  The endpoint is going away, either\n      //                                  because of a server failure or because the browser is navigating away from the page that opened the connection.\n      // 1002  CLOSE_PROTOCOL_ERROR  The endpoint is terminating the connection due to a protocol error.\n      // 1003  CLOSE_UNSUPPORTED  The connection is being terminated because the endpoint\n      //                                  received data of a type it cannot accept (for example, a text-only endpoint received binary data).\n      // 1004                             Reserved. A meaning might be defined in the future.\n      // 1005  CLOSE_NO_STATUS  Reserved.  Indicates that no status code was provided even though one was expected.\n      // 1006  CLOSE_ABNORMAL  Reserved. Used to indicate that a connection was closed abnormally (\n      //\n      //\n      socket.onclose = function (event: CloseEvent) {\n        // console.log('*** Websocket closed with code ' + event.code +\n        //   \", reason '\" + event.reason + \"' clean = \" + event.wasClean)\n        retryTimeout *= 2\n        retries += 1\n        // console.log('Retrying in ' + retryTimeout + 'ms') // (ask user?)\n        setTimeout(function () {\n          // console.log('Trying websocket again')\n          openWebsocket()\n        }, retryTimeout)\n      }\n      socket.onmessage = function (msg: MessageEvent) {\n        if (msg.data && msg.data.slice(0, 3) === 'pub') {\n          if ('upstreamCount' in control) {\n            control.upstreamCount -= 1\n            if (control.upstreamCount >= 0) {\n              // console.log('just an echo: ' + control.upstreamCount)\n              return // Just an echo\n            }\n          }\n          // console.log('Assume a real downstream change: ' + control.upstreamCount + ' -> 0')\n          control.upstreamCount = 0\n          self.requestDownstreamAction(doc, theHandler)\n        }\n      }\n    } // openWebsocket\n    openWebsocket()\n\n    return true\n  }\n\n  /**\n   * This high-level function updates the local store iff the web is changed successfully.\n   * Deletions, insertions may be undefined or single statements or lists or formulae (may contain bnodes which can be indirectly identified by a where clause).\n   * The `why` property of each statement must be the give the web document to be updated.\n   * The statements to be deleted and inserted may span more than one web document.\n   * @param deletions - Statement or statements to be deleted.\n   * @param insertions - Statement or statements to be inserted.\n   * @returns a promise\n   */\n  updateMany(\n    deletions: ReadonlyArray<Statement>,\n    insertions: ReadonlyArray<Statement> = []\n  ): Promise<void[]> {\n    const docs = deletions.concat(insertions).map(st => st.why)\n    const thisUpdater = this\n    const uniqueDocs: Array<NamedNode> = []\n    docs.forEach(doc => {\n        if (!uniqueDocs.find(uniqueDoc => uniqueDoc.equals(doc))) uniqueDocs.push(doc as NamedNode)\n     })\n    const updates = uniqueDocs.map(doc =>\n      thisUpdater.update(deletions.filter(st => st.why.equals(doc)),\n        insertions.filter(st => st.why.equals(doc))))\n    if (updates.length > 1) {\n      console.log(`@@ updateMany to ${updates.length}: ${uniqueDocs}`)\n    }\n    return Promise.all(updates)\n  }\n\n  /**\n   * This high-level function updates the local store iff the web is changed successfully.\n   * Deletions, insertions may be undefined or single statements or lists or formulae (may contain bnodes which can be indirectly identified by a where clause).\n   * The `why` property of each statement must be the same and give the web document to be updated.\n   * @param deletions - Statement or statements to be deleted.\n   * @param insertions - Statement or statements to be inserted.\n   * @param callback - called as callbackFunction(uri, success, errorbody)\n   *           OR returns a promise\n   */\n  update(\n      deletions: ReadonlyArray<Statement>,\n      insertions: ReadonlyArray<Statement>,\n      callback?: (\n        uri: string | undefined | null,\n        success: boolean,\n        errorBody?: string,\n        response?: Response | Error\n      ) => void,\n      secondTry?: boolean\n  ): void | Promise<void> {\n    if (!callback) {\n      var thisUpdater = this\n      return new Promise(function (resolve, reject) { // Promise version\n        thisUpdater.update(deletions, insertions, function (uri, ok, errorBody) {\n          if (!ok) {\n            reject(new Error(errorBody))\n          } else {\n            resolve()\n          }\n        }) // callbackFunction\n      }) // promise\n    } // if\n\n    try {\n      var kb = this.store\n      var ds = !deletions ? []\n        : isStore(deletions) ? deletions.statements\n          : deletions instanceof Array ? deletions : [ deletions ]\n      var is = !insertions ? []\n        : isStore(insertions) ? insertions.statements\n          : insertions instanceof Array ? insertions : [ insertions ]\n      if (!(ds instanceof Array)) {\n        throw new Error('Type Error ' + (typeof ds) + ': ' + ds)\n      }\n      if (!(is instanceof Array)) {\n        throw new Error('Type Error ' + (typeof is) + ': ' + is)\n      }\n      if (ds.length === 0 && is.length === 0) {\n        return callback(null, true) // success -- nothing needed to be done.\n      }\n      var doc = ds.length ? ds[0].graph : is[0].graph\n      if (!doc) {\n        let message = 'Error patching: statement does not specify which document to patch:' + ds[0] + ', ' + is[0]\n        // console.log(message)\n        throw new Error(message)\n      }\n      var control = this.patchControlFor(doc)\n      var startTime = Date.now()\n\n      var props = ['subject', 'predicate', 'object', 'why']\n      var verbs = ['insert', 'delete']\n      var clauses = { 'delete': ds, 'insert': is }\n      verbs.map(function (verb) {\n        clauses[verb].map(function (st: Quad) {\n          if (!doc.equals(st.graph)) {\n            throw new Error('update: destination ' + doc +\n              ' inconsistent with delete quad ' + st.graph)\n          }\n          props.map(function (prop) {\n            if (typeof st[prop] === 'undefined') {\n              throw new Error('update: undefined ' + prop + ' of statement.')\n            }\n          })\n        })\n      })\n\n      var protocol = this.editable(doc.value, kb)\n      if (protocol === false) {\n        throw new Error('Update: Can\\'t make changes in uneditable ' + doc)\n      }\n      if (protocol === undefined) { // Not enough metadata\n        if (secondTry) {\n          throw new Error('Update: Loaded ' + doc + \"but stil can't figure out what editing protcol it supports.\")\n        }\n        // console.log(`Update: have not loaded ${doc} before: loading now...`);\n        (this.store.fetcher.load(doc) as Promise<Response>).then(response => {\n          this.update(deletions, insertions, callback, true)\n        }, err => {\n            if (err.response.status === 404) { // nonexistent files are fine\n              this.update(deletions, insertions, callback, true)\n            } else  {\n              throw new Error(`Update: Can't get updatability status ${doc} before patching: ${err}`)\n            }\n        })\n        return\n      } else if ((protocol as string).indexOf('SPARQL') >= 0) {\n        var bnodes: BlankNode[] = []\n        if (ds.length) bnodes = this.statementArrayBnodes(ds)\n        if (is.length) bnodes = bnodes.concat(this.statementArrayBnodes(is))\n        var context = this.bnodeContext(bnodes, doc)\n        var whereClause = this.contextWhere(context)\n        var query = ''\n        if (whereClause.length) { // Is there a WHERE clause?\n          if (ds.length) {\n            query += 'DELETE { '\n            for (let i = 0; i < ds.length; i++) {\n              query += this.anonymizeNT(ds[i]) + '\\n'\n            }\n            query += ' }\\n'\n          }\n          if (is.length) {\n            query += 'INSERT { '\n            for (let i = 0; i < is.length; i++) {\n              query += this.anonymizeNT(is[i]) + '\\n'\n            }\n            query += ' }\\n'\n          }\n          query += whereClause\n        } else { // no where clause\n          if (ds.length) {\n            query += 'DELETE DATA { '\n            for (let i = 0; i < ds.length; i++) {\n              query += this.anonymizeNT(ds[i]) + '\\n'\n            }\n            query += ' } \\n'\n          }\n          if (is.length) {\n            if (ds.length) query += ' ; '\n            query += 'INSERT DATA { '\n            for (let i = 0; i < is.length; i++) {\n              query += this.anonymizeNT(is[i]) + '\\n'\n            }\n            query += ' }\\n'\n          }\n        }\n        // Track pending upstream patches until they have finished their callbackFunction\n        control.pendingUpstream = control.pendingUpstream ? control.pendingUpstream + 1 : 1\n        if ('upstreamCount' in control) {\n          control.upstreamCount += 1 // count changes we originated ourselves\n          // console.log('upstream count up to : ' + control.upstreamCount)\n        }\n\n        this.fire(doc.value, query, (uri, success, body, response) => {\n          (response as any).elapsedTimeMs = Date.now() - startTime\n          console.log('    UpdateManager: Return ' +\n            (success ? 'success ' : 'FAILURE ') + (response as Response).status +\n            ' elapsed ' + (response as any).elapsedTimeMs + 'ms')\n          if (success) {\n            try {\n              kb.remove(ds)\n            } catch (e) {\n              success = false\n              body = 'Remote Ok BUT error deleting ' + ds.length + ' from store!!! ' + e\n            } // Add in any case -- help recover from weirdness??\n            for (let i = 0; i < is.length; i++) {\n              kb.add(is[i].subject, is[i].predicate, is[i].object, doc)\n            }\n          }\n\n          callback(uri, success, body, response)\n          control.pendingUpstream -= 1\n          // When upstream patches have been sent, reload state if downstream waiting\n          if (control.pendingUpstream === 0 && control.downstreamAction) {\n            var downstreamAction = control.downstreamAction\n            delete control.downstreamAction\n            // console.log('delayed downstream action:')\n            downstreamAction(doc)\n          }\n        })\n      } else if ((protocol as string).indexOf('DAV') >= 0) {\n        this.updateDav(doc, ds, is, callback)\n      } else {\n        if ((protocol as string).indexOf('LOCALFILE') >= 0) {\n          try {\n            this.updateLocalFile(doc, ds, is, callback)\n          } catch (e) {\n            callback(doc.value, false,\n              'Exception trying to write back file <' + doc.value + '>\\n'\n              // + tabulator.Util.stackString(e))\n            )\n          }\n        } else {\n          throw new Error(\"Unhandled edit method: '\" + protocol + \"' for \" + doc)\n        }\n      }\n    } catch (e) {\n      callback(undefined, false, 'Exception in update: ' + e + '\\n' +\n        Util.stackString(e))\n    }\n  }\n\n  updateDav (\n    doc: Quad_Subject,\n    ds,\n    is,\n    callbackFunction\n  ): null | Promise<void> {\n    let kb = this.store\n    // The code below is derived from Kenny's UpdateCenter.js\n    var request = kb.any(doc, this.ns.link('request'))\n    if (!request) {\n      throw new Error('No record of our HTTP GET request for document: ' +\n        doc)\n    } // should not happen\n    var response = kb.any(request as NamedNode, this.ns.link('response')) as Quad_Subject\n    if (!response) {\n      return null // throw \"No record HTTP GET response for document: \"+doc\n    }\n    var contentType = (kb.the(response, this.ns.httph('content-type'))as Term).value\n\n    // prepare contents of revised document\n    let newSts = kb.statementsMatching(undefined, undefined, undefined, doc).slice() // copy!\n    for (let i = 0; i < ds.length; i++) {\n      Util.RDFArrayRemove(newSts, ds[i])\n    }\n    for (let i = 0; i < is.length; i++) {\n      newSts.push(is[i])\n    }\n\n    const documentString = this.serialize(doc.value, newSts, contentType)\n\n    // Write the new version back\n    var candidateTarget = kb.the(response, this.ns.httph('content-location'))\n    var targetURI\n    if (candidateTarget) {\n      targetURI = uriJoin(candidateTarget.value, targetURI)\n    }\n\n    let options = {\n      contentType,\n      noMeta: true,\n      body: documentString\n    }\n\n    return kb.fetcher.webOperation('PUT', targetURI, options)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.error)\n        }\n\n        for (let i = 0; i < ds.length; i++) {\n          kb.remove(ds[i])\n        }\n        for (let i = 0; i < is.length; i++) {\n          kb.add(is[i].subject, is[i].predicate, is[i].object, doc)\n        }\n\n        callbackFunction(doc.value, response.ok, response.responseText, response)\n      })\n      .catch(err => {\n        callbackFunction(doc.value, false, err.message, err)\n      })\n  }\n\n  /**\n   * Likely deprecated, since this lib no longer deals with browser extension\n   *\n   * @param doc\n   * @param ds\n   * @param is\n   * @param callbackFunction\n   */\n  updateLocalFile (doc: NamedNode, ds, is, callbackFunction): void {\n    const kb = this.store\n    // console.log('Writing back to local file\\n')\n\n    // prepare contents of revised document\n    let newSts = kb.statementsMatching(undefined, undefined, undefined, doc).slice() // copy!\n\n    for (let i = 0; i < ds.length; i++) {\n      Util.RDFArrayRemove(newSts, ds[ i ])\n    }\n    for (let i = 0; i < is.length; i++) {\n      newSts.push(is[ i ])\n    }\n    // serialize to the appropriate format\n    var dot = doc.value.lastIndexOf('.')\n    if (dot < 1) {\n      throw new Error('Rewriting file: No filename extension: ' + doc.value)\n    }\n    var ext = doc.value.slice(dot + 1)\n\n    let contentType = Fetcher.CONTENT_TYPE_BY_EXT[ ext ]\n    if (!contentType) {\n      throw new Error('File extension .' + ext + ' not supported for data write')\n    }\n\n    const documentString = this.serialize(doc.value, newSts, contentType)\n\n    kb.fetcher.webOperation('PUT',doc.value,{\n      \"body\"      : documentString,\n      contentType : contentType,\n    }).then( (response)=>{\n      if(!response.ok) return callbackFunction(doc.value,false,response.error)\n      for (let i = 0; i < ds.length; i++) {\n        kb.remove(ds[i]);\n      }\n      for (let i = 0; i < is.length; i++) {\n        kb.add(is[i].subject, is[i].predicate, is[i].object, doc);\n      }\n      callbackFunction(doc.value, true, '')  // success!\n    })\n  }\n\n  /**\n   * @throws {Error} On unsupported content type\n   *\n   * @returns {string}\n   */\n  serialize (uri: string, data: string | Quad[], contentType: string): string {\n    const kb = this.store\n    let documentString\n\n    if (typeof data === 'string') {\n      return data\n    }\n\n    // serialize to the appropriate format\n    var sz = Serializer(kb)\n    sz.suggestNamespaces(kb.namespaces)\n    sz.setBase(uri)\n    switch (contentType) {\n      case 'text/xml':\n      case 'application/rdf+xml':\n        documentString = sz.statementsToXML(data)\n        break\n      case 'text/n3':\n      case 'text/turtle':\n      case 'application/x-turtle': // Legacy\n      case 'application/n3': // Legacy\n        documentString = sz.statementsToN3(data)\n        break\n      default:\n        throw new Error('Content-type ' + contentType +\n          ' not supported for data serialization')\n    }\n\n    return documentString\n  }\n\n  /**\n   * This is suitable for an initial creation of a document.\n   */\n  put(\n    doc: RDFlibNamedNode,\n    data: string | Quad[],\n    contentType: string,\n    callback: (uri: string, ok: boolean, errorMessage?: string, response?: unknown) => void,\n  ): Promise<void> {\n    const kb = this.store\n    let documentString: string\n\n    return Promise.resolve()\n      .then(() => {\n        documentString = this.serialize(doc.value, data, contentType)\n\n        return kb.fetcher\n          .webOperation('PUT', doc.value, { contentType, body: documentString })\n      })\n      .then(response => {\n        if (!response.ok) {\n          return callback(doc.value, response.ok, response.error, response)\n        }\n\n        delete kb.fetcher.nonexistent[doc.value]\n        delete kb.fetcher.requested[doc.value] // @@ could this mess with the requested state machine? if a fetch is in progress\n\n        if (typeof data !== 'string') {\n          data.map((st) => {\n            kb.addStatement(st)\n          })\n        }\n\n        callback(doc.value, response.ok, '', response)\n      })\n      .catch(err => {\n        callback(doc.value, false, err.message)\n      })\n  }\n\n  /**\n   * Reloads a document.\n   *\n   * Fast and cheap, no metadata. Measure times for the document.\n   * Load it provisionally.\n   * Don't delete the statements before the load, or it will leave a broken\n   * document in the meantime.\n   *\n   * @param kb\n   * @param doc {RDFlibNamedNode}\n   * @param callbackFunction\n   */\n  reload (\n    kb: IndexedFormula,\n    doc: docReloadType,\n    callbackFunction: (ok: boolean, message?: string, response?: Error | Response) => {} | void\n  ): void {\n    var startTime = Date.now()\n    // force sets no-cache and\n    const options = {\n      force: true,\n      noMeta: true,\n      clearPreviousData: true,\n    };\n\n    (kb as any).fetcher.nowOrWhenFetched(doc.value, options, function (ok: boolean, body: Body, response: Response) {\n      if (!ok) {\n        // console.log('    ERROR reloading data: ' + body)\n        callbackFunction(false, 'Error reloading data: ' + body, response)\n        //@ts-ignore Where does onErrorWasCalled come from?\n      } else if (response.onErrorWasCalled || response.status !== 200) {\n        // console.log('    Non-HTTP error reloading data! onErrorWasCalled=' +\n          //@ts-ignore Where does onErrorWasCalled come from?\n          // response.onErrorWasCalled + ' status: ' + response.status)\n        callbackFunction(false, 'Non-HTTP error reloading data: ' + body, response)\n      } else {\n        var elapsedTimeMs = Date.now() - startTime\n\n        if (!doc.reloadTimeTotal) doc.reloadTimeTotal = 0\n        if (!doc.reloadTimeCount) doc.reloadTimeCount = 0\n\n        doc.reloadTimeTotal += elapsedTimeMs\n        doc.reloadTimeCount += 1\n\n        // console.log('    Fetch took ' + elapsedTimeMs + 'ms, av. of ' +\n          // doc.reloadTimeCount + ' = ' +\n          // (doc.reloadTimeTotal / doc.reloadTimeCount) + 'ms.')\n\n        callbackFunction(true)\n      }\n    })\n  }\n}\n\ninterface docReloadType extends NamedNode {\n  reloadTimeCount?: number\n  reloadTimeTotal?: number\n}\n","import {\n  IRDFlibDataFactory,\n} from '../types'\nimport Literal from '../literal'\nimport Statement from '../statement'\nimport IndexedFormula from '../store'\nimport Fetcher from '../fetcher'\nimport ExtendedTermFactory from './extended-term-factory'\nimport { NamedNode, Quad_Subject, Quad_Predicate, Quad_Object, Quad_Graph } from '../tf-types'\n\n/** Full RDFLib.js Data Factory */\nconst RDFlibDataFactory: IRDFlibDataFactory = {\n  ...ExtendedTermFactory,\n\n  /**\n   * Creates a new fetcher\n   * @param store - The store to use\n   * @param options - The options\n   */\n  fetcher (store: IndexedFormula, options: any): Fetcher {\n    return new Fetcher(store, options)\n  },\n\n  /**\n   * Creates a new graph (store)\n   */\n  graph (features = undefined, opts = undefined): IndexedFormula {\n    return new IndexedFormula(features, opts || {rdfFactory: ExtendedTermFactory})\n  },\n\n  /**\n   * Creates a new literal node\n   * @param val The lexical value\n   * @param lang The language\n   * @param dt The datatype\n   */\n  lit (val: string, lang?: string, dt?: NamedNode): Literal {\n    return this.literal('' + val, lang || dt)\n  },\n\n  /**\n   * Creates a new statement\n   * @param subject The subject\n   * @param predicate The predicate\n   * @param object The object\n   * @param graph The containing graph\n   */\n  st (\n    subject: Quad_Subject,\n    predicate: Quad_Predicate,\n    object: Quad_Object,\n    graph?: Quad_Graph\n  ): Statement {\n    return this.quad(subject, predicate, object, graph)\n  },\n}\n\nexport default RDFlibDataFactory\n","/*\n * Updates-Via\n */\nimport DataFactory from './factories/rdflib-data-factory'\n\nexport class UpdatesSocket {\n  constructor (parent, via) {\n    this.parent = parent\n    this.via = via\n    this.connected = false\n    this.pending = {}\n    this.subscribed = {}\n    this.socket = {}\n    try {\n      this.socket = new WebSocket(via)\n      this.socket.onopen = this.onOpen\n      this.socket.onclose = this.onClose\n      this.socket.onmessage = this.onMessage\n      this.socket.onerror = this.onError\n    } catch (error) {\n      this.onError(error)\n    }\n  }\n  _decode (q) {\n    var elt\n    var i\n    var k\n    var r\n    var ref\n    var ref1\n    var v\n    r = {}\n    ref = (function () {\n      var j, len, ref, results\n      ref = q.split('&')\n      results = []\n      for (j = 0, len = ref.length; j < len; j++) {\n        elt = ref[j]\n        results.push(elt.split('='))\n      }\n      return results\n    })()\n    for (i in ref) {\n      elt = ref[i]\n      ref1 = [decodeURIComponent(elt[0]), decodeURIComponent(elt[1])]\n      k = ref1[0]\n      v = ref1[1]\n      if (r[k] == null) {\n        r[k] = []\n      }\n      r[k].push(v)\n    }\n    return r\n  }\n  _send (method, uri, data) {\n    var base, message\n    message = [method, uri, data].join(' ')\n    return typeof (base = this.socket).send === 'function' ? base.send(message) : void 0\n  }\n  _subscribe (uri) {\n    this._send('sub', uri, '')\n    this.subscribed[uri] = true\n    return this.subscribed[uri]\n  }\n  onClose (e) {\n    var uri\n    this.connected = false\n    for (uri in this.subscribed) {\n      this.pending[uri] = true\n    }\n    this.subscribed = {}\n    return this.subscribed\n  }\n  onError (e) {\n    throw new Error('onError' + e)\n  }\n  onMessage (e) {\n    var base, message\n    message = e.data.split(' ')\n    if (message[0] === 'ping') {\n      return typeof (base = this.socket).send === 'function' ? base.send('pong ' + message.slice(1).join(' ')) : void 0\n    } else if (message[0] === 'pub') {\n      return this.parent.onUpdate(message[1], this._decode(message[2]))\n    }\n  }\n  onOpen (e) {\n    var results, uri\n    this.connected = true\n    results = []\n    for (uri in this.pending) {\n      delete this.pending[uri]\n      results.push(this._subscribe(uri))\n    }\n    return results\n  }\n  subscribe (uri) {\n    if (this.connected) {\n      return this._subscribe(uri)\n    } else {\n      this.pending[uri] = true\n      return this.pending[uri]\n    }\n  }\n}\n\nexport class UpdatesVia {\n  constructor (fetcher) {\n    this.fetcher = fetcher\n    this.graph = {}\n    this.via = {}\n    this.fetcher.addCallback('headers', this.onHeaders)\n  }\n  onHeaders (d) {\n    var etag, uri, via\n    if (d.headers == null) {\n      return true\n    }\n    if (typeof WebSocket === 'undefined' || WebSocket === null) {\n      return true\n    }\n    etag = d.headers['etag']\n    via = d.headers['updates-via']\n    uri = d.uri\n    if (etag && via) {\n      this.graph[uri] = {\n        etag: etag,\n        via: via\n      }\n      this.register(via, uri)\n    }\n    return true\n  }\n  onUpdate (uri, d) {\n    return this.fetcher.refresh(DataFactory.namedNode(uri))\n  }\n  register (via, uri) {\n    if (this.via[via] == null) {\n      this.via[via] = new UpdatesSocket(this, via)\n    }\n    return this.via[via].subscribe(uri)\n  }\n}\n","import { IRDFlibDataFactory } from './types'\n\nimport BlankNode from './blank-node'\nimport Collection from './collection'\nimport * as convert from './convert'\nimport Empty from './empty'\nimport Fetcher from './fetcher'\nimport Formula from './formula'\nimport Store from './store'\nimport jsonParser from './jsonparser'\nimport Literal from './literal'\nimport log from './log'\nimport N3Parser from './n3parser'\nimport NamedNode from './named-node'\nimport Namespace from './namespace'\nimport Node from './node'\nimport parse from './parse'\nimport { Query } from './query'\nimport queryToSPARQL from './query-to-sparql'\nimport RDFaProcessor from './rdfaparser'\nimport RDFParser from './rdfxmlparser'\nimport serialize from './serialize'\nimport Serializer from './serializer'\nimport SPARQLToQuery from './sparql-to-query'\nimport sparqlUpdateParser from './patch-parser'\nimport Statement from './statement'\nimport UpdateManager from './update-manager'\nimport { UpdatesSocket } from './updates-via'\nimport { UpdatesVia } from './updates-via'\nimport * as uri from './uri'\nimport * as Util from './utils-js'\nimport Variable from './variable'\nimport DataFactory from './factories/rdflib-data-factory'\n\n// Prepare bound versions of data factory methods for export\nconst boundDataFactory = {} as IRDFlibDataFactory\nfor (const name in DataFactory) {\n  if (typeof DataFactory[name] === 'function')\n    boundDataFactory[name] = DataFactory[name].bind(DataFactory);\n}\nconst {\n  fetcher,\n  graph,\n  lit,\n  st,\n  namedNode,\n  variable,\n  blankNode,\n  defaultGraph,\n  literal,\n  quad,\n  triple,\n} = boundDataFactory\n\nconst formula = new Formula();\nconst fromNT = str => formula.fromNT(str);\n\nconst term = Node.fromValue\n\n// TODO: this export is broken;\n// it exports the _current_ value of nextId, which is always 0\nconst NextId = BlankNode.nextId\n\nexport * from './utils/terms'\nexport type { AutoInitOptions, ExtendedResponse, FetchError } from './fetcher'\nexport {\n  BlankNode,\n  Collection,\n  convert,\n  DataFactory,\n  Empty,\n  Fetcher,\n  Formula,\n  Store,\n  jsonParser,\n  Literal,\n  log,\n  N3Parser,\n  NamedNode,\n  Namespace,\n  Node,\n  parse,\n  Query,\n  queryToSPARQL,\n  RDFaProcessor,\n  RDFParser,\n  serialize,\n  Serializer,\n  SPARQLToQuery,\n  sparqlUpdateParser,\n  Statement,\n  term,\n  UpdateManager,\n  UpdatesSocket,\n  UpdatesVia,\n  uri,\n  Util,\n  Variable,\n\n  Store as IndexedFormula, // Alias\n\n  NextId,\n\n  fromNT,\n  fetcher,\n  graph,\n  lit,\n  st,\n  namedNode as sym,\n\n  // RDFJS DataFactory interface\n  blankNode,\n  defaultGraph,\n  literal,\n  namedNode,\n  quad,\n  triple,\n  variable,\n}\nexport { termValue } from './utils/termValue'\n\nexport class ConnectedStore extends Store {\n  constructor (features) {\n    super(features)\n    this.fetcher = new Fetcher(this, {})\n  }\n}\n\nexport class  LiveStore extends ConnectedStore {\n  constructor (features) {\n    super(features)\n    this.updater = new UpdateManager(this)\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Provides a way to access commonly used namespaces\n *\n * Usage:\n *\n *   ```\n *   const $rdf = require('rdflib'); //or any other RDF/JS-compatible library\n *   const ns = require('solid-namespace')($rdf);\n *   const store = $rdf.graph();\n *\n *   let me = ...;\n *   let name = store.any(me, ns.vcard(‘fn’)) || store.any(me, ns.foaf(‘name’));\n *   ```\n * @module vocab\n */\nconst aliases = {\n  acl: 'http://www.w3.org/ns/auth/acl#',\n  arg: 'http://www.w3.org/ns/pim/arg#',\n  as: 'https://www.w3.org/ns/activitystreams#',\n  cal: 'http://www.w3.org/2002/12/cal/ical#',\n  cert: 'http://www.w3.org/ns/auth/cert#',\n  contact: 'http://www.w3.org/2000/10/swap/pim/contact#',\n  dc: 'http://purl.org/dc/elements/1.1/',\n  dct: 'http://purl.org/dc/terms/',\n  doap: 'http://usefulinc.com/ns/doap#',\n  foaf: 'http://xmlns.com/foaf/0.1/',\n  geo: 'http://www.w3.org/2003/01/geo/wgs84_pos#',\n  gpx: 'http://www.w3.org/ns/pim/gpx#',\n  http: 'http://www.w3.org/2007/ont/http#',\n  httph: 'http://www.w3.org/2007/ont/httph#',\n  icalTZ: 'http://www.w3.org/2002/12/cal/icaltzd#', // Beware: not cal:\n  ldp: 'http://www.w3.org/ns/ldp#',\n  link: 'http://www.w3.org/2007/ont/link#',\n  log: 'http://www.w3.org/2000/10/swap/log#',\n  meeting: 'http://www.w3.org/ns/pim/meeting#',\n  mo: 'http://purl.org/ontology/mo/',\n  org: 'http://www.w3.org/ns/org#',\n  owl: 'http://www.w3.org/2002/07/owl#',\n  pad: 'http://www.w3.org/ns/pim/pad#',\n  patch: 'http://www.w3.org/ns/pim/patch#',\n  prov: 'http://www.w3.org/ns/prov#',\n  qu: 'http://www.w3.org/2000/10/swap/pim/qif#',\n  trip: 'http://www.w3.org/ns/pim/trip#',\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n  rss: 'http://purl.org/rss/1.0/',\n  sched: 'http://www.w3.org/ns/pim/schedule#',\n  schema: 'http://schema.org/', // @@ beware confusion with documents no 303\n  sioc: 'http://rdfs.org/sioc/ns#',\n  solid: 'http://www.w3.org/ns/solid/terms#',\n  space: 'http://www.w3.org/ns/pim/space#',\n  stat: 'http://www.w3.org/ns/posix/stat#',\n  tab: 'http://www.w3.org/2007/ont/link#',\n  tabont: 'http://www.w3.org/2007/ont/link#',\n  ui: 'http://www.w3.org/ns/ui#',\n  vcard: 'http://www.w3.org/2006/vcard/ns#',\n  wf: 'http://www.w3.org/2005/01/wf/flow#',\n  xsd: 'http://www.w3.org/2001/XMLSchema#',\n  cco: 'http://www.ontologyrepository.com/CommonCoreOntologies/'\n}\n\n/**\n * @param [rdflib] {RDF} Optional RDF Library (such as rdflib.js or rdf-ext) to inject\n */\nfunction vocab (rdf = { namedNode: u => u }) {\n  const namespaces = {}\n  for (const alias in aliases) {\n    const expansion = aliases[alias]\n    namespaces[alias] = function (localName = '') {\n      return rdf.namedNode(expansion + localName)\n    }\n  };\n\n  return namespaces\n};\n\nmodule.exports = vocab\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015 {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  async main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    let i = 0;\n    for(const id of nonNormalized) {\n      // Note: batch hashing first degree quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // steps 5.3.1 and 5.3.2:\n      await this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = await this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  async hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = await md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  async hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  async hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = await this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      let i = 0;\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n        // Note: batch permutations 3 at a time\n        if(++i % 3 === 0) {\n          await this._yield();\n        }\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = await this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: await md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // Note: batch hashing related blank node quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.1) For each component in quad, if component is the subject, object,\n      // and graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      await Promise.all([\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.subject, position: 's',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.object, position: 'o',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.graph, position: 'g',\n          id, issuer, hashToRelated\n        })\n      ]);\n    }\n\n    return hashToRelated;\n  }\n\n  async _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = await this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  async _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = await this.hashRelatedBlankNode(\n      related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n\n  async _yield() {\n    return new Promise(resolve => setImmediate(resolve));\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nrequire('setimmediate');\n\nconst crypto = self.crypto || self.msCrypto;\n\n// TODO: synchronous version no longer supported in browser\n\nmodule.exports = class MessageDigest {\n  /**\n   * Creates a new MessageDigest.\n   *\n   * @param algorithm the algorithm to use.\n   */\n  constructor(algorithm) {\n    // check if crypto.subtle is available\n    // check is here rather than top-level to only fail if class is used\n    if(!(crypto && crypto.subtle)) {\n      throw new Error('crypto.subtle not found.');\n    }\n    if(algorithm === 'sha256') {\n      this.algorithm = {name: 'SHA-256'};\n    } else if(algorithm === 'sha1') {\n      this.algorithm = {name: 'SHA-1'};\n    } else {\n      throw new Error(`Unsupport algorithm \"${algorithm}\".`);\n    }\n    this._content = '';\n  }\n\n  update(msg) {\n    this._content += msg;\n  }\n\n  async digest() {\n    const data = new TextEncoder().encode(this._content);\n    const buffer = new Uint8Array(\n      await crypto.subtle.digest(this.algorithm, data));\n    // return digest in hex\n    let hex = '';\n    for(let i = 0; i < buffer.length; ++i) {\n      hex += buffer[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: convert to ES6 iterable?\n\nmodule.exports = class Permuter {\n  /**\n   * A Permuter iterates over all possible permutations of the given array\n   * of elements.\n   *\n   * @param list the array of elements to iterate over.\n   */\n  constructor(list) {\n    // original array\n    this.current = list.sort();\n    // indicates whether there are more permutations\n    this.done = false;\n    // directional info for permutation algorithm\n    this.dir = new Map();\n    for(let i = 0; i < list.length; ++i) {\n      this.dir.set(list[i], true);\n    }\n  }\n\n  /**\n   * Returns true if there is another permutation.\n   *\n   * @return true if there is another permutation, false if not.\n   */\n  hasNext() {\n    return !this.done;\n  }\n\n  /**\n   * Gets the next permutation. Call hasNext() to ensure there is another one\n   * first.\n   *\n   * @return the next permutation.\n   */\n  next() {\n    // copy current permutation to return it\n    const {current, dir} = this;\n    const rval = current.slice();\n\n    /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n     permutation algorithm. */\n\n    // get largest mobile element k\n    // (mobile: element is greater than the one it is looking at)\n    let k = null;\n    let pos = 0;\n    const length = current.length;\n    for(let i = 0; i < length; ++i) {\n      const element = current[i];\n      const left = dir.get(element);\n      if((k === null || element > k) &&\n        ((left && i > 0 && element > current[i - 1]) ||\n        (!left && i < (length - 1) && element > current[i + 1]))) {\n        k = element;\n        pos = i;\n      }\n    }\n\n    // no more permutations\n    if(k === null) {\n      this.done = true;\n    } else {\n      // swap k and the element it is looking at\n      const swap = dir.get(k) ? pos - 1 : pos + 1;\n      current[pos] = current[swap];\n      current[swap] = k;\n\n      // reverse the direction of all elements larger than k\n      for(const element of current) {\n        if(element > k) {\n          dir.set(element, !dir.get(element));\n        }\n      }\n    }\n\n    return rval;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015Sync {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    for(const id of nonNormalized) {\n      // steps 5.3.1 and 5.3.2:\n      this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) For each component in quad, if component is the subject, object,\n      // or graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.subject, position: 's',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.object, position: 'o',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.graph, position: 'g',\n        id, issuer, hashToRelated\n      });\n    }\n\n    return hashToRelated;\n  }\n\n  _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = loader;\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    let promise = this._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = this._requests[url] = this._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete this._requests[url];\n    }\n  }\n};\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ### Strips off any starting UTF BOM mark.\n  _readStartingBom(input) {\n    return input.startsWith('\\ufeff') ? input.substr(1) : input;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = this._readStartingBom(input);\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            // Only read a BOM at the start\n            if (typeof this._input === 'undefined')\n              this._input = this._readStartingBom(typeof data === 'string' ? data : data.toString());\n            else\n              this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (typeof this._input === 'string')\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n * This library works in the browser and node.js.\n *\n * BSD 3-Clause License\n * Copyright (c) 2016-2021 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\nconst URGNA2012 = require('./URGNA2012');\nconst URDNA2015Sync = require('./URDNA2015Sync');\nconst URGNA2012Sync = require('./URGNA2012Sync');\n\n// optional native support\nlet rdfCanonizeNative;\ntry {\n  rdfCanonizeNative = require('rdf-canonize-native');\n} catch(e) {}\n\nconst api = {};\nmodule.exports = api;\n\n// expose helpers\napi.NQuads = require('./NQuads');\napi.IdentifierIssuer = require('./IdentifierIssuer');\n\n/**\n * Get or set native API.\n *\n * @param api the native API.\n *\n * @return the currently set native API.\n */\napi._rdfCanonizeNative = function(api) {\n  if(api) {\n    rdfCanonizeNative = api;\n  }\n  return rdfCanonizeNative;\n};\n\n/**\n * Asynchronously canonizes an RDF dataset.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return a Promise that resolves to the canonicalized RDF Dataset.\n */\napi.canonize = async function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(!rdfCanonizeNative) {\n      throw new Error('rdf-canonize-native not available');\n    }\n    // TODO: convert native algorithm to Promise-based async\n    return new Promise((resolve, reject) =>\n      rdfCanonizeNative.canonize(dataset, options, (err, canonical) =>\n        err ? reject(err) : resolve(canonical)));\n  }\n\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n\n/**\n * This method is no longer available in the public API, it is for testing\n * only. It synchronously canonizes an RDF dataset and does not work in the\n * browser.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return the RDF dataset in canonical form.\n */\napi._canonizeSync = function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(rdfCanonizeNative) {\n      return rdfCanonizeNative.canonizeSync(dataset, options);\n    }\n    throw new Error('rdf-canonize-native not available');\n  }\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015Sync(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012Sync(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\n\nmodule.exports = class URDNA2012 extends URDNA2015 {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // Note: batch hashing related blank nodes 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = await this.hashRelatedBlankNode(\n        related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015Sync = require('./URDNA2015Sync');\n\nmodule.exports = class URDNA2012Sync extends URDNA2015Sync {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/*\n * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst xhrLoader = require('./documentLoaders/xhr');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Setup browser document loaders.\n *\n * @param jsonld the jsonld api.\n */\napi.setupDocumentLoaders = function(jsonld) {\n  if(typeof XMLHttpRequest !== 'undefined') {\n    jsonld.documentLoaders.xhr = xhrLoader;\n    // use xhr document loader by default\n    jsonld.useDocumentLoader('xhr');\n  }\n};\n\n/**\n * Setup browser globals.\n *\n * @param jsonld the jsonld api.\n */\napi.setupGlobals = function(jsonld) {\n  // setup browser global JsonLdProcessor\n  if(typeof globalThis.JsonLdProcessor === 'undefined') {\n    Object.defineProperty(globalThis, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: jsonld.JsonLdProcessor\n    });\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {parseLinkHeader, buildHeaders} = require('../util');\nconst {LINK_HEADER_CONTEXT} = require('../constants');\nconst JsonLdError = require('../JsonLdError');\nconst RequestQueue = require('../RequestQueue');\nconst {prependBase} = require('../url');\n\nconst REGEX_LINK_HEADER = /(^|(\\r\\n))link:/i;\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          headers: an object (map) of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\nmodule.exports = ({\n  secure,\n  headers = {},\n  xhr\n} = {headers: {}}) => {\n  headers = buildHeaders(headers);\n  const queue = new RequestQueue();\n  return queue.wrapLoader(loader);\n\n  async function loader(url) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    if(secure && url.indexOf('https') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n\n    let req;\n    try {\n      req = await _get(xhr, url, headers);\n    } catch(e) {\n      throw new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url, cause: e});\n    }\n\n    if(req.status >= 400) {\n      throw new JsonLdError(\n        'URL could not be dereferenced: ' + req.statusText,\n        'jsonld.LoadDocumentError', {\n          code: 'loading document failed',\n          url,\n          httpStatusCode: req.status\n        });\n    }\n\n    let doc = {contextUrl: null, documentUrl: url, document: req.response};\n    let alternate = null;\n\n    // handle Link Header (avoid unsafe header warning by existence testing)\n    const contentType = req.getResponseHeader('Content-Type');\n    let linkHeader;\n    if(REGEX_LINK_HEADER.test(req.getAllResponseHeaders())) {\n      linkHeader = req.getResponseHeader('Link');\n    }\n    if(linkHeader && contentType !== 'application/ld+json') {\n      // only 1 related link header permitted\n      const linkHeaders = parseLinkHeader(linkHeader);\n      const linkedContext = linkHeaders[LINK_HEADER_CONTEXT];\n      if(Array.isArray(linkedContext)) {\n        throw new JsonLdError(\n          'URL could not be dereferenced, it has more than one ' +\n          'associated HTTP Link Header.',\n          'jsonld.InvalidUrl',\n          {code: 'multiple context link headers', url});\n      }\n      if(linkedContext) {\n        doc.contextUrl = linkedContext.target;\n      }\n\n      // \"alternate\" link header is a redirect\n      alternate = linkHeaders['alternate'];\n      if(alternate &&\n        alternate.type == 'application/ld+json' &&\n        !(contentType || '').match(/^application\\/(\\w*\\+)?json$/)) {\n        doc = await loader(prependBase(url, alternate.target));\n      }\n    }\n\n    return doc;\n  }\n};\n\nfunction _get(xhr, url, headers) {\n  xhr = xhr || XMLHttpRequest;\n  const req = new xhr();\n  return new Promise((resolve, reject) => {\n    req.onload = () => resolve(req);\n    req.onerror = err => reject(err);\n    req.open('GET', url, true);\n    for(const k in headers) {\n      req.setRequestHeader(k, headers[k]);\n    }\n    req.send();\n  });\n}\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n} = require('./types');\nconst {\n  asArray: _asArray\n} = require('./util');\nconst {prependBase} = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst ResolvedContext = require('./ResolvedContext');\n\nconst MAX_CONTEXT_URLS = 10;\n\nmodule.exports = class ContextResolver {\n  /**\n   * Creates a ContextResolver.\n   *\n   * @param sharedCache a shared LRU cache with `get` and `set` APIs.\n   */\n  constructor({sharedCache}) {\n    this.perOpCache = new Map();\n    this.sharedCache = sharedCache;\n  }\n\n  async resolve({\n    activeCtx, context, documentLoader, base, cycles = new Set()\n  }) {\n    // process `@context`\n    if(context && _isObject(context) && context['@context']) {\n      context = context['@context'];\n    }\n\n    // context is one or more contexts\n    context = _asArray(context);\n\n    // resolve each context in the array\n    const allResolved = [];\n    for(const ctx of context) {\n      if(_isString(ctx)) {\n        // see if `ctx` has been resolved before...\n        let resolved = this._get(ctx);\n        if(!resolved) {\n          // not resolved yet, resolve\n          resolved = await this._resolveRemoteContext(\n            {activeCtx, url: ctx, documentLoader, base, cycles});\n        }\n\n        // add to output and continue\n        if(_isArray(resolved)) {\n          allResolved.push(...resolved);\n        } else {\n          allResolved.push(resolved);\n        }\n        continue;\n      }\n      if(ctx === null) {\n        // handle `null` context, nothing to cache\n        allResolved.push(new ResolvedContext({document: null}));\n        continue;\n      }\n      if(!_isObject(ctx)) {\n        _throwInvalidLocalContext(context);\n      }\n      // context is an object, get/create `ResolvedContext` for it\n      const key = JSON.stringify(ctx);\n      let resolved = this._get(key);\n      if(!resolved) {\n        // create a new static `ResolvedContext` and cache it\n        resolved = new ResolvedContext({document: ctx});\n        this._cacheResolvedContext({key, resolved, tag: 'static'});\n      }\n      allResolved.push(resolved);\n    }\n\n    return allResolved;\n  }\n\n  _get(key) {\n    // get key from per operation cache; no `tag` is used with this cache so\n    // any retrieved context will always be the same during a single operation\n    let resolved = this.perOpCache.get(key);\n    if(!resolved) {\n      // see if the shared cache has a `static` entry for this URL\n      const tagMap = this.sharedCache.get(key);\n      if(tagMap) {\n        resolved = tagMap.get('static');\n        if(resolved) {\n          this.perOpCache.set(key, resolved);\n        }\n      }\n    }\n    return resolved;\n  }\n\n  _cacheResolvedContext({key, resolved, tag}) {\n    this.perOpCache.set(key, resolved);\n    if(tag !== undefined) {\n      let tagMap = this.sharedCache.get(key);\n      if(!tagMap) {\n        tagMap = new Map();\n        this.sharedCache.set(key, tagMap);\n      }\n      tagMap.set(tag, resolved);\n    }\n    return resolved;\n  }\n\n  async _resolveRemoteContext({activeCtx, url, documentLoader, base, cycles}) {\n    // resolve relative URL and fetch context\n    url = prependBase(base, url);\n    const {context, remoteDoc} = await this._fetchContext(\n      {activeCtx, url, documentLoader, cycles});\n\n    // update base according to remote document and resolve any relative URLs\n    base = remoteDoc.documentUrl || url;\n    _resolveContextUrls({context, base});\n\n    // resolve, cache, and return context\n    const resolved = await this.resolve(\n      {activeCtx, context, documentLoader, base, cycles});\n    this._cacheResolvedContext({key: url, resolved, tag: remoteDoc.tag});\n    return resolved;\n  }\n\n  async _fetchContext({activeCtx, url, documentLoader, cycles}) {\n    // check for max context URLs fetched during a resolve operation\n    if(cycles.size > MAX_CONTEXT_URLS) {\n      throw new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'loading remote context failed' :\n            'context overflow',\n          max: MAX_CONTEXT_URLS\n        });\n    }\n\n    // check for context URL cycle\n    // shortcut to avoid extra work that would eventually hit the max above\n    if(cycles.has(url)) {\n      throw new JsonLdError(\n        'Cyclical @context URLs detected.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'recursive context inclusion' :\n            'context overflow',\n          url\n        });\n    }\n\n    // track cycles\n    cycles.add(url);\n\n    let context;\n    let remoteDoc;\n\n    try {\n      remoteDoc = await documentLoader(url);\n      context = remoteDoc.document || null;\n      // parse string context as JSON\n      if(_isString(context)) {\n        context = JSON.parse(context);\n      }\n    } catch(e) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n        'Possible causes are an inaccessible URL perhaps due to ' +\n        'a same-origin policy (ensure the server uses CORS if you are ' +\n        'using client-side JavaScript), too many redirects, a ' +\n        'non-JSON response, or more than one HTTP Link Header was ' +\n        'provided for a remote context.',\n        'jsonld.InvalidUrl',\n        {code: 'loading remote context failed', url, cause: e});\n    }\n\n    // ensure ctx is an object\n    if(!_isObject(context)) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a JSON object. The ' +\n        'response was valid JSON, but it was not a JSON object.',\n        'jsonld.InvalidUrl', {code: 'invalid remote context', url});\n    }\n\n    // use empty context if no @context key is present\n    if(!('@context' in context)) {\n      context = {'@context': {}};\n    } else {\n      context = {'@context': context['@context']};\n    }\n\n    // append @context URL to context if given\n    if(remoteDoc.contextUrl) {\n      if(!_isArray(context['@context'])) {\n        context['@context'] = [context['@context']];\n      }\n      context['@context'].push(remoteDoc.contextUrl);\n    }\n\n    return {context, remoteDoc};\n  }\n};\n\nfunction _throwInvalidLocalContext(ctx) {\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; @context must be an object.',\n    'jsonld.SyntaxError', {\n      code: 'invalid local context', context: ctx\n    });\n}\n\n/**\n * Resolve all relative `@context` URLs in the given context by inline\n * replacing them with absolute URLs.\n *\n * @param context the context.\n * @param base the base IRI to use to resolve relative IRIs.\n */\nfunction _resolveContextUrls({context, base}) {\n  if(!context) {\n    return;\n  }\n\n  const ctx = context['@context'];\n\n  if(_isString(ctx)) {\n    context['@context'] = prependBase(base, ctx);\n    return;\n  }\n\n  if(_isArray(ctx)) {\n    for(let i = 0; i < ctx.length; ++i) {\n      const element = ctx[i];\n      if(_isString(element)) {\n        ctx[i] = prependBase(base, element);\n        continue;\n      }\n      if(_isObject(element)) {\n        _resolveContextUrls({context: {'@context': element}, base});\n      }\n    }\n    return;\n  }\n\n  if(!_isObject(ctx)) {\n    // no @context URLs can be found in non-object\n    return;\n  }\n\n  // ctx is an object, resolve any context URLs in terms\n  for(const term in ctx) {\n    _resolveContextUrls({context: ctx[term], base});\n  }\n}\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst LRU = require('lru-cache');\n\nconst MAX_ACTIVE_CONTEXTS = 10;\n\nmodule.exports = class ResolvedContext {\n  /**\n   * Creates a ResolvedContext.\n   *\n   * @param document the context document.\n   */\n  constructor({document}) {\n    this.document = document;\n    // TODO: enable customization of processed context cache\n    // TODO: limit based on size of processed contexts vs. number of them\n    this.cache = new LRU({max: MAX_ACTIVE_CONTEXTS});\n  }\n\n  getProcessed(activeCtx) {\n    return this.cache.get(activeCtx);\n  }\n\n  setProcessed(activeCtx, processedCtx) {\n    this.cache.set(activeCtx, processedCtx);\n  }\n};\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: move `NQuads` to its own package\nmodule.exports = require('rdf-canonize').NQuads;\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isEmptyObject: _isEmptyObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSubject: _isSubject\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  getValues: _getValues,\n  validateTypeValue: _validateTypeValue\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param insideIndex true if the element is inside an index container,\n *          false if not.\n * @param typeScopedContext an optional type-scoped active context for\n *          expanding values of nodes that were expressed according to\n *          a type-scoped context.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n *\n * @return a Promise that resolves to the expanded value.\n */\napi.expand = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  insideList = false,\n  insideIndex = false,\n  typeScopedContext = null,\n  expansionMap = () => undefined\n}) => {\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  // disable framing if activeProperty is @default\n  if(activeProperty === '@default') {\n    options = Object.assign({}, options, {isFrame: false});\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists unless custom mapped\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true},\n        options) === '@graph')) {\n      const mapped = await expansionMap({\n        unmappedValue: element,\n        activeCtx,\n        activeProperty,\n        options,\n        insideList\n      });\n      if(mapped === undefined) {\n        return null;\n      }\n      return mapped;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue({activeCtx, activeProperty, value: element, options});\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    let rval = [];\n    const container = _getContextValue(\n      activeCtx, activeProperty, '@container') || [];\n    insideList = insideList || container.includes('@list');\n    for(let i = 0; i < element.length; ++i) {\n      // expand element\n      let e = await api.expand({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        expansionMap,\n        insideIndex,\n        typeScopedContext\n      });\n      if(insideList && _isArray(e)) {\n        e = {'@list': e};\n      }\n\n      if(e === null) {\n        e = await expansionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options,\n          expandedParent: rval,\n          insideList\n        });\n        if(e === undefined) {\n          continue;\n        }\n      }\n\n      if(_isArray(e)) {\n        rval = rval.concat(e);\n      } else {\n        rval.push(e);\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // first, expand the active property\n  const expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n\n  // Get any property-scoped context for activeProperty\n  const propertyScopedCtx =\n    _getContextValue(activeCtx, activeProperty, '@context');\n\n  // second, determine if any type-scoped context should be reverted; it\n  // should only be reverted when the following are all true:\n  // 1. `element` is not a value or subject reference\n  // 2. `insideIndex` is false\n  typeScopedContext = typeScopedContext ||\n    (activeCtx.previousContext ? activeCtx : null);\n  let keys = Object.keys(element).sort();\n  let mustRevert = !insideIndex;\n  if(mustRevert && typeScopedContext && keys.length <= 2 &&\n    !keys.includes('@context')) {\n    for(const key of keys) {\n      const expandedProperty = _expandIri(\n        typeScopedContext, key, {vocab: true}, options);\n      if(expandedProperty === '@value') {\n        // value found, ensure type-scoped context is used to expand it\n        mustRevert = false;\n        activeCtx = typeScopedContext;\n        break;\n      }\n      if(expandedProperty === '@id' && keys.length === 1) {\n        // subject reference found, do not revert\n        mustRevert = false;\n        break;\n      }\n    }\n  }\n\n  if(mustRevert) {\n    // revert type scoped context\n    activeCtx = activeCtx.revertToPreviousContext();\n  }\n\n  // apply property-scoped context after reverting term-scoped context\n  if(!_isUndefined(propertyScopedCtx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: propertyScopedCtx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = await _processContext(\n      {activeCtx, localCtx: element['@context'], options});\n  }\n\n  // set the type-scoped context to the context on input, for use later\n  typeScopedContext = activeCtx;\n\n  // Remember the first key found expanding to @type\n  let typeKey = null;\n\n  // look for scoped contexts on `@type`\n  for(const key of keys) {\n    const expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n    if(expandedProperty === '@type') {\n      // set scoped contexts from @type\n      // avoid sorting if possible\n      typeKey = typeKey || key;\n      const value = element[key];\n      const types =\n        Array.isArray(value) ?\n          (value.length > 1 ? value.slice().sort() : value) : [value];\n      for(const type of types) {\n        const ctx = _getContextValue(typeScopedContext, type, '@context');\n        if(!_isUndefined(ctx)) {\n          activeCtx = await _processContext({\n            activeCtx,\n            localCtx: ctx,\n            options,\n            propagate: false\n          });\n        }\n      }\n    }\n  }\n\n  // process each key and value in element, ignoring @nest content\n  let rval = {};\n  await _expandObject({\n    activeCtx,\n    activeProperty,\n    expandedActiveProperty,\n    element,\n    expandedParent: rval,\n    options,\n    insideList,\n    typeKey,\n    typeScopedContext,\n    expansionMap});\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  let count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && ('@language' in rval || '@direction' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and either \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    let validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if('@direction' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and either \"@type\" ' +\n        'or either or both \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    const values = rval['@value'] === null ? [] : _asArray(rval['@value']);\n    const types = _getValues(rval, '@type');\n\n    // drop null @values unless custom mapped\n    if(_processingMode(activeCtx, 1.1) && types.includes('@json') &&\n      types.length === 1) {\n      // Any value of @value is okay if @type: @json\n    } else if(values.length === 0) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    } else if(!values.every(v => (_isString(v) || _isEmptyObject(v))) &&\n      '@language' in rval) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if(!types.every(t =>\n      (_isAbsoluteIri(t) && !(_isString(t) && t.indexOf('_:') === 0) ||\n      _isEmptyObject(t)))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language unless custom mapped\n    const mapped = await expansionMap(rval, {\n      unmappedValue: rval,\n      activeCtx,\n      activeProperty,\n      element,\n      options,\n      insideList\n    });\n    if(mapped !== undefined) {\n      rval = mapped;\n    } else {\n      rval = null;\n    }\n  }\n\n  // drop certain top-level objects that do not occur in lists, unless custom\n  // mapped\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expand each key and value of element adding to result\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element.\n * @param expandedActiveProperty the expansion of activeProperty\n * @param element the element to expand.\n * @param expandedParent the expanded result into which to add values.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param typeKey first key found expanding to @type.\n * @param typeScopedContext the context before reverting.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n */\nasync function _expandObject({\n  activeCtx,\n  activeProperty,\n  expandedActiveProperty,\n  element,\n  expandedParent,\n  options = {},\n  insideList,\n  typeKey,\n  typeScopedContext,\n  expansionMap\n}) {\n  const keys = Object.keys(element).sort();\n  const nests = [];\n  let unexpandedValue;\n\n  // Figure out if this is the type for a JSON literal\n  const isJsonType = element[typeKey] &&\n    _expandIri(activeCtx,\n      (_isArray(element[typeKey]) ? element[typeKey][0] : element[typeKey]),\n      {vocab: true}, options) === '@json';\n\n  for(const key of keys) {\n    let value = element[key];\n    let expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    let expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n\n    // drop non-absolute IRI keys that aren't keywords unless custom mapped\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      // TODO: use `await` to support async\n      expandedProperty = expansionMap({\n        unmappedProperty: key,\n        activeCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        value,\n        expandedParent\n      });\n      if(expandedProperty === undefined) {\n        continue;\n      }\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value});\n      }\n      if(expandedProperty in expandedParent &&\n         expandedProperty !== '@included' &&\n         expandedProperty !== '@type') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id') {\n      if(!_isString(value)) {\n        if(!options.isFrame) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value must a string.',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n        if(_isObject(value)) {\n          // empty object is a wildcard\n          if(!_isEmptyObject(value)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else if(_isArray(value)) {\n          if(!value.every(v => _isString(v))) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n            'of strings, if framing',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@id',\n        _asArray(value).map(v =>\n          _isString(v) ? _expandIri(activeCtx, v, {base: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    if(expandedProperty === '@type') {\n      // if framing, can be a default object, but need to expand\n      // key to determine that\n      if(_isObject(value)) {\n        value = Object.fromEntries(Object.entries(value).map(([k, v]) => [\n          _expandIri(typeScopedContext, k, {vocab: true}),\n          _asArray(v).map(vv =>\n            _expandIri(typeScopedContext, vv, {base: true, vocab: true})\n          )\n        ]));\n      }\n      _validateTypeValue(value, options.isFrame);\n      _addValue(\n        expandedParent, '@type',\n        _asArray(value).map(v =>\n          _isString(v) ?\n            _expandIri(typeScopedContext, v,\n              {base: true, vocab: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // Included blocks are treated as an array of separate object nodes sharing\n    // the same referencing active_property.\n    // For 1.0, it is skipped as are other unknown keywords\n    if(expandedProperty === '@included' && _processingMode(activeCtx, 1.1)) {\n      const includedResult = _asArray(await api.expand({\n        activeCtx,\n        activeProperty,\n        element: value,\n        options,\n        expansionMap\n      }));\n\n      // Expanded values must be node objects\n      if(!includedResult.every(v => _isSubject(v))) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; ' +\n          'values of @included must expand to node objects.',\n          'jsonld.SyntaxError', {code: 'invalid @included value', value});\n      }\n\n      _addValue(\n        expandedParent, '@included', includedResult, {propertyIsArray: true});\n      continue;\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value});\n    }\n\n    if(expandedProperty === '@value') {\n      // capture value for later\n      // \"colliding keywords\" check prevents this from being set twice\n      unexpandedValue = value;\n      if(isJsonType && _processingMode(activeCtx, 1.1)) {\n        // no coercion to array, and retain all values\n        expandedParent['@value'] = value;\n      } else {\n        _addValue(\n          expandedParent, '@value', value, {propertyIsArray: options.isFrame});\n      }\n      continue;\n    }\n\n    // @language must be a string\n    // it should match BCP47\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value});\n      }\n      // ensure language value is lowercase\n      value = _asArray(value).map(v => _isString(v) ? v.toLowerCase() : v);\n\n      // ensure language tag matches BCP47\n      for(const lang of value) {\n        if(_isString(lang) && !lang.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${lang}`);\n        }\n      }\n\n      _addValue(\n        expandedParent, '@language', value, {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @direction must be \"ltr\" or \"rtl\"\n    if(expandedProperty === '@direction') {\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@direction\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', value});\n      }\n\n      value = _asArray(value);\n\n      // ensure direction is \"ltr\" or \"rtl\"\n      for(const dir of value) {\n        if(_isString(dir) && dir !== 'ltr' && dir !== 'rtl') {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@direction\" must be \"ltr\" or \"rtl\".',\n            'jsonld.SyntaxError',\n            {code: 'invalid base direction', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@direction', value,\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value});\n      }\n      _addValue(expandedParent, '@index', value);\n      continue;\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value});\n      }\n\n      expandedValue = await api.expand({\n        activeCtx,\n        activeProperty:\n        '@reverse',\n        element: value,\n        options,\n        expansionMap\n      });\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(const property in expandedValue['@reverse']) {\n          _addValue(\n            expandedParent, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      let reverseMap = expandedParent['@reverse'] || null;\n      for(const property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = expandedParent['@reverse'] = {};\n        }\n        _addValue(reverseMap, property, [], {propertyIsArray: true});\n        const items = expandedValue[property];\n        for(let ii = 0; ii < items.length; ++ii) {\n          const item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          _addValue(reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    // nested keys\n    if(expandedProperty === '@nest') {\n      nests.push(key);\n      continue;\n    }\n\n    // use potential scoped context for key\n    let termCtx = activeCtx;\n    const ctx = _getContextValue(activeCtx, key, '@context');\n    if(!_isUndefined(ctx)) {\n      termCtx = await _processContext({\n        activeCtx,\n        localCtx: ctx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    const container = _getContextValue(termCtx, key, '@container') || [];\n\n    if(container.includes('@language') && _isObject(value)) {\n      const direction = _getContextValue(termCtx, key, '@direction');\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(termCtx, value, direction, options);\n    } else if(container.includes('@index') && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      const indexKey = _getContextValue(termCtx, key, '@index') || '@index';\n      const propertyIndex = indexKey !== '@index' &&\n        _expandIri(activeCtx, indexKey, {vocab: true}, options);\n\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey,\n        propertyIndex\n      });\n    } else if(container.includes('@id') && _isObject(value)) {\n      // handle id container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey: '@id'\n      });\n    } else if(container.includes('@type') && _isObject(value)) {\n      // handle type container (skip if value is not an object)\n      expandedValue = await _expandIndexMap({\n        // since container is `@type`, revert type scoped context when expanding\n        activeCtx: termCtx.revertToPreviousContext(),\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph: false,\n        indexKey: '@type'\n      });\n    } else {\n      // recurse into @list or @set\n      const isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        let nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: nextActiveProperty,\n          element: value,\n          options,\n          insideList: isList,\n          expansionMap\n        });\n      } else if(\n        _getContextValue(activeCtx, key, '@type') === '@json') {\n        expandedValue = {\n          '@type': '@json',\n          '@value': value\n        };\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: key,\n          element: value,\n          options,\n          insideList: false,\n          expansionMap\n        });\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      // TODO: use `await` to support async\n      expandedValue = expansionMap({\n        unmappedValue: value,\n        expandedProperty,\n        activeCtx: termCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        key,\n        expandedParent\n      });\n      if(expandedValue === undefined) {\n        continue;\n      }\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container.includes('@list')) {\n      // ensure expanded value in @list is an array\n      expandedValue = {'@list': _asArray(expandedValue)};\n    }\n\n    // convert expanded value to @graph if container specifies it\n    // and value is not, itself, a graph\n    // index cases handled above\n    if(container.includes('@graph') &&\n      !container.some(key => key === '@id' || key === '@index')) {\n      // ensure expanded values are arrays\n      expandedValue = _asArray(expandedValue)\n        .map(v => ({'@graph': _asArray(v)}));\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(termCtx.mappings.has(key) && termCtx.mappings.get(key).reverse) {\n      const reverseMap =\n        expandedParent['@reverse'] = expandedParent['@reverse'] || {};\n      expandedValue = _asArray(expandedValue);\n      for(let ii = 0; ii < expandedValue.length; ++ii) {\n        const item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        _addValue(reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // special keywords handled above\n    _addValue(expandedParent, expandedProperty, expandedValue, {\n      propertyIsArray: true\n    });\n  }\n\n  // @value must not be an object or an array (unless framing) or if @type is\n  // @json\n  if('@value' in expandedParent) {\n    if(expandedParent['@type'] === '@json' && _processingMode(activeCtx, 1.1)) {\n      // allow any value, to be verified when the object is fully expanded and\n      // the @type is @json.\n    } else if((_isObject(unexpandedValue) || _isArray(unexpandedValue)) &&\n      !options.isFrame) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: unexpandedValue});\n    }\n  }\n\n  // expand each nested key\n  for(const key of nests) {\n    const nestedValues = _isArray(element[key]) ? element[key] : [element[key]];\n    for(const nv of nestedValues) {\n      if(!_isObject(nv) || Object.keys(nv).some(k =>\n        _expandIri(activeCtx, k, {vocab: true}, options) === '@value')) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; nested value must be a node object.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @nest value', value: nv});\n      }\n      await _expandObject({\n        activeCtx,\n        activeProperty,\n        expandedActiveProperty,\n        element: nv,\n        expandedParent,\n        options,\n        insideList,\n        typeScopedContext,\n        typeKey,\n        expansionMap});\n    }\n  }\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandValue({activeCtx, activeProperty, value, options}) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  const expandedProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true}, options);\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true}, options);\n  }\n\n  // get type definition from context\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if((type === '@id' || expandedProperty === '@graph') && _isString(value)) {\n    return {'@id': _expandIri(activeCtx, value, {base: true}, options)};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab' && _isString(value)) {\n    return {\n      '@id': _expandIri(activeCtx, value, {vocab: true, base: true}, options)\n    };\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  const rval = {};\n\n  if(type && !['@id', '@vocab', '@none'].includes(type)) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    if(direction !== null) {\n      rval['@direction'] = direction;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(!['boolean', 'number', 'string'].includes(typeof value)) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Expands a language map.\n *\n * @param activeCtx the active context to use.\n * @param languageMap the language map to expand.\n * @param direction the direction to apply to values.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(activeCtx, languageMap, direction, options) {\n  const rval = [];\n  const keys = Object.keys(languageMap).sort();\n  for(const key of keys) {\n    const expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    let val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(const item of val) {\n      if(item === null) {\n        // null values are allowed (8.5) but ignored (3.1)\n        continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap});\n      }\n      const val = {'@value': item};\n      if(expandedKey !== '@none') {\n        val['@language'] = key.toLowerCase();\n      }\n      if(direction) {\n        val['@direction'] = direction;\n      }\n      rval.push(val);\n    }\n  }\n  return rval;\n}\n\nasync function _expandIndexMap(\n  {activeCtx, options, activeProperty, value, expansionMap, asGraph,\n    indexKey, propertyIndex}) {\n  const rval = [];\n  const keys = Object.keys(value).sort();\n  const isTypeIndex = indexKey === '@type';\n  for(let key of keys) {\n    // if indexKey is @type, there may be a context defined for it\n    if(isTypeIndex) {\n      const ctx = _getContextValue(activeCtx, key, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          propagate: false,\n          options\n        });\n      }\n    }\n\n    let val = value[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n\n    val = await api.expand({\n      activeCtx,\n      activeProperty,\n      element: val,\n      options,\n      insideList: false,\n      insideIndex: true,\n      expansionMap\n    });\n\n    // expand for @type, but also for @none\n    let expandedKey;\n    if(propertyIndex) {\n      if(key === '@none') {\n        expandedKey = '@none';\n      } else {\n        expandedKey = _expandValue(\n          {activeCtx, activeProperty: indexKey, value: key, options});\n      }\n    } else {\n      expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    }\n\n    if(indexKey === '@id') {\n      // expand document relative\n      key = _expandIri(activeCtx, key, {base: true}, options);\n    } else if(isTypeIndex) {\n      key = expandedKey;\n    }\n\n    for(let item of val) {\n      // If this is also a @graph container, turn items into graphs\n      if(asGraph && !_isGraph(item)) {\n        item = {'@graph': [item]};\n      }\n      if(indexKey === '@type') {\n        if(expandedKey === '@none') {\n          // ignore @none\n        } else if(item['@type']) {\n          item['@type'] = [key].concat(item['@type']);\n        } else {\n          item['@type'] = [key];\n        }\n      } else if(_isValue(item) &&\n        !['@language', '@type', '@index'].includes(indexKey)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; Attempt to add illegal key to value ' +\n          `object: \"${indexKey}\".`,\n          'jsonld.SyntaxError',\n          {code: 'invalid value object', value: item});\n      } else if(propertyIndex) {\n        // index is a property to be expanded, and values interpreted for that\n        // property\n        if(expandedKey !== '@none') {\n          // expand key as a value\n          _addValue(item, propertyIndex, expandedKey, {\n            propertyIsArray: true,\n            prependValue: true\n          });\n        }\n      } else if(expandedKey !== '@none' && !(indexKey in item)) {\n        item[indexKey] = key;\n      }\n      rval.push(item);\n    }\n  }\n  return rval;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\n\n// constants\nconst {\n  // RDF,\n  RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  // RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n *\n * @return a Promise that resolves to the JSON-LD output.\n */\napi.fromRDF = async (\n  dataset,\n  {\n    useRdfType = false,\n    useNativeTypes = false,\n    rdfDirection = null\n  }\n) => {\n  const defaultGraph = {};\n  const graphMap = {'@default': defaultGraph};\n  const referencedOnce = {};\n\n  for(const quad of dataset) {\n    // TODO: change 'name' to 'graph'\n    const name = (quad.graph.termType === 'DefaultGraph') ?\n      '@default' : quad.graph.value;\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n\n    const nodeMap = graphMap[name];\n\n    // get subject, predicate, object\n    const s = quad.subject.value;\n    const p = quad.predicate.value;\n    const o = quad.object;\n\n    if(!(s in nodeMap)) {\n      nodeMap[s] = {'@id': s};\n    }\n    const node = nodeMap[s];\n\n    const objectIsNode = o.termType.endsWith('Node');\n    if(objectIsNode && !(o.value in nodeMap)) {\n      nodeMap[o.value] = {'@id': o.value};\n    }\n\n    if(p === RDF_TYPE && !useRdfType && objectIsNode) {\n      util.addValue(node, '@type', o.value, {propertyIsArray: true});\n      continue;\n    }\n\n    const value = _RDFToObject(o, useNativeTypes, rdfDirection);\n    util.addValue(node, p, value, {propertyIsArray: true});\n\n    // object may be an RDF list/partial list node but we can't know easily\n    // until all triples are read\n    if(objectIsNode) {\n      if(o.value === RDF_NIL) {\n        // track rdf:nil uniquely per graph\n        const object = nodeMap[o.value];\n        if(!('usages' in object)) {\n          object.usages = [];\n        }\n        object.usages.push({\n          node,\n          property: p,\n          value\n        });\n      } else if(o.value in referencedOnce) {\n        // object referenced more than once\n        referencedOnce[o.value] = false;\n      } else {\n        // keep track of single reference\n        referencedOnce[o.value] = {\n          node,\n          property: p,\n          value\n        };\n      }\n    }\n  }\n\n  /*\n  for(let name in dataset) {\n    const graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    const nodeMap = graphMap[name];\n    for(let ti = 0; ti < graph.length; ++ti) {\n      const triple = graph[ti];\n\n      // get subject, predicate, object\n      const s = triple.subject.value;\n      const p = triple.predicate.value;\n      const o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      const node = nodeMap[s];\n\n      const objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !useRdfType && objectIsId) {\n        util.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      const value = _RDFToObject(o, useNativeTypes);\n      util.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          const object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }*/\n\n  // convert linked lists to @list arrays\n  for(const name in graphMap) {\n    const graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    const nil = graphObject[RDF_NIL];\n    if(!nil.usages) {\n      continue;\n    }\n    for(let usage of nil.usages) {\n      let node = usage.node;\n      let property = usage.property;\n      let head = usage.value;\n      const list = [];\n      const listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      let nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        types.isObject(referencedOnce[node['@id']]) &&\n        types.isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        types.isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 ||\n          (nodeKeyCount === 4 && types.isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(!graphTypes.isBlankNode(node)) {\n          break;\n        }\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(const listNode of listNodes) {\n        delete graphObject[listNode];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  const result = [];\n  const subjects = Object.keys(defaultGraph).sort();\n  for(const subject of subjects) {\n    const node = defaultGraph[subject];\n    if(subject in graphMap) {\n      const graph = node['@graph'] = [];\n      const graphObject = graphMap[subject];\n      const graphSubjects = Object.keys(graphObject).sort();\n      for(const graphSubject of graphSubjects) {\n        const node = graphObject[graphSubject];\n        // only add full subjects to top-level\n        if(!graphTypes.isSubjectReference(node)) {\n          graph.push(node);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!graphTypes.isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes, rdfDirection) {\n  // convert NamedNode/BlankNode object to JSON-LD\n  if(o.termType.endsWith('Node')) {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  const rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    let type = o.datatype.value;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    if(type === RDF_JSON_LITERAL) {\n      type = '@json';\n      try {\n        rval['@value'] = JSON.parse(rval['@value']);\n      } catch(e) {\n        throw new JsonLdError(\n          'JSON literal could not be parsed.',\n          'jsonld.InvalidJsonLiteral',\n          {code: 'invalid JSON literal', value: rval['@value'], cause: e});\n      }\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(types.isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          const i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if(![XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING].includes(type)) {\n        rval['@type'] = type;\n      }\n    } else if(rdfDirection === 'i18n-datatype' &&\n      type.startsWith('https://www.w3.org/ns/i18n#')) {\n      const [, language, direction] = type.split(/[#_]/);\n      if(language.length > 0) {\n        rval['@language'] = language;\n        if(!language.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${language}`);\n        }\n      }\n      rval['@direction'] = direction;\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {createNodeMap} = require('./nodeMap');\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst jsonCanonicalize = require('canonicalize');\nconst types = require('./types');\nconst util = require('./util');\n\nconst {\n  // RDF,\n  // RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\napi.toRDF = (input, options) => {\n  // create node map for default graph (and any named graphs)\n  const issuer = new util.IdentifierIssuer('_:b');\n  const nodeMap = {'@default': {}};\n  createNodeMap(input, nodeMap, '@default', issuer);\n\n  const dataset = [];\n  const graphNames = Object.keys(nodeMap).sort();\n  for(const graphName of graphNames) {\n    let graphTerm;\n    if(graphName === '@default') {\n      graphTerm = {termType: 'DefaultGraph', value: ''};\n    } else if(_isAbsoluteIri(graphName)) {\n      if(graphName.startsWith('_:')) {\n        graphTerm = {termType: 'BlankNode'};\n      } else {\n        graphTerm = {termType: 'NamedNode'};\n      }\n      graphTerm.value = graphName;\n    } else {\n      // skip relative IRIs (not valid RDF)\n      continue;\n    }\n    _graphToRDF(dataset, nodeMap[graphName], graphTerm, issuer, options);\n  }\n\n  return dataset;\n};\n\n/**\n * Adds RDF quads for a particular graph to the given dataset.\n *\n * @param dataset the dataset to append RDF quads to.\n * @param graph the graph to create RDF quads for.\n * @param graphTerm the graph term for each quad.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(dataset, graph, graphTerm, issuer, options) {\n  const ids = Object.keys(graph).sort();\n  for(const id of ids) {\n    const node = graph[id];\n    const properties = Object.keys(node).sort();\n    for(let property of properties) {\n      const items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(isKeyword(property)) {\n        continue;\n      }\n\n      for(const item of items) {\n        // RDF subject\n        const subject = {\n          termType: id.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: id\n        };\n\n        // skip relative IRI subjects (not valid RDF)\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        const predicate = {\n          termType: property.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: property\n        };\n\n        // skip relative IRI predicates (not valid RDF)\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.termType === 'BlankNode' &&\n          !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert list, value or node object to triple\n        const object =\n          _objectToRDF(item, issuer, dataset, graphTerm, options.rdfDirection);\n        // skip null objects (they are relative IRIs)\n        if(object) {\n          dataset.push({\n            subject,\n            predicate,\n            object,\n            graph: graphTerm\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF quads\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the array of quads to append to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the head of the list.\n */\nfunction _listToRDF(list, issuer, dataset, graphTerm, rdfDirection) {\n  const first = {termType: 'NamedNode', value: RDF_FIRST};\n  const rest = {termType: 'NamedNode', value: RDF_REST};\n  const nil = {termType: 'NamedNode', value: RDF_NIL};\n\n  const last = list.pop();\n  // Result is the head of the list\n  const result = last ? {termType: 'BlankNode', value: issuer.getId()} : nil;\n  let subject = result;\n\n  for(const item of list) {\n    const object = _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection);\n    const next = {termType: 'BlankNode', value: issuer.getId()};\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: next,\n      graph: graphTerm\n    });\n    subject = next;\n  }\n\n  // Tail of list\n  if(last) {\n    const object = _objectToRDF(last, issuer, dataset, graphTerm, rdfDirection);\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: nil,\n      graph: graphTerm\n    });\n  }\n\n  return result;\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string,\n * node object to an RDF resource, or adds a list.\n *\n * @param item the JSON-LD value or node object.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the dataset to append RDF quads to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection) {\n  const object = {};\n\n  // convert value object to RDF\n  if(graphTypes.isValue(item)) {\n    object.termType = 'Literal';\n    object.value = undefined;\n    object.datatype = {\n      termType: 'NamedNode'\n    };\n    let value = item['@value'];\n    const datatype = item['@type'] || null;\n\n    // convert to XSD/JSON datatypes as appropriate\n    if(datatype === '@json') {\n      object.value = jsonCanonicalize(value);\n      object.datatype.value = RDF_JSON_LITERAL;\n    } else if(types.isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype.value = datatype || XSD_BOOLEAN;\n    } else if(types.isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!types.isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype.value = datatype || XSD_DOUBLE;\n    } else if(types.isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype.value = datatype || XSD_INTEGER;\n    } else if(rdfDirection === 'i18n-datatype' &&\n      '@direction' in item) {\n      const datatype = 'https://www.w3.org/ns/i18n#' +\n        (item['@language'] || '') +\n        `_${item['@direction']}`;\n      object.datatype.value = datatype;\n      object.value = value;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype.value = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype.value = datatype || XSD_STRING;\n    }\n  } else if(graphTypes.isList(item)) {\n    const _list =\n      _listToRDF(item['@list'], issuer, dataset, graphTerm, rdfDirection);\n    object.termType = _list.termType;\n    object.value = _list.value;\n  } else {\n    // convert string/node object to RDF\n    const id = types.isObject(item) ? item['@id'] : item;\n    object.termType = id.startsWith('_:') ? 'BlankNode' : 'NamedNode';\n    object.value = id;\n  }\n\n  // skip relative IRIs, not valid RDF\n  if(object.termType === 'NamedNode' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n","/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (object === null || typeof object !== 'object' || object.toJSON != null) {\n    return JSON.stringify(object);\n  }\n\n  if (Array.isArray(object)) {\n    return '[' + object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return t + comma + serialize(value);\n    }, '') + ']';\n  }\n\n  return '{' + Object.keys(object).sort().reduce((t, cv, ci) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return t + comma + serialize(cv) + ':' + serialize(object[cv]);\n  }, '') + '}';\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst url = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst {\n  createNodeMap: _createNodeMap,\n  mergeNodeMapGraphs: _mergeNodeMapGraphs\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD `merged` framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\napi.frameMergedOrDefault = (input, frame, options) => {\n  // create framing state\n  const state = {\n    options,\n    embedded: false,\n    graph: '@default',\n    graphMap: {'@default': {}},\n    subjectStack: [],\n    link: {},\n    bnodeMap: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  const issuer = new util.IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphMap, '@default', issuer);\n  if(options.merged) {\n    state.graphMap['@merged'] = _mergeNodeMapGraphs(state.graphMap);\n    state.graph = '@merged';\n  }\n  state.subjects = state.graphMap[state.graph];\n\n  // frame the subjects\n  const framed = [];\n  api.frame(state, Object.keys(state.subjects).sort(), frame, framed);\n\n  // If pruning blank nodes, find those to prune\n  if(options.pruneBlankNodeIdentifiers) {\n    // remove all blank nodes appearing only once, done in compaction\n    options.bnodesToClear =\n      Object.keys(state.bnodeMap).filter(id => state.bnodeMap[id].length === 1);\n  }\n\n  // remove @preserve from results\n  options.link = {};\n  return _cleanupPreserve(framed, options);\n};\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\napi.frame = (state, subjects, frame, parent, property = null) => {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  const options = state.options;\n  const flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // get link for current graph\n  if(!state.link.hasOwnProperty(state.graph)) {\n    state.link[state.graph] = {};\n  }\n  const link = state.link[state.graph];\n\n  // filter out subjects that match the frame\n  const matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  const ids = Object.keys(matches).sort();\n  for(const id of ids) {\n    const subject = matches[id];\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {[state.graph]: {}};\n    } else {\n      state.uniqueEmbeds[state.graph] = state.uniqueEmbeds[state.graph] || {};\n    }\n\n    if(flags.embed === '@link' && id in link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, link[id]);\n      continue;\n    }\n\n    // start output for subject\n    const output = {'@id': id};\n    if(id.indexOf('_:') === 0) {\n      util.addValue(state.bnodeMap, id, output, {propertyIsArray: true});\n    }\n    link[id] = output;\n\n    // validate @embed\n    if((flags.embed === '@first' || flags.embed === '@last') && state.is11) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n\n    if(!state.embedded && state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      // skip adding this node object to the top level, as it was\n      // already included in another node object\n      continue;\n    }\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(state.embedded &&\n      (flags.embed === '@never' ||\n      _createsCircularReference(subject, state.graph, state.subjectStack))) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the first (or once) should be embedded\n    if(state.embedded &&\n       (flags.embed == '@first' || flags.embed == '@once') &&\n       state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds[state.graph]) {\n        _removeEmbed(state, id);\n      }\n    }\n\n    state.uniqueEmbeds[state.graph][id] = {parent, property};\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push({subject, graph: state.graph});\n\n    // subject is also the name of a graph\n    if(id in state.graphMap) {\n      let recurse = false;\n      let subframe = null;\n      if(!('@graph' in frame)) {\n        recurse = state.graph !== '@merged';\n        subframe = {};\n      } else {\n        subframe = frame['@graph'][0];\n        recurse = !(id === '@merged' || id === '@default');\n        if(!types.isObject(subframe)) {\n          subframe = {};\n        }\n      }\n\n      if(recurse) {\n        // recurse into graph\n        api.frame(\n          {...state, graph: id, embedded: false},\n          Object.keys(state.graphMap[id]).sort(), [subframe], output, '@graph');\n      }\n    }\n\n    // if frame has @included, recurse over its sub-frame\n    if('@included' in frame) {\n      api.frame(\n        {...state, embedded: false},\n        subjects, frame['@included'], output, '@included');\n    }\n\n    // iterate over subject properties\n    for(const prop of Object.keys(subject).sort()) {\n      // copy keywords to output\n      if(isKeyword(prop)) {\n        output[prop] = util.clone(subject[prop]);\n\n        if(prop === '@type') {\n          // count bnode values of @type\n          for(const type of subject['@type']) {\n            if(type.indexOf('_:') === 0) {\n              util.addValue(\n                state.bnodeMap, type, output, {propertyIsArray: true});\n            }\n          }\n        }\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      for(const o of subject[prop]) {\n        const subframe = (prop in frame ?\n          frame[prop] : _createImplicitFrame(flags));\n\n        // recurse into list\n        if(graphTypes.isList(o)) {\n          const subframe =\n            (frame[prop] && frame[prop][0] && frame[prop][0]['@list']) ?\n              frame[prop][0]['@list'] :\n              _createImplicitFrame(flags);\n\n          // add empty list\n          const list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          const src = o['@list'];\n          for(const oo of src) {\n            if(graphTypes.isSubjectReference(oo)) {\n              // recurse into subject reference\n              api.frame(\n                {...state, embedded: true},\n                [oo['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', util.clone(oo));\n            }\n          }\n        } else if(graphTypes.isSubjectReference(o)) {\n          // recurse into subject reference\n          api.frame(\n            {...state, embedded: true},\n            [o['@id']], subframe, output, prop);\n        } else if(_valueMatch(subframe[0], o)) {\n          // include other values, if they match\n          _addFrameOutput(output, prop, util.clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    for(const prop of Object.keys(frame).sort()) {\n      // skip keywords\n      if(prop === '@type') {\n        if(!types.isObject(frame[prop][0]) ||\n           !('@default' in frame[prop][0])) {\n          continue;\n        }\n        // allow through default types\n      } else if(isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      const next = frame[prop][0] || {};\n      const omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        let preserve = '@null';\n        if('@default' in next) {\n          preserve = util.clone(next['@default']);\n        }\n        if(!types.isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // if embed reverse values by finding nodes having this subject as a value\n    // of the associated property\n    for(const reverseProp of Object.keys(frame['@reverse'] || {}).sort()) {\n      const subframe = frame['@reverse'][reverseProp];\n      for(const subject of Object.keys(state.subjects)) {\n        const nodeValues =\n          util.getValues(state.subjects[subject], reverseProp);\n        if(nodeValues.some(v => v['@id'] === id)) {\n          // node has property referencing this subject, recurse\n          output['@reverse'] = output['@reverse'] || {};\n          util.addValue(\n            output['@reverse'], reverseProp, [], {propertyIsArray: true});\n          api.frame(\n            {...state, embedded: true},\n            [subject], subframe, output['@reverse'][reverseProp],\n            property);\n        }\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n};\n\n/**\n * Replace `@null` with `null`, removing it from arrays.\n *\n * @param input the framed, compacted output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\napi.cleanupNull = (input, options) => {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    const noNulls = input.map(v => api.cleanupNull(v, options));\n    return noNulls.filter(v => v); // removes nulls from array\n  }\n\n  if(input === '@null') {\n    return null;\n  }\n\n  if(types.isObject(input)) {\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    for(const key in input) {\n      input[key] = api.cleanupNull(input[key], options);\n    }\n  }\n  return input;\n};\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  const frame = {};\n  for(const key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param graph the graph the subject to embed is in.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, graph, subjectStack) {\n  for(let i = subjectStack.length - 1; i >= 0; --i) {\n    const subject = subjectStack[i];\n    if(subject.graph === graph &&\n      subject.subject['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  const flag = '@' + name;\n  let rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@once';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link' &&\n      rval !== '@first' && rval !== '@last' && rval !== '@once') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!types.isArray(frame) || frame.length !== 1 || !types.isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame});\n  }\n\n  if('@id' in frame[0]) {\n    for(const id of util.asArray(frame[0]['@id'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(id) || url.isAbsolute(id)) ||\n        (types.isString(id) && id.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @id in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n\n  if('@type' in frame[0]) {\n    for(const type of util.asArray(frame[0]['@type'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(type) || url.isAbsolute(type)) ||\n        (types.isString(type) && type.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @type in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  const rval = {};\n  for(const id of subjects) {\n    const subject = state.graphMap[state.graph][id];\n    if(_filterSubject(state, subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * Matches either based on explicit type inclusion where the node has any\n * type listed in the frame. If the frame has empty types defined matches\n * nodes not having a @type. If the frame has a type of {} defined matches\n * nodes having any type defined.\n *\n * Otherwise, does duck typing, where the node must have all of the\n * properties defined in the frame.\n *\n * @param state the current framing state.\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(state, subject, frame, flags) {\n  // check ducktype\n  let wildcard = true;\n  let matchesSome = false;\n\n  for(const key in frame) {\n    let matchThis = false;\n    const nodeValues = util.getValues(subject, key);\n    const isEmpty = util.getValues(frame, key).length === 0;\n\n    if(key === '@id') {\n      // match on no @id or any matching @id, including wildcard\n      if(types.isEmptyObject(frame['@id'][0] || {})) {\n        matchThis = true;\n      } else if(frame['@id'].length >= 0) {\n        matchThis = frame['@id'].includes(nodeValues[0]);\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(key === '@type') {\n      // check @type (object value means 'any' type,\n      // fall through to ducktyping)\n      wildcard = false;\n      if(isEmpty) {\n        if(nodeValues.length > 0) {\n          // don't match on no @type\n          return false;\n        }\n        matchThis = true;\n      } else if(frame['@type'].length === 1 &&\n        types.isEmptyObject(frame['@type'][0])) {\n        // match on wildcard @type if there is a type\n        matchThis = nodeValues.length > 0;\n      } else {\n        // match on a specific @type\n        for(const type of frame['@type']) {\n          if(types.isObject(type) && '@default' in type) {\n            // match on default object\n            matchThis = true;\n          } else {\n            matchThis = matchThis || nodeValues.some(tt => tt === type);\n          }\n        }\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(isKeyword(key)) {\n      continue;\n    } else {\n      // Force a copy of this frame entry so it can be manipulated\n      const thisFrame = util.getValues(frame, key)[0];\n      let hasDefault = false;\n      if(thisFrame) {\n        _validateFrame([thisFrame]);\n        hasDefault = '@default' in thisFrame;\n      }\n\n      // no longer a wildcard pattern if frame has any non-keyword properties\n      wildcard = false;\n\n      // skip, but allow match if node has no value for property, and frame has\n      // a default value\n      if(nodeValues.length === 0 && hasDefault) {\n        continue;\n      }\n\n      // if frame value is empty, don't match if subject has any value\n      if(nodeValues.length > 0 && isEmpty) {\n        return false;\n      }\n\n      if(thisFrame === undefined) {\n        // node does not match if values is not empty and the value of property\n        // in frame is match none.\n        if(nodeValues.length > 0) {\n          return false;\n        }\n        matchThis = true;\n      } else {\n        if(graphTypes.isList(thisFrame)) {\n          const listValue = thisFrame['@list'][0];\n          if(graphTypes.isList(nodeValues[0])) {\n            const nodeListValues = nodeValues[0]['@list'];\n\n            if(graphTypes.isValue(listValue)) {\n              // match on any matching value\n              matchThis = nodeListValues.some(lv => _valueMatch(listValue, lv));\n            } else if(graphTypes.isSubject(listValue) ||\n              graphTypes.isSubjectReference(listValue)) {\n              matchThis = nodeListValues.some(lv => _nodeMatch(\n                state, listValue, lv, flags));\n            }\n          }\n        } else if(graphTypes.isValue(thisFrame)) {\n          matchThis = nodeValues.some(nv => _valueMatch(thisFrame, nv));\n        } else if(graphTypes.isSubjectReference(thisFrame)) {\n          matchThis =\n            nodeValues.some(nv => _nodeMatch(state, thisFrame, nv, flags));\n        } else if(types.isObject(thisFrame)) {\n          matchThis = nodeValues.length > 0;\n        } else {\n          matchThis = false;\n        }\n      }\n    }\n\n    // all non-defaulted values must match if requireAll is set\n    if(!matchThis && flags.requireAll) {\n      return false;\n    }\n\n    matchesSome = matchesSome || matchThis;\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  const embeds = state.uniqueEmbeds[state.graph];\n  const embed = embeds[id];\n  const parent = embed.parent;\n  const property = embed.property;\n\n  // create reference to replace embed\n  const subject = {'@id': id};\n\n  // remove existing embed\n  if(types.isArray(parent)) {\n    // replace subject with reference\n    for(let i = 0; i < parent.length; ++i) {\n      if(util.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    const useArray = types.isArray(parent[property]);\n    util.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    util.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  const removeDependents = id => {\n    // get embed keys as a separate array to enable deleting keys in map\n    const ids = Object.keys(embeds);\n    for(const next of ids) {\n      if(next in embeds && types.isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Removes the @preserve keywords from expanded result of framing.\n *\n * @param input the framed, framed output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\nfunction _cleanupPreserve(input, options) {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    return input.map(value => _cleanupPreserve(value, options));\n  }\n\n  if(types.isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      return input['@preserve'][0];\n    }\n\n    // skip @values\n    if(graphTypes.isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(graphTypes.isList(input)) {\n      input['@list'] = _cleanupPreserve(input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(const prop in input) {\n      // potentially remove the id, if it is an unreference bnode\n      if(prop === '@id' && options.bnodesToClear.includes(input[prop])) {\n        delete input['@id'];\n        continue;\n      }\n\n      input[prop] = _cleanupPreserve(input[prop], options);\n    }\n  }\n  return input;\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(types.isObject(parent)) {\n    util.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Node matches if it is a node, and matches the pattern as a frame.\n *\n * @param state the current framing state.\n * @param pattern used to match value\n * @param value to check\n * @param flags the frame flags.\n */\nfunction _nodeMatch(state, pattern, value, flags) {\n  if(!('@id' in value)) {\n    return false;\n  }\n  const nodeObject = state.subjects[value['@id']];\n  return nodeObject && _filterSubject(state, nodeObject, pattern, flags);\n}\n\n/**\n * Value matches if it is a value and matches the value pattern\n *\n * * `pattern` is empty\n * * @values are the same, or `pattern[@value]` is a wildcard, and\n * * @types are the same or `value[@type]` is not null\n *   and `pattern[@type]` is `{}`, or `value[@type]` is null\n *   and `pattern[@type]` is null or `[]`, and\n * * @languages are the same or `value[@language]` is not null\n *   and `pattern[@language]` is `{}`, or `value[@language]` is null\n *   and `pattern[@language]` is null or `[]`.\n *\n * @param pattern used to match value\n * @param value to check\n */\nfunction _valueMatch(pattern, value) {\n  const v1 = value['@value'];\n  const t1 = value['@type'];\n  const l1 = value['@language'];\n  const v2 = pattern['@value'] ?\n    (types.isArray(pattern['@value']) ?\n      pattern['@value'] : [pattern['@value']]) :\n    [];\n  const t2 = pattern['@type'] ?\n    (types.isArray(pattern['@type']) ?\n      pattern['@type'] : [pattern['@type']]) :\n    [];\n  const l2 = pattern['@language'] ?\n    (types.isArray(pattern['@language']) ?\n      pattern['@language'] : [pattern['@language']]) :\n    [];\n\n  if(v2.length === 0 && t2.length === 0 && l2.length === 0) {\n    return true;\n  }\n  if(!(v2.includes(v1) || types.isEmptyObject(v2[0]))) {\n    return false;\n  }\n  if(!(!t1 && t2.length === 0 || t2.includes(t1) || t1 &&\n    types.isEmptyObject(t2[0]))) {\n    return false;\n  }\n  if(!(!l1 && l2.length === 0 || l2.includes(l1) || l1 &&\n    types.isEmptyObject(l2[0]))) {\n    return false;\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSimpleGraph: _isSimpleGraph,\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  removeBase: _removeBase,\n  prependBase: _prependBase\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n * @param compactionMap the compaction map to use.\n *\n * @return a promise that resolves to the compacted value.\n */\napi.compact = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  compactionMap = () => undefined\n}) => {\n  // recursively compact array\n  if(_isArray(element)) {\n    let rval = [];\n    for(let i = 0; i < element.length; ++i) {\n      // compact, dropping any null values unless custom mapped\n      let compacted = await api.compact({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        compactionMap\n      });\n      if(compacted === null) {\n        compacted = await compactionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options\n        });\n        if(compacted === undefined) {\n          continue;\n        }\n      }\n      rval.push(compacted);\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.length === 0) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // use any scoped context on activeProperty\n  const ctx = _getContextValue(activeCtx, activeProperty, '@context');\n  if(!_isUndefined(ctx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: ctx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element &&\n      options.link.hasOwnProperty(element['@id'])) {\n      // check for a linked element to reuse\n      const linked = options.link[element['@id']];\n      for(let i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      const rval =\n        api.compactValue({activeCtx, activeProperty, value: element, options});\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(options.link.hasOwnProperty(element['@id']))) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // if expanded property is @list and we're contained within a list\n    // container, recursively compact this item to an array\n    if(_isList(element)) {\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.includes('@list')) {\n        return api.compact({\n          activeCtx,\n          activeProperty,\n          element: element['@list'],\n          options,\n          compactionMap\n        });\n      }\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    const insideReverse = (activeProperty === '@reverse');\n\n    const rval = {};\n\n    // original context before applying property-scoped and local contexts\n    const inputCtx = activeCtx;\n\n    // revert to previous context, if there is one,\n    // and element is not a value object or a node reference\n    if(!_isValue(element) && !_isSubjectReference(element)) {\n      activeCtx = activeCtx.revertToPreviousContext();\n    }\n\n    // apply property-scoped context after reverting term-scoped context\n    const propertyScopedCtx =\n      _getContextValue(inputCtx, activeProperty, '@context');\n    if(!_isUndefined(propertyScopedCtx)) {\n      activeCtx = await _processContext({\n        activeCtx,\n        localCtx: propertyScopedCtx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!options.link.hasOwnProperty(element['@id'])) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // apply any context defined on an alias of @type\n    // if key is @type and any compacted value is a term having a local\n    // context, overlay that context\n    let types = element['@type'] || [];\n    if(types.length > 1) {\n      types = Array.from(types).sort();\n    }\n    // find all type-scoped contexts based on current context, prior to\n    // updating it\n    const typeContext = activeCtx;\n    for(const type of types) {\n      const compactedType = api.compactIri(\n        {activeCtx: typeContext, iri: type, relativeTo: {vocab: true}});\n\n      // Use any type-scoped context defined on this value\n      const ctx = _getContextValue(inputCtx, compactedType, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          options,\n          propagate: false\n        });\n      }\n    }\n\n    // process element keys in order\n    const keys = Object.keys(element).sort();\n    for(const expandedProperty of keys) {\n      const expandedValue = element[expandedProperty];\n\n      // compact @id\n      if(expandedProperty === '@id') {\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: false},\n            base: options.base\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@id', relativeTo: {vocab: true}});\n\n        rval[alias] = compactedValue;\n        continue;\n      }\n\n      // compact @type(s)\n      if(expandedProperty === '@type') {\n        // resolve type values against previous context\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx: inputCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: true}\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@type', relativeTo: {vocab: true}});\n        const container = _getContextValue(\n          activeCtx, alias, '@container') || [];\n\n        // treat as array for @type if @container includes @set\n        const typeAsSet =\n          container.includes('@set') &&\n          _processingMode(activeCtx, 1.1);\n        const isArray =\n          typeAsSet || (_isArray(compactedValue) && expandedValue.length === 0);\n        _addValue(rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty: '@reverse',\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        // handle double-reversed properties\n        for(const compactedProperty in compactedValue) {\n          if(activeCtx.mappings.has(compactedProperty) &&\n            activeCtx.mappings.get(compactedProperty).reverse) {\n            const value = compactedValue[compactedProperty];\n            const container = _getContextValue(\n              activeCtx, compactedProperty, '@container') || [];\n            const useArray = (\n              container.includes('@set') || !options.compactArrays);\n            _addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          const alias = api.compactIri({\n            activeCtx,\n            iri: expandedProperty,\n            relativeTo: {vocab: true}\n          });\n          _addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      if(expandedProperty === '@preserve') {\n        // compact using activeProperty\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty,\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        if(!(_isArray(compactedValue) && compactedValue.length === 0)) {\n          _addValue(rval, expandedProperty, compactedValue);\n        }\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        const container = _getContextValue(\n          activeCtx, activeProperty, '@container') || [];\n        if(container.includes('@index')) {\n          continue;\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't\n      // @graph, @list, or @included\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        expandedProperty !== '@included' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n      if(!_isArray(expandedValue)) {\n        throw new JsonLdError(\n          'JSON-LD expansion error; expanded value must be an array.',\n          'jsonld.SyntaxError');\n      }\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedValue,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n        _addValue(\n          nestResult, itemActiveProperty, expandedValue, {\n            propertyIsArray: true\n          });\n      }\n\n      // recusively process array values\n      for(const expandedItem of expandedValue) {\n        // compact property and get container type\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedItem,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n\n        // if itemActiveProperty is a @nest property, add values to nestResult,\n        // otherwise rval\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n\n        const container = _getContextValue(\n          activeCtx, itemActiveProperty, '@container') || [];\n\n        // get simple @graph or @list value if appropriate\n        const isGraph = _isGraph(expandedItem);\n        const isList = _isList(expandedItem);\n        let inner;\n        if(isList) {\n          inner = expandedItem['@list'];\n        } else if(isGraph) {\n          inner = expandedItem['@graph'];\n        }\n\n        // recursively compact expanded item\n        let compactedItem = await api.compact({\n          activeCtx,\n          activeProperty: itemActiveProperty,\n          element: (isList || isGraph) ? inner : expandedItem,\n          options,\n          compactionMap\n        });\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(!container.includes('@list')) {\n            // wrap using @list alias\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@list',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n          } else {\n            _addValue(nestResult, itemActiveProperty, compactedItem, {\n              valueIsArray: true,\n              allowDuplicate: true\n            });\n            continue;\n          }\n        }\n\n        // Graph object compaction cases\n        if(isGraph) {\n          if(container.includes('@graph') && (container.includes('@id') ||\n            container.includes('@index') && _isSimpleGraph(expandedItem))) {\n            // get or create the map object\n            let mapObject;\n            if(nestResult.hasOwnProperty(itemActiveProperty)) {\n              mapObject = nestResult[itemActiveProperty];\n            } else {\n              nestResult[itemActiveProperty] = mapObject = {};\n            }\n\n            // index on @id or @index or alias of @none\n            const key = (container.includes('@id') ?\n              expandedItem['@id'] : expandedItem['@index']) ||\n              api.compactIri({activeCtx, iri: '@none',\n                relativeTo: {vocab: true}});\n            // add compactedItem to map, using value of `@id` or a new blank\n            // node identifier\n\n            _addValue(\n              mapObject, key, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else if(container.includes('@graph') &&\n            _isSimpleGraph(expandedItem)) {\n            // container includes @graph but not @id or @index and value is a\n            // simple graph object add compact value\n            // if compactedItem contains multiple values, it is wrapped in\n            // `@included`\n            if(_isArray(compactedItem) && compactedItem.length > 1) {\n              compactedItem = {'@included': compactedItem};\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else {\n            // wrap using @graph alias, remove array if only one item and\n            // compactArrays not set\n            if(_isArray(compactedItem) && compactedItem.length === 1 &&\n              options.compactArrays) {\n              compactedItem = compactedItem[0];\n            }\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@graph',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @id from expanded graph, if any\n            if('@id' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@id',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@id'];\n            }\n\n            // include @index from expanded graph, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          }\n        } else if(container.includes('@language') ||\n          container.includes('@index') || container.includes('@id') ||\n          container.includes('@type')) {\n          // handle language and index maps\n          // get or create the map object\n          let mapObject;\n          if(nestResult.hasOwnProperty(itemActiveProperty)) {\n            mapObject = nestResult[itemActiveProperty];\n          } else {\n            nestResult[itemActiveProperty] = mapObject = {};\n          }\n\n          let key;\n          if(container.includes('@language')) {\n          // if container is a language map, simplify compacted value to\n          // a simple string\n            if(_isValue(compactedItem)) {\n              compactedItem = compactedItem['@value'];\n            }\n            key = expandedItem['@language'];\n          } else if(container.includes('@index')) {\n            const indexKey = _getContextValue(\n              activeCtx, itemActiveProperty, '@index') || '@index';\n            const containerKey = api.compactIri(\n              {activeCtx, iri: indexKey, relativeTo: {vocab: true}});\n            if(indexKey === '@index') {\n              key = expandedItem['@index'];\n              delete compactedItem[containerKey];\n            } else {\n              let others;\n              [key, ...others] = _asArray(compactedItem[indexKey] || []);\n              if(!_isString(key)) {\n                // Will use @none if it isn't a string.\n                key = null;\n              } else {\n                switch(others.length) {\n                  case 0:\n                    delete compactedItem[indexKey];\n                    break;\n                  case 1:\n                    compactedItem[indexKey] = others[0];\n                    break;\n                  default:\n                    compactedItem[indexKey] = others;\n                    break;\n                }\n              }\n            }\n          } else if(container.includes('@id')) {\n            const idKey = api.compactIri({activeCtx, iri: '@id',\n              relativeTo: {vocab: true}});\n            key = compactedItem[idKey];\n            delete compactedItem[idKey];\n          } else if(container.includes('@type')) {\n            const typeKey = api.compactIri({\n              activeCtx,\n              iri: '@type',\n              relativeTo: {vocab: true}\n            });\n            let types;\n            [key, ...types] = _asArray(compactedItem[typeKey] || []);\n            switch(types.length) {\n              case 0:\n                delete compactedItem[typeKey];\n                break;\n              case 1:\n                compactedItem[typeKey] = types[0];\n                break;\n              default:\n                compactedItem[typeKey] = types;\n                break;\n            }\n\n            // If compactedItem contains a single entry\n            // whose key maps to @id, recompact without @type\n            if(Object.keys(compactedItem).length === 1 &&\n              '@id' in expandedItem) {\n              compactedItem = await api.compact({\n                activeCtx,\n                activeProperty: itemActiveProperty,\n                element: {'@id': expandedItem['@id']},\n                options,\n                compactionMap\n              });\n            }\n          }\n\n          // if compacting this value which has no key, index on @none\n          if(!key) {\n            key = api.compactIri({activeCtx, iri: '@none',\n              relativeTo: {vocab: true}});\n          }\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          _addValue(\n            mapObject, key, compactedItem, {\n              propertyIsArray: container.includes('@set')\n            });\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          const isArray = (!options.compactArrays ||\n            container.includes('@set') || container.includes('@list') ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          _addValue(\n            nestResult, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n * @param base the absolute URL to use for compacting document-relative IRIs.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\napi.compactIri = ({\n  activeCtx,\n  iri,\n  value = null,\n  relativeTo = {vocab: false},\n  reverse = false,\n  base = null\n}) => {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // if context is from a property term scoped context composed with a\n  // type-scoped context, then use the previous context instead\n  if(activeCtx.isPropertyTermScoped && activeCtx.previousContext) {\n    activeCtx = activeCtx.previousContext;\n  }\n\n  const inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it may be compacted to a simple alias\n  if(_isKeyword(iri) &&\n    iri in inverseCtx &&\n    '@none' in inverseCtx[iri] &&\n    '@type' in inverseCtx[iri]['@none'] &&\n    '@none' in inverseCtx[iri]['@none']['@type']) {\n    return inverseCtx[iri]['@none']['@type']['@none'];\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    const defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    const containers = [];\n    if(_isObject(value) && '@index' in value && !('@graph' in value)) {\n      containers.push('@index', '@index@set');\n    }\n\n    // if value is a preserve object, use its value\n    if(_isObject(value) && '@preserve' in value) {\n      value = value['@preserve'][0];\n    }\n\n    // prefer most specific container including @graph, prefering @set\n    // variations\n    if(_isGraph(value)) {\n      // favor indexmap if the graph is indexed\n      if('@index' in value) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // favor idmap if the graph is has an @id\n      if('@id' in value) {\n        containers.push(\n          '@graph@id', '@graph@id@set');\n      }\n      containers.push('@graph', '@graph@set', '@set');\n      // allow indexmap if the graph is not indexed\n      if(!('@index' in value)) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // allow idmap if the graph does not have an @id\n      if(!('@id' in value)) {\n        containers.push('@graph@id', '@graph@id@set');\n      }\n    } else if(_isObject(value) && !_isValue(value)) {\n      containers.push('@id', '@id@set', '@type', '@set@type');\n    }\n\n    // defaults for term selection based on type/language\n    let typeOrLanguage = '@language';\n    let typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      const list = value['@list'];\n      if(list.length === 0) {\n        // any empty list can be matched against any term that uses the\n        // @list container regardless of @type or @language\n        typeOrLanguage = '@any';\n        typeOrLanguageValue = '@none';\n      } else {\n        let commonLanguage = (list.length === 0) ? defaultLanguage : null;\n        let commonType = null;\n        for(let i = 0; i < list.length; ++i) {\n          const item = list[i];\n          let itemLanguage = '@none';\n          let itemType = '@none';\n          if(_isValue(item)) {\n            if('@direction' in item) {\n              const lang = (item['@language'] || '').toLowerCase();\n              const dir = item['@direction'];\n              itemLanguage = `${lang}_${dir}`;\n            } else if('@language' in item) {\n              itemLanguage = item['@language'].toLowerCase();\n            } else if('@type' in item) {\n              itemType = item['@type'];\n            } else {\n              // plain literal\n              itemLanguage = '@null';\n            }\n          } else {\n            itemType = '@id';\n          }\n          if(commonLanguage === null) {\n            commonLanguage = itemLanguage;\n          } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n            commonLanguage = '@none';\n          }\n          if(commonType === null) {\n            commonType = itemType;\n          } else if(itemType !== commonType) {\n            commonType = '@none';\n          }\n          // there are different languages and types in the list, so choose\n          // the most generic term, no need to keep iterating the list\n          if(commonLanguage === '@none' && commonType === '@none') {\n            break;\n          }\n        }\n        commonLanguage = commonLanguage || '@none';\n        commonType = commonType || '@none';\n        if(commonType !== '@none') {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = commonType;\n        } else {\n          typeOrLanguageValue = commonLanguage;\n        }\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language', '@language@set');\n          typeOrLanguageValue = value['@language'];\n          const dir = value['@direction'];\n          if(dir) {\n            typeOrLanguageValue = `${typeOrLanguageValue}_${dir}`;\n          }\n        } else if('@direction' in value && !('@index' in value)) {\n          typeOrLanguageValue = `_${value['@direction']}`;\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n\n    // an index map can be used to index values using @none, so add as a low\n    // priority\n    if(_isObject(value) && !('@index' in value)) {\n      // allow indexing even if no @index present\n      containers.push('@index', '@index@set');\n    }\n\n    // values without type or language can use @language map\n    if(_isValue(value) && Object.keys(value).length === 1) {\n      // allow indexing even if no @index present\n      containers.push('@language', '@language@set');\n    }\n\n    const term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      const vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        const suffix = iri.substr(vocab.length);\n        if(!activeCtx.mappings.has(suffix)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  let choice = null;\n  // TODO: make FastCurieMap a class with a method to do this lookup\n  const partialMatches = [];\n  let iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  const maxPartialLength = iri.length - 1;\n  for(let i = 0; i < maxPartialLength && iri[i] in iriMap; ++i) {\n    iriMap = iriMap[iri[i]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(let i = partialMatches.length - 1; i >= 0; --i) {\n    const entry = partialMatches[i];\n    const terms = entry.terms;\n    for(const term of terms) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      const curie = term + ':' + iri.substr(entry.iri.length);\n      const isUsableCurie = (activeCtx.mappings.get(term)._prefix &&\n        (!activeCtx.mappings.has(curie) ||\n        (value === null && activeCtx.mappings.get(curie)['@id'] === iri)));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // If iri could be confused with a compact IRI using a term in this context,\n  // signal an error\n  for(const [term, td] of activeCtx.mappings) {\n    if(td && td._prefix && iri.startsWith(term + ':')) {\n      throw new JsonLdError(\n        `Absolute IRI \"${iri}\" confused with prefix \"${term}\".`,\n        'jsonld.SyntaxError',\n        {code: 'IRI confused with prefix', context: activeCtx});\n    }\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    if('@base' in activeCtx) {\n      if(!activeCtx['@base']) {\n        // The None case preserves rval as potentially relative\n        return iri;\n      } else {\n        return _removeBase(_prependBase(base, activeCtx['@base']), iri);\n      }\n    } else {\n      return _removeBase(base, iri);\n    }\n  }\n\n  // return IRI as is\n  return iri;\n};\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n * @param {Object} [options] - processing options.\n *\n * @return the compaction result.\n */\napi.compactValue = ({activeCtx, activeProperty, value, options}) => {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    const type = _getContextValue(activeCtx, activeProperty, '@type');\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    const container =\n      _getContextValue(activeCtx, activeProperty, '@container') || [];\n\n    // whether or not the value has an @index that must be preserved\n    const preserveIndex = '@index' in value && !container.includes('@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex && type !== '@none') {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language &&\n         '@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language) {\n        return value['@value'];\n      }\n      if('@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    const keyCount = Object.keys(value).length;\n    const isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && '@index' in value && !preserveIndex));\n    const hasDefaultLanguage = ('@language' in activeCtx);\n    const isValueString = _isString(value['@value']);\n    const hasNullMapping = (activeCtx.mappings.has(activeProperty) &&\n      activeCtx.mappings.get(activeProperty)['@language'] === null);\n    if(isValueOnlyKey &&\n      type !== '@none' &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    const rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@index',\n        relativeTo: {vocab: true}\n      })] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@type',\n        relativeTo: {vocab: true}\n      })] = api.compactIri(\n        {activeCtx, iri: value['@type'], relativeTo: {vocab: true}});\n    } else if('@language' in value) {\n      // alias @language\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@language',\n        relativeTo: {vocab: true}\n      })] = value['@language'];\n    }\n\n    if('@direction' in value) {\n      // alias @direction\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@direction',\n        relativeTo: {vocab: true}\n      })] = value['@direction'];\n    }\n\n    // alias @value\n    rval[api.compactIri({\n      activeCtx,\n      iri: '@value',\n      relativeTo: {vocab: true}\n    })] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  const expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true},\n    options);\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n  const compacted = api.compactIri({\n    activeCtx,\n    iri: value['@id'],\n    relativeTo: {vocab: type === '@vocab'},\n    base: options.base});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  return {\n    [api.compactIri({\n      activeCtx,\n      iri: '@id',\n      relativeTo: {vocab: true}\n    })]: compacted\n  };\n};\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  const prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isObject(value) && '@id' in value) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    const term = api.compactIri(\n      {activeCtx, iri: value['@id'], relativeTo: {vocab: true}});\n    if(activeCtx.mappings.has(term) &&\n      activeCtx.mappings.get(term) &&\n      activeCtx.mappings.get(term)['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n\n    // consider direction only\n    const langDir = prefs.find(el => el.includes('_'));\n    if(langDir) {\n      // consider _dir portion\n      prefs.push(langDir.replace(/^[^_]+_/, '_'));\n    }\n  }\n  prefs.push('@none');\n\n  const containerMap = activeCtx.inverse[iri];\n  for(const container of containers) {\n    // if container not available in the map, continue\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    const typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(const pref of prefs) {\n      // if type/language option not available in the map, continue\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * The value of `@nest` in the term definition must either be `@nest`, or a term\n * which resolves to `@nest`.\n *\n * @param activeCtx the active context.\n * @param nestProperty a term in the active context or `@nest`.\n * @param {Object} [options] - processing options.\n */\nfunction _checkNestProperty(activeCtx, nestProperty, options) {\n  if(_expandIri(activeCtx, nestProperty, {vocab: true}, options) !== '@nest') {\n    throw new JsonLdError(\n      'JSON-LD compact error; nested property must have an @nest value ' +\n      'resolving to @nest.',\n      'jsonld.SyntaxError', {code: 'invalid @nest value'});\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = jsonld => {\n  class JsonLdProcessor {\n    toString() {\n      return '[object JsonLdProcessor]';\n    }\n  }\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      return Promise.reject(\n        new TypeError('Could not compact, too few arguments.'));\n    }\n    return jsonld.compact(input, ctx);\n  };\n  JsonLdProcessor.expand = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not expand, too few arguments.'));\n    }\n    return jsonld.expand(input);\n  };\n  JsonLdProcessor.flatten = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not flatten, too few arguments.'));\n    }\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case '[':\n      if (this._n3Mode) {\n        // Start a new quad with a new blank node as subject\n        this._saveContext('blank', this._graph, this._subject,\n                          this._subject = this._blankNode(), null);\n        return this._readBlankNodeHead;\n      }\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the object, restore previous context and read punctuation\n    if (this._object !== null)\n      return this._getContextEndReader();\n    // If the blank node was the predicate, continue reading the object\n    else if (this._predicate !== null)\n      return this._readObject;\n    // If the blank node was the subject, continue reading the predicate\n    else\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n"],"sourceRoot":""}